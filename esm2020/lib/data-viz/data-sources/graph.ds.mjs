import { DataSource } from '@n7-frontend/core';
export class DvGraphDS extends DataSource {
    transform() {
        return {
            containerId: 'test-Chart',
            libOptions: {
                chart: {
                    height: 550,
                    width: 1500,
                    type: 'area',
                    toolbar: { show: true },
                },
                dataLabels: { enabled: false },
                colors: ['rgba(15,200,255)'],
                fill: {
                    colors: ['#0fc8ff'],
                    gradient: { opacityFrom: 0.5, opacityTo: 0.1 },
                },
                stroke: { curve: 'straight', width: [2, 1] },
                series: [
                    {
                        name: 'Reddish value',
                        data: [['2019-08-01', '770.17'], ['2019-08-02', '645.03'],
                            ['2019-08-03', '709.32'], ['2019-08-04', '708.11'],
                            ['2019-08-05', '706.59'], ['2019-08-06', '607.28'],
                            ['2019-08-07', '494.59'], ['2019-08-08', '636.81'],
                            ['2019-08-09', '709.04'], ['2019-08-10', '717.31'],
                            ['2019-08-11', '805.61'], ['2019-08-12', '758.60'],
                            ['2019-08-13', '612.82'], ['2019-08-14', '608.90'],
                            ['2019-08-15', '734.68'], ['2019-08-16', '838.54'],
                            ['2019-08-17', '692.88']],
                    },
                ],
                grid: {
                    borderColor: '#e7e7e7',
                    strokeDashArray: 3,
                    xaxis: { lines: { show: true } },
                },
                markers: { size: 3, hover: { size: 6 } },
                xaxis: {
                    axisBorder: { show: true, color: '#f4f6fc' },
                    labels: {},
                    type: 'datetime',
                    tickAmount: 6,
                },
                yaxis: [
                    {
                        show: true,
                        showAlways: false,
                        opposite: false,
                        reversed: false,
                        logarithmic: false,
                        forceNiceScale: false,
                        floating: false,
                        labels: {
                            show: true,
                            minWidth: 0,
                            maxWidth: 160,
                            offsetX: 0,
                            offsetY: 0,
                            rotate: 0,
                            padding: 20,
                            style: { colors: [], fontSize: '11px', cssClass: '' },
                        },
                        axisBorder: {
                            show: true, color: '#f4f6fc', offsetX: 0, offsetY: 0,
                        },
                        axisTicks: {
                            show: false, color: '#78909C', width: 6, offsetX: 0, offsetY: 0,
                        },
                        title: {
                            text: 'P Totale Â°C', rotate: 90, offsetY: 0, offsetX: 0, style: { fontSize: '11px', cssClass: '' },
                        },
                        tooltip: { enabled: false, offsetX: 0 },
                        crosshairs: { show: true, position: 'front', stroke: { color: '#b6b6b6', width: 1, dashArray: 0 } },
                    },
                ],
                legend: { show: true },
                tooltip: {},
                annotations: { yaxis: [], xaxis: [], points: [] },
            },
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhcGguZHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uNy1ib2lsZXJwbGF0ZS1saWIvc3JjL2xpYi9kYXRhLXZpei9kYXRhLXNvdXJjZXMvZ3JhcGguZHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRS9DLE1BQU0sT0FBTyxTQUFVLFNBQVEsVUFBVTtJQUM3QixTQUFTO1FBQ2pCLE9BQU87WUFDTCxXQUFXLEVBQUUsWUFBWTtZQUN6QixVQUFVLEVBQUU7Z0JBQ1YsS0FBSyxFQUFFO29CQUNMLE1BQU0sRUFBRSxHQUFHO29CQUNYLEtBQUssRUFBRSxJQUFJO29CQUNYLElBQUksRUFBRSxNQUFNO29CQUNaLE9BQU8sRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7aUJBQ3hCO2dCQUNELFVBQVUsRUFBRSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUU7Z0JBQzlCLE1BQU0sRUFBRSxDQUFDLGtCQUFrQixDQUFDO2dCQUM1QixJQUFJLEVBQUU7b0JBQ0osTUFBTSxFQUFFLENBQUMsU0FBUyxDQUFDO29CQUNuQixRQUFRLEVBQUUsRUFBRSxXQUFXLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxHQUFHLEVBQUU7aUJBQy9DO2dCQUNELE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFO2dCQUM1QyxNQUFNLEVBQUU7b0JBQ047d0JBQ0UsSUFBSSxFQUFFLGVBQWU7d0JBQ3JCLElBQUksRUFBRSxDQUFDLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQzs0QkFDdkQsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDOzRCQUNsRCxDQUFD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Z0JBQ0QsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRTtnQkFDdEIsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsV0FBVyxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUU7YUFDbEQ7U0FDRixDQUFDO0lBQ0osQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0YVNvdXJjZSB9IGZyb20gJ0BuNy1mcm9udGVuZC9jb3JlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBEdkdyYXBoRFMgZXh0ZW5kcyBEYXRhU291cmNlIHtcclxuICBwcm90ZWN0ZWQgdHJhbnNmb3JtKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgY29udGFpbmVySWQ6ICd0ZXN0LUNoYXJ0JyxcclxuICAgICAgbGliT3B0aW9uczoge1xyXG4gICAgICAgIGNoYXJ0OiB7XHJcbiAgICAgICAgICBoZWlnaHQ6IDU1MCxcclxuICAgICAgICAgIHdpZHRoOiAxNTAwLFxyXG4gICAgICAgICAgdHlwZTogJ2FyZWEnLFxyXG4gICAgICAgICAgdG9vbGJhcjogeyBzaG93OiB0cnVlIH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgICBkYXRhTGFiZWxzOiB7IGVuYWJsZWQ6IGZhbHNlIH0sXHJcbiAgICAgICAgY29sb3JzOiBbJ3JnYmEoMTUsMjAwLDI1NSknXSxcclxuICAgICAgICBmaWxsOiB7XHJcbiAgICAgICAgICBjb2xvcnM6IFsnIzBmYzhmZiddLFxyXG4gICAgICAgICAgZ3JhZGllbnQ6IHsgb3BhY2l0eUZyb206IDAuNSwgb3BhY2l0eVRvOiAwLjEgfSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHN0cm9rZTogeyBjdXJ2ZTogJ3N0cmFpZ2h0Jywgd2lkdGg6IFsyLCAxXSB9LFxyXG4gICAgICAgIHNlcmllczogW1xyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAnUmVkZGlzaCB2YWx1ZScsXHJcbiAgICAgICAgICAgIGRhdGE6IFtbJzIwMTktMDgtMDEnLCAnNzcwLjE3J10sIFsnMjAxOS0wOC0wMicsICc2NDUuMDMnXSxcclxuICAgICAgICAgICAgICBbJzIwMTktMDgtMDMnLCAnNzA5LjMyJ10sIFsnMjAxOS0wOC0wNCcsICc3MDguMTEnXSxcclxuICAgICAgICAgICAgICBbJzIwMTktMDgtMDUnLCAnNzA2LjU5J10sIFsnMjAxOS0wOC0wNicsICc2MDcuMjgnXSxcclxuICAgICAgICAgICAgICBbJzIwMTktMDgtMDcnLCAnNDk0LjU5J10sIFsnMjAxOS0wOC0wOCcsICc2MzYuODEnXSxcclxuICAgICAgICAgICAgICBbJzIwMTktMDgtMDknLCAnNzA5LjA0J10sIFsnMjAxOS0wOC0xMCcsICc3MTcuMzEnXSxcclxuICAgICAgICAgICAgICBbJzIwMTktMDgtMTEnLCAnODA1LjYxJ10sIFsnMjAxOS0wOC0xMicsICc3NTguNjAnXSxcclxuICAgICAgICAgICAgICBbJzIwMTktMDgtMTMnLCAnNjEyLjgyJ10sIFsnMjAxOS0wOC0xNCcsICc2MDguOTAnXSxcclxuICAgICAgICAgICAgICBbJzIwMTktMDgtMTUnLCAnNzM0LjY4J10sIFsnMjAxOS0wOC0xNicsICc4MzguNTQnXSxcclxuICAgICAgICAgICAgICBbJzIwMTktMDgtMTcnLCAnNjkyLjg4J11dLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICBdLFxyXG4gICAgICAgIGdyaWQ6IHtcclxuICAgICAgICAgIGJvcmRlckNvbG9yOiAnI2U3ZTdlNycsXHJcbiAgICAgICAgICBzdHJva2VEYXNoQXJyYXk6IDMsXHJcbiAgICAgICAgICB4YXhpczogeyBsaW5lczogeyBzaG93OiB0cnVlIH0gfSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIG1hcmtlcnM6IHsgc2l6ZTogMywgaG92ZXI6IHsgc2l6ZTogNiB9IH0sXHJcbiAgICAgICAgeGF4aXM6IHtcclxuICAgICAgICAgIGF4aXNCb3JkZXI6IHsgc2hvdzogdHJ1ZSwgY29sb3I6ICcjZjRmNmZjJyB9LFxyXG4gICAgICAgICAgbGFiZWxzOiB7fSxcclxuICAgICAgICAgIHR5cGU6ICdkYXRldGltZScsXHJcbiAgICAgICAgICB0aWNrQW1vdW50OiA2LFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgeWF4aXM6IFtcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgc2hvdzogdHJ1ZSxcclxuICAgICAgICAgICAgc2hvd0Fsd2F5czogZmFsc2UsXHJcbiAgICAgICAgICAgIG9wcG9zaXRlOiBmYWxzZSxcclxuICAgICAgICAgICAgcmV2ZXJzZWQ6IGZhbHNlLFxyXG4gICAgICAgICAgICBsb2dhcml0aG1pYzogZmFsc2UsXHJcbiAgICAgICAgICAgIGZvcmNlTmljZVNjYWxlOiBmYWxzZSxcclxuICAgICAgICAgICAgZmxvYXRpbmc6IGZhbHNlLFxyXG4gICAgICAgICAgICBsYWJlbHM6IHtcclxuICAgICAgICAgICAgICBzaG93OiB0cnVlLFxyXG4gICAgICAgICAgICAgIG1pbldpZHRoOiAwLFxyXG4gICAgICAgICAgICAgIG1heFdpZHRoOiAxNjAsXHJcbiAgICAgICAgICAgICAgb2Zmc2V0WDogMCxcclxuICAgICAgICAgICAgICBvZmZzZXRZOiAwLFxyXG4gICAgICAgICAgICAgIHJvdGF0ZTogMCxcclxuICAgICAgICAgICAgICBwYWRkaW5nOiAyMCxcclxuICAgICAgICAgICAgICBzdHlsZTogeyBjb2xvcnM6IFtdLCBmb250U2l6ZTogJzExcHgnLCBjc3NDbGFzczogJycgfSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgYXhpc0JvcmRlcjoge1xyXG4gICAgICAgICAgICAgIHNob3c6IHRydWUsIGNvbG9yOiAnI2Y0ZjZmYycsIG9mZnNldFg6IDAsIG9mZnNldFk6IDAsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGF4aXNUaWNrczoge1xyXG4gICAgICAgICAgICAgIHNob3c6IGZhbHNlLCBjb2xvcjogJyM3ODkwOUMnLCB3aWR0aDogNiwgb2Zmc2V0WDogMCwgb2Zmc2V0WTogMCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgdGl0bGU6IHtcclxuICAgICAgICAgICAgICB0ZXh0OiAnUCBUb3RhbGUgwrBDJywgcm90YXRlOiA5MCwgb2Zmc2V0WTogMCwgb2Zmc2V0WDogMCwgc3R5bGU6IHsgZm9udFNpemU6ICcxMXB4JywgY3NzQ2xhc3M6ICcnIH0sXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHRvb2x0aXA6IHsgZW5hYmxlZDogZmFsc2UsIG9mZnNldFg6IDAgfSxcclxuICAgICAgICAgICAgY3Jvc3NoYWlyczogeyBzaG93OiB0cnVlLCBwb3NpdGlvbjogJ2Zyb250Jywgc3Ryb2tlOiB7IGNvbG9yOiAnI2I2YjZiNicsIHdpZHRoOiAxLCBkYXNoQXJyYXk6IDAgfSB9LFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICBdLFxyXG4gICAgICAgIGxlZ2VuZDogeyBzaG93OiB0cnVlIH0sXHJcbiAgICAgICAgdG9vbHRpcDoge30sXHJcbiAgICAgICAgYW5ub3RhdGlvbnM6IHsgeWF4aXM6IFtdLCB4YXhpczogW10sIHBvaW50czogW10gfSxcclxuICAgICAgfSxcclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==