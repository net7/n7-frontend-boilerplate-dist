import { DataSource } from '@n7-frontend/core';
import { apexHandler } from '../../models/apex/apex-handler';
export class ApexChartItemDS extends DataSource {
    transform(data) {
        return data;
    }
    update(newData) {
        const formattedData = apexHandler.transform({
            data: newData,
            id: this.id,
            type: this.type,
            options: this.options,
        });
        if (this.instance) {
            // lib api update
            this.instance.updateOptions(formattedData.libOptions);
        }
        else {
            formattedData.setChart = (chart) => {
                this.instance = chart;
            };
            this.run(formattedData);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBleC1jaGFydC1pdGVtLmRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbjctYm9pbGVycGxhdGUtbGliL3NyYy9saWIvZGF0YS12aXovZGF0YS1zb3VyY2VzL2NhcmQtaXRlbXMvYXBleC1jaGFydC1pdGVtLmRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFHN0QsTUFBTSxPQUFPLGVBQWdCLFNBQVEsVUFBVTtJQU9uQyxTQUFTLENBQUMsSUFBZTtRQUNqQyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxNQUFNLENBQUMsT0FBMEI7UUFDL0IsTUFBTSxhQUFhLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQztZQUMxQyxJQUFJLEVBQUUsT0FBTztZQUNiLEVBQUUsRUFBRSxJQUFJLENBQUMsRUFBRTtZQUNYLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtZQUNmLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTztTQUN0QixDQUFDLENBQUM7UUFDSCxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsaUJBQWlCO1lBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQztTQUN2RDthQUFNO1lBQ0wsYUFBYSxDQUFDLFFBQVEsR0FBRyxDQUFDLEtBQUssRUFBRSxFQUFFO2dCQUNqQyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztZQUN4QixDQUFDLENBQUM7WUFDRixJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhcnREYXRhIH0gZnJvbSAnQG43LWZyb250ZW5kL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgRGF0YVNvdXJjZSB9IGZyb20gJ0BuNy1mcm9udGVuZC9jb3JlJztcbmltcG9ydCB7IGFwZXhIYW5kbGVyIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2FwZXgvYXBleC1oYW5kbGVyJztcbmltcG9ydCB7IENoYXJ0UmVzcG9uc2VEYXRhIH0gZnJvbSAnLi4vLi4vdHlwZXMvcmVzcG9uc2UudHlwZXMnO1xuXG5leHBvcnQgY2xhc3MgQXBleENoYXJ0SXRlbURTIGV4dGVuZHMgRGF0YVNvdXJjZSB7XG4gIGlkOiBzdHJpbmc7XG5cbiAgdHlwZTogc3RyaW5nO1xuXG4gIGluc3RhbmNlOiBhbnk7XG5cbiAgcHJvdGVjdGVkIHRyYW5zZm9ybShkYXRhOiBDaGFydERhdGEpOiBDaGFydERhdGEge1xuICAgIHJldHVybiBkYXRhO1xuICB9XG5cbiAgdXBkYXRlKG5ld0RhdGE6IENoYXJ0UmVzcG9uc2VEYXRhKSB7XG4gICAgY29uc3QgZm9ybWF0dGVkRGF0YSA9IGFwZXhIYW5kbGVyLnRyYW5zZm9ybSh7XG4gICAgICBkYXRhOiBuZXdEYXRhLFxuICAgICAgaWQ6IHRoaXMuaWQsXG4gICAgICB0eXBlOiB0aGlzLnR5cGUsXG4gICAgICBvcHRpb25zOiB0aGlzLm9wdGlvbnMsXG4gICAgfSk7XG4gICAgaWYgKHRoaXMuaW5zdGFuY2UpIHtcbiAgICAgIC8vIGxpYiBhcGkgdXBkYXRlXG4gICAgICB0aGlzLmluc3RhbmNlLnVwZGF0ZU9wdGlvbnMoZm9ybWF0dGVkRGF0YS5saWJPcHRpb25zKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9ybWF0dGVkRGF0YS5zZXRDaGFydCA9IChjaGFydCkgPT4ge1xuICAgICAgICB0aGlzLmluc3RhbmNlID0gY2hhcnQ7XG4gICAgICB9O1xuICAgICAgdGhpcy5ydW4oZm9ybWF0dGVkRGF0YSk7XG4gICAgfVxuICB9XG59XG4iXX0=