import { isObject } from 'lodash';
const getSeries = (series) => series.map(({ id, name, data }) => ({
    id,
    name,
    data: data.map((point) => (isObject(point) ? point.value : point))
}));
const getSeriesMetadata = (series) => series.map(({ data }) => {
    const serieMetadata = [];
    data.forEach((point) => {
        if (isObject(point)) {
            serieMetadata.push(point?.metadata || null);
        }
        else {
            serieMetadata.push(null);
        }
    });
    return serieMetadata;
});
export default {
    getContainerId: (id) => `chart-${id}`,
    getSeries,
    getSeriesMetadata
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBleC1oZWxwZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbjctYm9pbGVycGxhdGUtbGliL3NyYy9saWIvZGF0YS12aXovbW9kZWxzL2FwZXgvYXBleC1oZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFHbEMsTUFBTSxTQUFTLEdBQUcsQ0FDaEIsTUFBNkIsRUFDUixFQUFFLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUM1RCxFQUFFO0lBQ0YsSUFBSTtJQUNKLElBQUksRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7Q0FDbkUsQ0FBQyxDQUFDLENBQUM7QUFFSixNQUFNLGlCQUFpQixHQUFHLENBQ3hCLE1BQTZCLEVBQ25CLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQztJQUN6QixJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7UUFDckIsSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDbkIsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsUUFBUSxJQUFJLElBQUksQ0FBQyxDQUFDO1NBQzdDO2FBQU07WUFDTCxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzFCO0lBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDSCxPQUFPLGFBQWEsQ0FBQztBQUN2QixDQUFDLENBQUMsQ0FBQztBQUVILGVBQWU7SUFDYixjQUFjLEVBQUUsQ0FBQyxFQUFVLEVBQUUsRUFBRSxDQUFDLFNBQVMsRUFBRSxFQUFFO0lBQzdDLFNBQVM7SUFDVCxpQkFBaUI7Q0FDbEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzT2JqZWN0IH0gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IENoYXJ0UmVzcG9uc2VTZXJpZXMgfSBmcm9tICcuLi8uLi90eXBlcy9yZXNwb25zZS50eXBlcyc7XG5cbmNvbnN0IGdldFNlcmllcyA9IChcbiAgc2VyaWVzOiBDaGFydFJlc3BvbnNlU2VyaWVzW11cbik6IEFwZXhBeGlzQ2hhcnRTZXJpZXMgPT4gc2VyaWVzLm1hcCgoeyBpZCwgbmFtZSwgZGF0YSB9KSA9PiAoe1xuICBpZCxcbiAgbmFtZSxcbiAgZGF0YTogZGF0YS5tYXAoKHBvaW50KSA9PiAoaXNPYmplY3QocG9pbnQpID8gcG9pbnQudmFsdWUgOiBwb2ludCkpXG59KSk7XG5cbmNvbnN0IGdldFNlcmllc01ldGFkYXRhID0gKFxuICBzZXJpZXM6IENoYXJ0UmVzcG9uc2VTZXJpZXNbXVxuKTogb2JqZWN0W10gPT4gc2VyaWVzLm1hcCgoeyBkYXRhIH0pID0+IHtcbiAgY29uc3Qgc2VyaWVNZXRhZGF0YSA9IFtdO1xuICBkYXRhLmZvckVhY2goKHBvaW50KSA9PiB7XG4gICAgaWYgKGlzT2JqZWN0KHBvaW50KSkge1xuICAgICAgc2VyaWVNZXRhZGF0YS5wdXNoKHBvaW50Py5tZXRhZGF0YSB8fCBudWxsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2VyaWVNZXRhZGF0YS5wdXNoKG51bGwpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBzZXJpZU1ldGFkYXRhO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZ2V0Q29udGFpbmVySWQ6IChpZDogc3RyaW5nKSA9PiBgY2hhcnQtJHtpZH1gLFxuICBnZXRTZXJpZXMsXG4gIGdldFNlcmllc01ldGFkYXRhXG59O1xuIl19