import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../card-text-item/card-text-item";
import * as i2 from "@n7-frontend/components";
import * as i3 from "@angular/common";
export class CardComponent {
}
CardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: CardComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.2", type: CardComponent, selector: "dv-card", inputs: { data: "data", emit: "emit" }, ngImport: i0, template: "<div *ngIf=\"data\" class=\"dv-card {{ data.classes || '' }}\">\r\n    <ng-container *ngFor=\"let area of ['header', 'content', 'footer']\">\r\n        <div *ngIf=\"data[area]\" class=\"dv-card__{{ area }}\">\r\n            <section *ngFor=\"let section of data[area].sections\" class=\"dv-card__section {{ section.classes || '' }}\">\r\n                <ng-container *ngTemplateOutlet=\"blocks; context: { $implicit: section.items }\"></ng-container>\r\n            </section>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n\r\n<ng-template #blocks let-items>\r\n    <ng-container *ngFor=\"let item of items\">\r\n        <div class=\"{{ 'dv-card__item dv-card__' + item.type }}\">\r\n            <!-- TEXT -->\r\n            <ng-container *ngIf=\"item.type === 'text'\">\r\n                <dv-card-text-item \r\n                [data]=\"data.widgets[item.id].ds.out$ | async\"\r\n                [emit]=\"data.widgets[item.id].emit\"></dv-card-text-item> \r\n            </ng-container> \r\n\r\n            <!-- DATA WIDGET -->\r\n            <ng-container *ngIf=\"item.type === 'data-widget'\">\r\n                <n7-data-widget \r\n                [data]=\"data.widgets[item.id].ds.out$ | async\"\r\n                [emit]=\"data.widgets[item.id].emit\"></n7-data-widget> \r\n            </ng-container> \r\n\r\n            <!-- TABLE -->\r\n            <ng-container *ngIf=\"item.type === 'table'\">\r\n                <n7-table \r\n                [data]=\"data.widgets[item.id].ds.out$ | async\"\r\n                [emit]=\"data.widgets[item.id].emit\"></n7-table> \r\n            </ng-container> \r\n\r\n            <!-- INNER TITLE -->\r\n            <ng-container *ngIf=\"item.type === 'inner-title'\">\r\n                <n7-inner-title \r\n                [data]=\"data.widgets[item.id].ds.out$ | async\"\r\n                [emit]=\"data.widgets[item.id].emit\"></n7-inner-title> \r\n            </ng-container> \r\n\r\n            <!-- SELECT -->\r\n            <ng-container *ngIf=\"item.type === 'select'\">\r\n                <n7-input-select \r\n                [data]=\"data.widgets[item.id].ds.out$ | async\"\r\n                [emit]=\"data.widgets[item.id].emit\"></n7-input-select> \r\n            </ng-container> \r\n\r\n            <!-- APEX CHARTS -->\r\n            <ng-container *ngIf=\"item.type.includes('apex')\">\r\n                <n7-chart [data]=\"data.widgets[item.id].ds.out$ | async\"></n7-chart> \r\n            </ng-container> \r\n\r\n            <!-- MAP -->\r\n            <ng-container *ngIf=\"item.type === 'map'\">\r\n                <n7-map [data]=\"data.widgets[item.id].ds.out$ | async\"></n7-map> \r\n            </ng-container> \r\n        </div>\r\n    </ng-container>\r\n</ng-template>", components: [{ type: i1.CardTextItemComponent, selector: "dv-card-text-item", inputs: ["data", "emit"] }, { type: i2.DataWidgetComponent, selector: "n7-data-widget", inputs: ["data", "emit"] }, { type: i2.TableComponent, selector: "n7-table", inputs: ["data", "emit"] }, { type: i2.InnerTitleComponent, selector: "n7-inner-title", inputs: ["data", "emit"] }, { type: i2.InputSelectComponent, selector: "n7-input-select", inputs: ["data", "emit"] }, { type: i2.ChartComponent, selector: "n7-chart", inputs: ["data", "emit"] }, { type: i2.MapComponent, selector: "n7-map", inputs: ["data", "emit"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "async": i3.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: CardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dv-card', template: "<div *ngIf=\"data\" class=\"dv-card {{ data.classes || '' }}\">\r\n    <ng-container *ngFor=\"let area of ['header', 'content', 'footer']\">\r\n        <div *ngIf=\"data[area]\" class=\"dv-card__{{ area }}\">\r\n            <section *ngFor=\"let section of data[area].sections\" class=\"dv-card__section {{ section.classes || '' }}\">\r\n                <ng-container *ngTemplateOutlet=\"blocks; context: { $implicit: section.items }\"></ng-container>\r\n            </section>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n\r\n<ng-template #blocks let-items>\r\n    <ng-container *ngFor=\"let item of items\">\r\n        <div class=\"{{ 'dv-card__item dv-card__' + item.type }}\">\r\n            <!-- TEXT -->\r\n            <ng-container *ngIf=\"item.type === 'text'\">\r\n                <dv-card-text-item \r\n                [data]=\"data.widgets[item.id].ds.out$ | async\"\r\n                [emit]=\"data.widgets[item.id].emit\"></dv-card-text-item> \r\n            </ng-container> \r\n\r\n            <!-- DATA WIDGET -->\r\n            <ng-container *ngIf=\"item.type === 'data-widget'\">\r\n                <n7-data-widget \r\n                [data]=\"data.widgets[item.id].ds.out$ | async\"\r\n                [emit]=\"data.widgets[item.id].emit\"></n7-data-widget> \r\n            </ng-container> \r\n\r\n            <!-- TABLE -->\r\n            <ng-container *ngIf=\"item.type === 'table'\">\r\n                <n7-table \r\n                [data]=\"data.widgets[item.id].ds.out$ | async\"\r\n                [emit]=\"data.widgets[item.id].emit\"></n7-table> \r\n            </ng-container> \r\n\r\n            <!-- INNER TITLE -->\r\n            <ng-container *ngIf=\"item.type === 'inner-title'\">\r\n                <n7-inner-title \r\n                [data]=\"data.widgets[item.id].ds.out$ | async\"\r\n                [emit]=\"data.widgets[item.id].emit\"></n7-inner-title> \r\n            </ng-container> \r\n\r\n            <!-- SELECT -->\r\n            <ng-container *ngIf=\"item.type === 'select'\">\r\n                <n7-input-select \r\n                [data]=\"data.widgets[item.id].ds.out$ | async\"\r\n                [emit]=\"data.widgets[item.id].emit\"></n7-input-select> \r\n            </ng-container> \r\n\r\n            <!-- APEX CHARTS -->\r\n            <ng-container *ngIf=\"item.type.includes('apex')\">\r\n                <n7-chart [data]=\"data.widgets[item.id].ds.out$ | async\"></n7-chart> \r\n            </ng-container> \r\n\r\n            <!-- MAP -->\r\n            <ng-container *ngIf=\"item.type === 'map'\">\r\n                <n7-map [data]=\"data.widgets[item.id].ds.out$ | async\"></n7-map> \r\n            </ng-container> \r\n        </div>\r\n    </ng-container>\r\n</ng-template>" }]
        }], propDecorators: { data: [{
                type: Input
            }], emit: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL243LWJvaWxlcnBsYXRlLWxpYi9zcmMvbGliL2RhdGEtdml6L2NvbXBvbmVudHMvY2FyZC9jYXJkLnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbjctYm9pbGVycGxhdGUtbGliL3NyYy9saWIvZGF0YS12aXovY29tcG9uZW50cy9jYXJkL2NhcmQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFPakQsTUFBTSxPQUFPLGFBQWE7OzBHQUFiLGFBQWE7OEZBQWIsYUFBYSx1RkNQMUIsMnJGQTJEYzsyRkRwREQsYUFBYTtrQkFKekIsU0FBUzsrQkFDRSxTQUFTOzhCQUlSLElBQUk7c0JBQVosS0FBSztnQkFFRyxJQUFJO3NCQUFaLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENhcmREYXRhV2l0aFdpZGdldHMgfSBmcm9tICcuLi8uLi90eXBlcy9jYXJkLnR5cGVzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnZHYtY2FyZCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2NhcmQuaHRtbCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDYXJkQ29tcG9uZW50IHtcclxuICAgIEBJbnB1dCgpIGRhdGE6IENhcmREYXRhV2l0aFdpZGdldHM7XHJcblxyXG4gICAgQElucHV0KCkgZW1pdDogKHR5cGU6IHN0cmluZywgcGF5bG9hZDogYW55KSA9PiB2b2lkO1xyXG59XHJcbiIsIjxkaXYgKm5nSWY9XCJkYXRhXCIgY2xhc3M9XCJkdi1jYXJkIHt7IGRhdGEuY2xhc3NlcyB8fCAnJyB9fVwiPlxyXG4gICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgYXJlYSBvZiBbJ2hlYWRlcicsICdjb250ZW50JywgJ2Zvb3RlciddXCI+XHJcbiAgICAgICAgPGRpdiAqbmdJZj1cImRhdGFbYXJlYV1cIiBjbGFzcz1cImR2LWNhcmRfX3t7IGFyZWEgfX1cIj5cclxuICAgICAgICAgICAgPHNlY3Rpb24gKm5nRm9yPVwibGV0IHNlY3Rpb24gb2YgZGF0YVthcmVhXS5zZWN0aW9uc1wiIGNsYXNzPVwiZHYtY2FyZF9fc2VjdGlvbiB7eyBzZWN0aW9uLmNsYXNzZXMgfHwgJycgfX1cIj5cclxuICAgICAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJibG9ja3M7IGNvbnRleHQ6IHsgJGltcGxpY2l0OiBzZWN0aW9uLml0ZW1zIH1cIj48L25nLWNvbnRhaW5lcj5cclxuICAgICAgICAgICAgPC9zZWN0aW9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9uZy1jb250YWluZXI+XHJcbjwvZGl2PlxyXG5cclxuPG5nLXRlbXBsYXRlICNibG9ja3MgbGV0LWl0ZW1zPlxyXG4gICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgaXRlbSBvZiBpdGVtc1wiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ7eyAnZHYtY2FyZF9faXRlbSBkdi1jYXJkX18nICsgaXRlbS50eXBlIH19XCI+XHJcbiAgICAgICAgICAgIDwhLS0gVEVYVCAtLT5cclxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIml0ZW0udHlwZSA9PT0gJ3RleHQnXCI+XHJcbiAgICAgICAgICAgICAgICA8ZHYtY2FyZC10ZXh0LWl0ZW0gXHJcbiAgICAgICAgICAgICAgICBbZGF0YV09XCJkYXRhLndpZGdldHNbaXRlbS5pZF0uZHMub3V0JCB8IGFzeW5jXCJcclxuICAgICAgICAgICAgICAgIFtlbWl0XT1cImRhdGEud2lkZ2V0c1tpdGVtLmlkXS5lbWl0XCI+PC9kdi1jYXJkLXRleHQtaXRlbT4gXHJcbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPiBcclxuXHJcbiAgICAgICAgICAgIDwhLS0gREFUQSBXSURHRVQgLS0+XHJcbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJpdGVtLnR5cGUgPT09ICdkYXRhLXdpZGdldCdcIj5cclxuICAgICAgICAgICAgICAgIDxuNy1kYXRhLXdpZGdldCBcclxuICAgICAgICAgICAgICAgIFtkYXRhXT1cImRhdGEud2lkZ2V0c1tpdGVtLmlkXS5kcy5vdXQkIHwgYXN5bmNcIlxyXG4gICAgICAgICAgICAgICAgW2VtaXRdPVwiZGF0YS53aWRnZXRzW2l0ZW0uaWRdLmVtaXRcIj48L243LWRhdGEtd2lkZ2V0PiBcclxuICAgICAgICAgICAgPC9uZy1jb250YWluZXI+IFxyXG5cclxuICAgICAgICAgICAgPCEtLSBUQUJMRSAtLT5cclxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIml0ZW0udHlwZSA9PT0gJ3RhYmxlJ1wiPlxyXG4gICAgICAgICAgICAgICAgPG43LXRhYmxlIFxyXG4gICAgICAgICAgICAgICAgW2RhdGFdPVwiZGF0YS53aWRnZXRzW2l0ZW0uaWRdLmRzLm91dCQgfCBhc3luY1wiXHJcbiAgICAgICAgICAgICAgICBbZW1pdF09XCJkYXRhLndpZGdldHNbaXRlbS5pZF0uZW1pdFwiPjwvbjctdGFibGU+IFxyXG4gICAgICAgICAgICA8L25nLWNvbnRhaW5lcj4gXHJcblxyXG4gICAgICAgICAgICA8IS0tIElOTkVSIFRJVExFIC0tPlxyXG4gICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiaXRlbS50eXBlID09PSAnaW5uZXItdGl0bGUnXCI+XHJcbiAgICAgICAgICAgICAgICA8bjctaW5uZXItdGl0bGUgXHJcbiAgICAgICAgICAgICAgICBbZGF0YV09XCJkYXRhLndpZGdldHNbaXRlbS5pZF0uZHMub3V0JCB8IGFzeW5jXCJcclxuICAgICAgICAgICAgICAgIFtlbWl0XT1cImRhdGEud2lkZ2V0c1tpdGVtLmlkXS5lbWl0XCI+PC9uNy1pbm5lci10aXRsZT4gXHJcbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPiBcclxuXHJcbiAgICAgICAgICAgIDwhLS0gU0VMRUNUIC0tPlxyXG4gICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiaXRlbS50eXBlID09PSAnc2VsZWN0J1wiPlxyXG4gICAgICAgICAgICAgICAgPG43LWlucHV0LXNlbGVjdCBcclxuICAgICAgICAgICAgICAgIFtkYXRhXT1cImRhdGEud2lkZ2V0c1tpdGVtLmlkXS5kcy5vdXQkIHwgYXN5bmNcIlxyXG4gICAgICAgICAgICAgICAgW2VtaXRdPVwiZGF0YS53aWRnZXRzW2l0ZW0uaWRdLmVtaXRcIj48L243LWlucHV0LXNlbGVjdD4gXHJcbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPiBcclxuXHJcbiAgICAgICAgICAgIDwhLS0gQVBFWCBDSEFSVFMgLS0+XHJcbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJpdGVtLnR5cGUuaW5jbHVkZXMoJ2FwZXgnKVwiPlxyXG4gICAgICAgICAgICAgICAgPG43LWNoYXJ0IFtkYXRhXT1cImRhdGEud2lkZ2V0c1tpdGVtLmlkXS5kcy5vdXQkIHwgYXN5bmNcIj48L243LWNoYXJ0PiBcclxuICAgICAgICAgICAgPC9uZy1jb250YWluZXI+IFxyXG5cclxuICAgICAgICAgICAgPCEtLSBNQVAgLS0+XHJcbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJpdGVtLnR5cGUgPT09ICdtYXAnXCI+XHJcbiAgICAgICAgICAgICAgICA8bjctbWFwIFtkYXRhXT1cImRhdGEud2lkZ2V0c1tpdGVtLmlkXS5kcy5vdXQkIHwgYXN5bmNcIj48L243LW1hcD4gXHJcbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPiBcclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvbmctY29udGFpbmVyPlxyXG48L25nLXRlbXBsYXRlPiJdfQ==