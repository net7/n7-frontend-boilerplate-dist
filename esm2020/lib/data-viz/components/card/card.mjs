import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../card-text-item/card-text-item";
import * as i2 from "@n7-frontend/components";
import * as i3 from "@angular/common";
export class CardComponent {
}
CardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.0", ngImport: i0, type: CardComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.0", type: CardComponent, selector: "dv-card", inputs: { data: "data", emit: "emit" }, ngImport: i0, template: "<div *ngIf=\"data\" class=\"dv-card {{ data.classes || '' }}\">\n    <ng-container *ngFor=\"let area of ['header', 'content', 'footer']\">\n        <div *ngIf=\"data[area]\" class=\"dv-card__{{ area }}\">\n            <section *ngFor=\"let section of data[area].sections\" class=\"dv-card__section {{ section.classes || '' }}\">\n                <ng-container *ngTemplateOutlet=\"blocks; context: { $implicit: section.items }\"></ng-container>\n            </section>\n        </div>\n    </ng-container>\n</div>\n\n<ng-template #blocks let-items>\n    <ng-container *ngFor=\"let item of items\">\n        <div class=\"{{ 'dv-card__item dv-card__' + item.type }}\">\n            <!-- TEXT -->\n            <ng-container *ngIf=\"item.type === 'text'\">\n                <dv-card-text-item \n                [data]=\"data.widgets[item.id].ds.out$ | async\"\n                [emit]=\"data.widgets[item.id].emit\"></dv-card-text-item> \n            </ng-container> \n\n            <!-- DATA WIDGET -->\n            <ng-container *ngIf=\"item.type === 'data-widget'\">\n                <n7-data-widget \n                [data]=\"data.widgets[item.id].ds.out$ | async\"\n                [emit]=\"data.widgets[item.id].emit\"></n7-data-widget> \n            </ng-container> \n\n            <!-- TABLE -->\n            <ng-container *ngIf=\"item.type === 'table'\">\n                <n7-table \n                [data]=\"data.widgets[item.id].ds.out$ | async\"\n                [emit]=\"data.widgets[item.id].emit\"></n7-table> \n            </ng-container> \n\n            <!-- INNER TITLE -->\n            <ng-container *ngIf=\"item.type === 'inner-title'\">\n                <n7-inner-title \n                [data]=\"data.widgets[item.id].ds.out$ | async\"\n                [emit]=\"data.widgets[item.id].emit\"></n7-inner-title> \n            </ng-container> \n\n            <!-- SELECT -->\n            <ng-container *ngIf=\"item.type === 'select'\">\n                <n7-input-select \n                [data]=\"data.widgets[item.id].ds.out$ | async\"\n                [emit]=\"data.widgets[item.id].emit\"></n7-input-select> \n            </ng-container> \n\n            <!-- APEX CHARTS -->\n            <ng-container *ngIf=\"item.type.includes('apex')\">\n                <n7-chart [data]=\"data.widgets[item.id].ds.out$ | async\"></n7-chart> \n            </ng-container> \n\n            <!-- MAP -->\n            <ng-container *ngIf=\"item.type === 'map'\">\n                <n7-map [data]=\"data.widgets[item.id].ds.out$ | async\"></n7-map> \n            </ng-container> \n        </div>\n    </ng-container>\n</ng-template>", components: [{ type: i1.CardTextItemComponent, selector: "dv-card-text-item", inputs: ["data", "emit"] }, { type: i2.DataWidgetComponent, selector: "n7-data-widget", inputs: ["data", "emit"] }, { type: i2.TableComponent, selector: "n7-table", inputs: ["data", "emit"] }, { type: i2.InnerTitleComponent, selector: "n7-inner-title", inputs: ["data", "emit"] }, { type: i2.InputSelectComponent, selector: "n7-input-select", inputs: ["data", "emit"] }, { type: i2.ChartComponent, selector: "n7-chart", inputs: ["data", "emit"] }, { type: i2.MapComponent, selector: "n7-map", inputs: ["data", "emit"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "async": i3.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.0", ngImport: i0, type: CardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dv-card', template: "<div *ngIf=\"data\" class=\"dv-card {{ data.classes || '' }}\">\n    <ng-container *ngFor=\"let area of ['header', 'content', 'footer']\">\n        <div *ngIf=\"data[area]\" class=\"dv-card__{{ area }}\">\n            <section *ngFor=\"let section of data[area].sections\" class=\"dv-card__section {{ section.classes || '' }}\">\n                <ng-container *ngTemplateOutlet=\"blocks; context: { $implicit: section.items }\"></ng-container>\n            </section>\n        </div>\n    </ng-container>\n</div>\n\n<ng-template #blocks let-items>\n    <ng-container *ngFor=\"let item of items\">\n        <div class=\"{{ 'dv-card__item dv-card__' + item.type }}\">\n            <!-- TEXT -->\n            <ng-container *ngIf=\"item.type === 'text'\">\n                <dv-card-text-item \n                [data]=\"data.widgets[item.id].ds.out$ | async\"\n                [emit]=\"data.widgets[item.id].emit\"></dv-card-text-item> \n            </ng-container> \n\n            <!-- DATA WIDGET -->\n            <ng-container *ngIf=\"item.type === 'data-widget'\">\n                <n7-data-widget \n                [data]=\"data.widgets[item.id].ds.out$ | async\"\n                [emit]=\"data.widgets[item.id].emit\"></n7-data-widget> \n            </ng-container> \n\n            <!-- TABLE -->\n            <ng-container *ngIf=\"item.type === 'table'\">\n                <n7-table \n                [data]=\"data.widgets[item.id].ds.out$ | async\"\n                [emit]=\"data.widgets[item.id].emit\"></n7-table> \n            </ng-container> \n\n            <!-- INNER TITLE -->\n            <ng-container *ngIf=\"item.type === 'inner-title'\">\n                <n7-inner-title \n                [data]=\"data.widgets[item.id].ds.out$ | async\"\n                [emit]=\"data.widgets[item.id].emit\"></n7-inner-title> \n            </ng-container> \n\n            <!-- SELECT -->\n            <ng-container *ngIf=\"item.type === 'select'\">\n                <n7-input-select \n                [data]=\"data.widgets[item.id].ds.out$ | async\"\n                [emit]=\"data.widgets[item.id].emit\"></n7-input-select> \n            </ng-container> \n\n            <!-- APEX CHARTS -->\n            <ng-container *ngIf=\"item.type.includes('apex')\">\n                <n7-chart [data]=\"data.widgets[item.id].ds.out$ | async\"></n7-chart> \n            </ng-container> \n\n            <!-- MAP -->\n            <ng-container *ngIf=\"item.type === 'map'\">\n                <n7-map [data]=\"data.widgets[item.id].ds.out$ | async\"></n7-map> \n            </ng-container> \n        </div>\n    </ng-container>\n</ng-template>" }]
        }], propDecorators: { data: [{
                type: Input
            }], emit: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL243LWJvaWxlcnBsYXRlLWxpYi9zcmMvbGliL2RhdGEtdml6L2NvbXBvbmVudHMvY2FyZC9jYXJkLnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbjctYm9pbGVycGxhdGUtbGliL3NyYy9saWIvZGF0YS12aXovY29tcG9uZW50cy9jYXJkL2NhcmQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFPakQsTUFBTSxPQUFPLGFBQWE7OzBHQUFiLGFBQWE7OEZBQWIsYUFBYSx1RkNQMUIscWtGQTJEYzsyRkRwREQsYUFBYTtrQkFKekIsU0FBUzsrQkFDRSxTQUFTOzhCQUlSLElBQUk7c0JBQVosS0FBSztnQkFFRyxJQUFJO3NCQUFaLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDYXJkRGF0YVdpdGhXaWRnZXRzIH0gZnJvbSAnLi4vLi4vdHlwZXMvY2FyZC50eXBlcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2R2LWNhcmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vY2FyZC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgQ2FyZENvbXBvbmVudCB7XG4gICAgQElucHV0KCkgZGF0YTogQ2FyZERhdGFXaXRoV2lkZ2V0cztcblxuICAgIEBJbnB1dCgpIGVtaXQ6ICh0eXBlOiBzdHJpbmcsIHBheWxvYWQ6IGFueSkgPT4gdm9pZDtcbn1cbiIsIjxkaXYgKm5nSWY9XCJkYXRhXCIgY2xhc3M9XCJkdi1jYXJkIHt7IGRhdGEuY2xhc3NlcyB8fCAnJyB9fVwiPlxuICAgIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IGFyZWEgb2YgWydoZWFkZXInLCAnY29udGVudCcsICdmb290ZXInXVwiPlxuICAgICAgICA8ZGl2ICpuZ0lmPVwiZGF0YVthcmVhXVwiIGNsYXNzPVwiZHYtY2FyZF9fe3sgYXJlYSB9fVwiPlxuICAgICAgICAgICAgPHNlY3Rpb24gKm5nRm9yPVwibGV0IHNlY3Rpb24gb2YgZGF0YVthcmVhXS5zZWN0aW9uc1wiIGNsYXNzPVwiZHYtY2FyZF9fc2VjdGlvbiB7eyBzZWN0aW9uLmNsYXNzZXMgfHwgJycgfX1cIj5cbiAgICAgICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwiYmxvY2tzOyBjb250ZXh0OiB7ICRpbXBsaWNpdDogc2VjdGlvbi5pdGVtcyB9XCI+PC9uZy1jb250YWluZXI+XG4gICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvbmctY29udGFpbmVyPlxuPC9kaXY+XG5cbjxuZy10ZW1wbGF0ZSAjYmxvY2tzIGxldC1pdGVtcz5cbiAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBpdGVtIG9mIGl0ZW1zXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ7eyAnZHYtY2FyZF9faXRlbSBkdi1jYXJkX18nICsgaXRlbS50eXBlIH19XCI+XG4gICAgICAgICAgICA8IS0tIFRFWFQgLS0+XG4gICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiaXRlbS50eXBlID09PSAndGV4dCdcIj5cbiAgICAgICAgICAgICAgICA8ZHYtY2FyZC10ZXh0LWl0ZW0gXG4gICAgICAgICAgICAgICAgW2RhdGFdPVwiZGF0YS53aWRnZXRzW2l0ZW0uaWRdLmRzLm91dCQgfCBhc3luY1wiXG4gICAgICAgICAgICAgICAgW2VtaXRdPVwiZGF0YS53aWRnZXRzW2l0ZW0uaWRdLmVtaXRcIj48L2R2LWNhcmQtdGV4dC1pdGVtPiBcbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPiBcblxuICAgICAgICAgICAgPCEtLSBEQVRBIFdJREdFVCAtLT5cbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJpdGVtLnR5cGUgPT09ICdkYXRhLXdpZGdldCdcIj5cbiAgICAgICAgICAgICAgICA8bjctZGF0YS13aWRnZXQgXG4gICAgICAgICAgICAgICAgW2RhdGFdPVwiZGF0YS53aWRnZXRzW2l0ZW0uaWRdLmRzLm91dCQgfCBhc3luY1wiXG4gICAgICAgICAgICAgICAgW2VtaXRdPVwiZGF0YS53aWRnZXRzW2l0ZW0uaWRdLmVtaXRcIj48L243LWRhdGEtd2lkZ2V0PiBcbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPiBcblxuICAgICAgICAgICAgPCEtLSBUQUJMRSAtLT5cbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJpdGVtLnR5cGUgPT09ICd0YWJsZSdcIj5cbiAgICAgICAgICAgICAgICA8bjctdGFibGUgXG4gICAgICAgICAgICAgICAgW2RhdGFdPVwiZGF0YS53aWRnZXRzW2l0ZW0uaWRdLmRzLm91dCQgfCBhc3luY1wiXG4gICAgICAgICAgICAgICAgW2VtaXRdPVwiZGF0YS53aWRnZXRzW2l0ZW0uaWRdLmVtaXRcIj48L243LXRhYmxlPiBcbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPiBcblxuICAgICAgICAgICAgPCEtLSBJTk5FUiBUSVRMRSAtLT5cbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJpdGVtLnR5cGUgPT09ICdpbm5lci10aXRsZSdcIj5cbiAgICAgICAgICAgICAgICA8bjctaW5uZXItdGl0bGUgXG4gICAgICAgICAgICAgICAgW2RhdGFdPVwiZGF0YS53aWRnZXRzW2l0ZW0uaWRdLmRzLm91dCQgfCBhc3luY1wiXG4gICAgICAgICAgICAgICAgW2VtaXRdPVwiZGF0YS53aWRnZXRzW2l0ZW0uaWRdLmVtaXRcIj48L243LWlubmVyLXRpdGxlPiBcbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPiBcblxuICAgICAgICAgICAgPCEtLSBTRUxFQ1QgLS0+XG4gICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiaXRlbS50eXBlID09PSAnc2VsZWN0J1wiPlxuICAgICAgICAgICAgICAgIDxuNy1pbnB1dC1zZWxlY3QgXG4gICAgICAgICAgICAgICAgW2RhdGFdPVwiZGF0YS53aWRnZXRzW2l0ZW0uaWRdLmRzLm91dCQgfCBhc3luY1wiXG4gICAgICAgICAgICAgICAgW2VtaXRdPVwiZGF0YS53aWRnZXRzW2l0ZW0uaWRdLmVtaXRcIj48L243LWlucHV0LXNlbGVjdD4gXG4gICAgICAgICAgICA8L25nLWNvbnRhaW5lcj4gXG5cbiAgICAgICAgICAgIDwhLS0gQVBFWCBDSEFSVFMgLS0+XG4gICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiaXRlbS50eXBlLmluY2x1ZGVzKCdhcGV4JylcIj5cbiAgICAgICAgICAgICAgICA8bjctY2hhcnQgW2RhdGFdPVwiZGF0YS53aWRnZXRzW2l0ZW0uaWRdLmRzLm91dCQgfCBhc3luY1wiPjwvbjctY2hhcnQ+IFxuICAgICAgICAgICAgPC9uZy1jb250YWluZXI+IFxuXG4gICAgICAgICAgICA8IS0tIE1BUCAtLT5cbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJpdGVtLnR5cGUgPT09ICdtYXAnXCI+XG4gICAgICAgICAgICAgICAgPG43LW1hcCBbZGF0YV09XCJkYXRhLndpZGdldHNbaXRlbS5pZF0uZHMub3V0JCB8IGFzeW5jXCI+PC9uNy1tYXA+IFxuICAgICAgICAgICAgPC9uZy1jb250YWluZXI+IFxuICAgICAgICA8L2Rpdj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbjwvbmctdGVtcGxhdGU+Il19