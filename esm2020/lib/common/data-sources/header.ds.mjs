import { DataSource } from '@n7-frontend/core';
const MOBILE_CLASS = 'is-mobile-nav-displayed';
const ACTIVE_CLASS = 'is-active';
export class HeaderDS extends DataSource {
    transform(data) {
        if (!data) {
            return null;
        }
        return {
            ...data,
            menuToggle: {
                open: {
                    payload: 'mobile-open'
                },
                close: {
                    payload: 'mobile-close'
                }
            }
        };
    }
    onCurrentNavChange(payload) {
        this.output.nav.items.forEach((item) => {
            this.updateItemClass(item, payload);
            if (item.subnav) {
                item.subnav.forEach((subNavItem) => {
                    this.updateItemClass(subNavItem, payload);
                });
            }
        });
    }
    onRouterChange() {
        if (!this.output) {
            return;
        }
        let { classes } = this.output;
        classes = classes || '';
        classes = classes.split(' ');
        if (classes.includes(MOBILE_CLASS)) {
            classes.splice(classes.indexOf(MOBILE_CLASS), 1);
            this.output.classes = classes.join(' ');
        }
    }
    onClick(payload) {
        // mobile control
        if (['mobile-open', 'mobile-close'].includes(payload)) {
            let { classes } = this.output;
            classes = classes || '';
            classes = classes.split(' ');
            if (classes.includes(MOBILE_CLASS)) {
                classes.splice(classes.indexOf(MOBILE_CLASS), 1);
            }
            else {
                classes.push(MOBILE_CLASS);
            }
            this.output.classes = classes.join(' ');
        }
    }
    updateItemClass(item, payload) {
        let itemClasses = [];
        if (item.classes) {
            itemClasses = itemClasses.concat(item.classes.split(' '));
        }
        if (item._meta.id === payload && !itemClasses.includes(ACTIVE_CLASS)) {
            itemClasses.push(ACTIVE_CLASS);
        }
        else if (itemClasses.includes(ACTIVE_CLASS)) {
            itemClasses.splice(itemClasses.indexOf(ACTIVE_CLASS, 1));
        }
        item.classes = itemClasses.join(' ');
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbjctYm9pbGVycGxhdGUtbGliL3NyYy9saWIvY29tbW9uL2RhdGEtc291cmNlcy9oZWFkZXIuZHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRy9DLE1BQU0sWUFBWSxHQUFHLHlCQUF5QixDQUFDO0FBRS9DLE1BQU0sWUFBWSxHQUFHLFdBQVcsQ0FBQztBQUVqQyxNQUFNLE9BQU8sUUFBUyxTQUFRLFVBQVU7SUFDNUIsU0FBUyxDQUFDLElBQUk7UUFDdEIsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNULE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxPQUFPO1lBQ0wsR0FBRyxJQUFJO1lBQ1AsVUFBVSxFQUFFO2dCQUNWLElBQUksRUFBRTtvQkFDSixPQUFPLEVBQUUsYUFBYTtpQkFDdkI7Z0JBQ0QsS0FBSyxFQUFFO29CQUNMLE9BQU8sRUFBRSxjQUFjO2lCQUN4QjthQUNGO1NBQ0YsQ0FBQztJQUNKLENBQUM7SUFFTSxrQkFBa0IsQ0FBQyxPQUFPO1FBQy9CLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUNyQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztZQUNwQyxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQ2YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxVQUFVLEVBQUUsRUFBRTtvQkFDakMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLENBQUM7Z0JBQzVDLENBQUMsQ0FBQyxDQUFDO2FBQ0o7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTSxjQUFjO1FBQ25CLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2hCLE9BQU87U0FDUjtRQUNELElBQUksRUFBRSxPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzlCLE9BQU8sR0FBRyxPQUFPLElBQUksRUFBRSxDQUFDO1FBQ3hCLE9BQU8sR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTdCLElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsRUFBRTtZQUNsQyxPQUFPLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDakQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN6QztJQUNILENBQUM7SUFFTSxPQUFPLENBQUMsT0FBTztRQUNwQixpQkFBaUI7UUFDakIsSUFBSSxDQUFDLGFBQWEsRUFBRSxjQUFjLENBQUMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDckQsSUFBSSxFQUFFLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDOUIsT0FBTyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7WUFDeEIsT0FBTyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7WUFFN0IsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxFQUFFO2dCQUNsQyxPQUFPLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDbEQ7aUJBQU07Z0JBQ0wsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQzthQUM1QjtZQUNELElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDekM7SUFDSCxDQUFDO0lBRU8sZUFBZSxDQUFDLElBQUksRUFBRSxPQUFPO1FBQ25DLElBQUksV0FBVyxHQUFHLEVBQUUsQ0FBQztRQUNyQixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDaEIsV0FBVyxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUMzRDtRQUNELElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsRUFBRTtZQUNwRSxXQUFXLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1NBQ2hDO2FBQU0sSUFBSSxXQUFXLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxFQUFFO1lBQzdDLFdBQVcsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMxRDtRQUNELElBQUksQ0FBQyxPQUFPLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRhU291cmNlIH0gZnJvbSAnQG43LWZyb250ZW5kL2NvcmUnO1xyXG5pbXBvcnQgeyBIZWFkZXJEYXRhIH0gZnJvbSAnQG43LWZyb250ZW5kL2NvbXBvbmVudHMnO1xyXG5cclxuY29uc3QgTU9CSUxFX0NMQVNTID0gJ2lzLW1vYmlsZS1uYXYtZGlzcGxheWVkJztcclxuXHJcbmNvbnN0IEFDVElWRV9DTEFTUyA9ICdpcy1hY3RpdmUnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEhlYWRlckRTIGV4dGVuZHMgRGF0YVNvdXJjZSB7XHJcbiAgcHJvdGVjdGVkIHRyYW5zZm9ybShkYXRhKTogSGVhZGVyRGF0YSB7XHJcbiAgICBpZiAoIWRhdGEpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgLi4uZGF0YSxcclxuICAgICAgbWVudVRvZ2dsZToge1xyXG4gICAgICAgIG9wZW46IHtcclxuICAgICAgICAgIHBheWxvYWQ6ICdtb2JpbGUtb3BlbidcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNsb3NlOiB7XHJcbiAgICAgICAgICBwYXlsb2FkOiAnbW9iaWxlLWNsb3NlJ1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvbkN1cnJlbnROYXZDaGFuZ2UocGF5bG9hZCkge1xyXG4gICAgdGhpcy5vdXRwdXQubmF2Lml0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgdGhpcy51cGRhdGVJdGVtQ2xhc3MoaXRlbSwgcGF5bG9hZCk7XHJcbiAgICAgIGlmIChpdGVtLnN1Ym5hdikge1xyXG4gICAgICAgIGl0ZW0uc3VibmF2LmZvckVhY2goKHN1Yk5hdkl0ZW0pID0+IHtcclxuICAgICAgICAgIHRoaXMudXBkYXRlSXRlbUNsYXNzKHN1Yk5hdkl0ZW0sIHBheWxvYWQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvblJvdXRlckNoYW5nZSgpIHtcclxuICAgIGlmICghdGhpcy5vdXRwdXQpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgbGV0IHsgY2xhc3NlcyB9ID0gdGhpcy5vdXRwdXQ7XHJcbiAgICBjbGFzc2VzID0gY2xhc3NlcyB8fCAnJztcclxuICAgIGNsYXNzZXMgPSBjbGFzc2VzLnNwbGl0KCcgJyk7XHJcblxyXG4gICAgaWYgKGNsYXNzZXMuaW5jbHVkZXMoTU9CSUxFX0NMQVNTKSkge1xyXG4gICAgICBjbGFzc2VzLnNwbGljZShjbGFzc2VzLmluZGV4T2YoTU9CSUxFX0NMQVNTKSwgMSk7XHJcbiAgICAgIHRoaXMub3V0cHV0LmNsYXNzZXMgPSBjbGFzc2VzLmpvaW4oJyAnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBvbkNsaWNrKHBheWxvYWQpIHtcclxuICAgIC8vIG1vYmlsZSBjb250cm9sXHJcbiAgICBpZiAoWydtb2JpbGUtb3BlbicsICdtb2JpbGUtY2xvc2UnXS5pbmNsdWRlcyhwYXlsb2FkKSkge1xyXG4gICAgICBsZXQgeyBjbGFzc2VzIH0gPSB0aGlzLm91dHB1dDtcclxuICAgICAgY2xhc3NlcyA9IGNsYXNzZXMgfHwgJyc7XHJcbiAgICAgIGNsYXNzZXMgPSBjbGFzc2VzLnNwbGl0KCcgJyk7XHJcblxyXG4gICAgICBpZiAoY2xhc3Nlcy5pbmNsdWRlcyhNT0JJTEVfQ0xBU1MpKSB7XHJcbiAgICAgICAgY2xhc3Nlcy5zcGxpY2UoY2xhc3Nlcy5pbmRleE9mKE1PQklMRV9DTEFTUyksIDEpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNsYXNzZXMucHVzaChNT0JJTEVfQ0xBU1MpO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMub3V0cHV0LmNsYXNzZXMgPSBjbGFzc2VzLmpvaW4oJyAnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgdXBkYXRlSXRlbUNsYXNzKGl0ZW0sIHBheWxvYWQpIHtcclxuICAgIGxldCBpdGVtQ2xhc3NlcyA9IFtdO1xyXG4gICAgaWYgKGl0ZW0uY2xhc3Nlcykge1xyXG4gICAgICBpdGVtQ2xhc3NlcyA9IGl0ZW1DbGFzc2VzLmNvbmNhdChpdGVtLmNsYXNzZXMuc3BsaXQoJyAnKSk7XHJcbiAgICB9XHJcbiAgICBpZiAoaXRlbS5fbWV0YS5pZCA9PT0gcGF5bG9hZCAmJiAhaXRlbUNsYXNzZXMuaW5jbHVkZXMoQUNUSVZFX0NMQVNTKSkge1xyXG4gICAgICBpdGVtQ2xhc3Nlcy5wdXNoKEFDVElWRV9DTEFTUyk7XHJcbiAgICB9IGVsc2UgaWYgKGl0ZW1DbGFzc2VzLmluY2x1ZGVzKEFDVElWRV9DTEFTUykpIHtcclxuICAgICAgaXRlbUNsYXNzZXMuc3BsaWNlKGl0ZW1DbGFzc2VzLmluZGV4T2YoQUNUSVZFX0NMQVNTLCAxKSk7XHJcbiAgICB9XHJcbiAgICBpdGVtLmNsYXNzZXMgPSBpdGVtQ2xhc3Nlcy5qb2luKCcgJyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==