import { DataSource, _t } from '@n7-frontend/core';
export class MrInputSelectDS extends DataSource {
    constructor() {
        super(...arguments);
        this.state = {
            value: null,
            disabled: false,
            hidden: false,
        };
        this.getState = () => this.state;
    }
    transform(data) {
        return {
            ...data,
            options: this.getOptions(data.options)
        };
    }
    setState(newState) {
        this.state = {
            ...this.state,
            ...newState
        };
        this.refresh();
    }
    clear() {
        this.setState({ value: null });
    }
    refresh() {
        const { hidden, disabled } = this.state;
        // render value
        this.output.options = this.getOptions(this.output.options);
        // render disabled
        this.output.disabled = disabled;
        // render hidden
        this.output.classes = hidden ? 'is-hidden' : '';
    }
    getOptions(options) {
        const { value } = this.state;
        return options.map((option) => ({
            ...option,
            label: _t(option.label),
            selected: value === option.value
        }));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtc2VsZWN0LmRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbjctYm9pbGVycGxhdGUtbGliL3NyYy9saWIvbXVydWNhL2RhdGEtc291cmNlcy9mb3JtL2lucHV0LXNlbGVjdC5kcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBTW5ELE1BQU0sT0FBTyxlQUFnQixTQUFRLFVBQVU7SUFBL0M7O1FBR1MsVUFBSyxHQUF5QztZQUNuRCxLQUFLLEVBQUUsSUFBSTtZQUNYLFFBQVEsRUFBRSxLQUFLO1lBQ2YsTUFBTSxFQUFFLEtBQUs7U0FDZCxDQUFDO1FBU0YsYUFBUSxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7SUFtQzlCLENBQUM7SUExQ1csU0FBUyxDQUFDLElBQXFCO1FBQ3ZDLE9BQU87WUFDTCxHQUFHLElBQUk7WUFDUCxPQUFPLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1NBQ3ZDLENBQUM7SUFDSixDQUFDO0lBSUQsUUFBUSxDQUFDLFFBQThDO1FBQ3JELElBQUksQ0FBQyxLQUFLLEdBQUc7WUFDWCxHQUFHLElBQUksQ0FBQyxLQUFLO1lBQ2IsR0FBRyxRQUFRO1NBQ1osQ0FBQztRQUNGLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNqQixDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRUQsT0FBTztRQUNMLE1BQU0sRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUV4QyxlQUFlO1FBQ2YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTNELGtCQUFrQjtRQUNsQixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFFaEMsZ0JBQWdCO1FBQ2hCLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDbEQsQ0FBQztJQUVPLFVBQVUsQ0FBQyxPQUFPO1FBQ3hCLE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQzdCLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQztZQUM5QixHQUFHLE1BQU07WUFDVCxLQUFLLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7WUFDdkIsUUFBUSxFQUFFLEtBQUssS0FBSyxNQUFNLENBQUMsS0FBSztTQUNqQyxDQUFDLENBQUMsQ0FBQztJQUNOLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGFTb3VyY2UsIF90IH0gZnJvbSAnQG43LWZyb250ZW5kL2NvcmUnO1xyXG5pbXBvcnQgeyBJbnB1dFNlbGVjdERhdGEgfSBmcm9tICdAbjctZnJvbnRlbmQvY29tcG9uZW50cyc7XHJcbmltcG9ydCB7IE1yRm9ybUlucHV0U3RhdGUsIE1ySW5wdXREYXRhU291cmNlIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9mb3JtLmludGVyZmFjZSc7XHJcblxyXG50eXBlIE1ySW5wdXRTZWxlY3RWYWx1ZSA9IHN0cmluZyB8IG51bGw7XHJcblxyXG5leHBvcnQgY2xhc3MgTXJJbnB1dFNlbGVjdERTIGV4dGVuZHMgRGF0YVNvdXJjZSBpbXBsZW1lbnRzIE1ySW5wdXREYXRhU291cmNlPE1ySW5wdXRTZWxlY3RWYWx1ZT4ge1xyXG4gIHB1YmxpYyBpZDogc3RyaW5nO1xyXG5cclxuICBwdWJsaWMgc3RhdGU6IE1yRm9ybUlucHV0U3RhdGU8TXJJbnB1dFNlbGVjdFZhbHVlPiA9IHtcclxuICAgIHZhbHVlOiBudWxsLFxyXG4gICAgZGlzYWJsZWQ6IGZhbHNlLFxyXG4gICAgaGlkZGVuOiBmYWxzZSxcclxuICB9O1xyXG5cclxuICBwcm90ZWN0ZWQgdHJhbnNmb3JtKGRhdGE6IElucHV0U2VsZWN0RGF0YSk6IElucHV0U2VsZWN0RGF0YSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAuLi5kYXRhLFxyXG4gICAgICBvcHRpb25zOiB0aGlzLmdldE9wdGlvbnMoZGF0YS5vcHRpb25zKVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGdldFN0YXRlID0gKCkgPT4gdGhpcy5zdGF0ZTtcclxuXHJcbiAgc2V0U3RhdGUobmV3U3RhdGU6IE1yRm9ybUlucHV0U3RhdGU8TXJJbnB1dFNlbGVjdFZhbHVlPikge1xyXG4gICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgLi4udGhpcy5zdGF0ZSxcclxuICAgICAgLi4ubmV3U3RhdGVcclxuICAgIH07XHJcbiAgICB0aGlzLnJlZnJlc2goKTtcclxuICB9XHJcblxyXG4gIGNsZWFyKCkge1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7IHZhbHVlOiBudWxsIH0pO1xyXG4gIH1cclxuXHJcbiAgcmVmcmVzaCgpIHtcclxuICAgIGNvbnN0IHsgaGlkZGVuLCBkaXNhYmxlZCB9ID0gdGhpcy5zdGF0ZTtcclxuXHJcbiAgICAvLyByZW5kZXIgdmFsdWVcclxuICAgIHRoaXMub3V0cHV0Lm9wdGlvbnMgPSB0aGlzLmdldE9wdGlvbnModGhpcy5vdXRwdXQub3B0aW9ucyk7XHJcblxyXG4gICAgLy8gcmVuZGVyIGRpc2FibGVkXHJcbiAgICB0aGlzLm91dHB1dC5kaXNhYmxlZCA9IGRpc2FibGVkO1xyXG5cclxuICAgIC8vIHJlbmRlciBoaWRkZW5cclxuICAgIHRoaXMub3V0cHV0LmNsYXNzZXMgPSBoaWRkZW4gPyAnaXMtaGlkZGVuJyA6ICcnO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBnZXRPcHRpb25zKG9wdGlvbnMpIHtcclxuICAgIGNvbnN0IHsgdmFsdWUgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICByZXR1cm4gb3B0aW9ucy5tYXAoKG9wdGlvbikgPT4gKHtcclxuICAgICAgLi4ub3B0aW9uLFxyXG4gICAgICBsYWJlbDogX3Qob3B0aW9uLmxhYmVsKSxcclxuICAgICAgc2VsZWN0ZWQ6IHZhbHVlID09PSBvcHRpb24udmFsdWVcclxuICAgIH0pKTtcclxuICB9XHJcbn1cclxuIl19