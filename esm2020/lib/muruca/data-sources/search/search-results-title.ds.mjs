import { DataSource, _t } from '@n7-frontend/core';
export class MrSearchResultsTitleDS extends DataSource {
    transform(data) {
        const { totalResultsText, sort } = this.options.config;
        const { total_count: totalCount, sort: currentSort } = data;
        const mainText = _t(totalResultsText, { total: totalCount }, (key, { total }) => {
            if (total === 0) {
                return `${key}_0`;
            }
            if (total === 1) {
                return `${key}_1`;
            }
            return key;
        });
        return {
            title: {
                main: {
                    text: mainText
                }
            },
            actions: {
                select: {
                    label: sort.label,
                    options: sort.options.map(({ label, value, selected, disabled }) => ({
                        value,
                        disabled,
                        selected: currentSort ? value === currentSort : selected,
                        text: label
                    })),
                    payload: 'sort'
                }
            }
        };
    }
    OnInputQueryChange(value) {
        const { sort } = this.options.config;
        sort.options.forEach((option) => {
            if (option.value === '_score') {
                option.disabled = !value;
            }
        });
        if (this.input) {
            this.update(this.input);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLXJlc3VsdHMtdGl0bGUuZHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uNy1ib2lsZXJwbGF0ZS1saWIvc3JjL2xpYi9tdXJ1Y2EvZGF0YS1zb3VyY2VzL3NlYXJjaC9zZWFyY2gtcmVzdWx0cy10aXRsZS5kcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRW5ELE1BQU0sT0FBTyxzQkFBdUIsU0FBUSxVQUFVO0lBQzFDLFNBQVMsQ0FBQyxJQUFJO1FBQ3RCLE1BQU0sRUFDSixnQkFBZ0IsRUFDaEIsSUFBSSxFQUNMLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDeEIsTUFBTSxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxHQUFHLElBQUksQ0FBQztRQUM1RCxNQUFNLFFBQVEsR0FBRyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFO1lBQzlFLElBQUksS0FBSyxLQUFLLENBQUMsRUFBRTtnQkFDZixPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUM7YUFDbkI7WUFBQyxJQUFJLEtBQUssS0FBSyxDQUFDLEVBQUU7Z0JBQ2pCLE9BQU8sR0FBRyxHQUFHLElBQUksQ0FBQzthQUNuQjtZQUNELE9BQU8sR0FBRyxDQUFDO1FBQ2IsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPO1lBQ0wsS0FBSyxFQUFFO2dCQUNMLElBQUksRUFBRTtvQkFDSixJQUFJLEVBQUUsUUFBUTtpQkFDZjthQUNGO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLE1BQU0sRUFBRTtvQkFDTixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7b0JBQ2pCLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQ3pCLEtBQUssRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFDakMsRUFBRSxFQUFFLENBQUMsQ0FBQzt3QkFDTCxLQUFLO3dCQUNMLFFBQVE7d0JBQ1IsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUMsUUFBUTt3QkFDeEQsSUFBSSxFQUFFLEtBQUs7cUJBQ1osQ0FBQyxDQUFDO29CQUNILE9BQU8sRUFBRSxNQUFNO2lCQUNoQjthQUNGO1NBQ0YsQ0FBQztJQUNKLENBQUM7SUFFRCxrQkFBa0IsQ0FBQyxLQUFLO1FBQ3RCLE1BQU0sRUFBRSxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztRQUNyQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQzlCLElBQUksTUFBTSxDQUFDLEtBQUssS0FBSyxRQUFRLEVBQUU7Z0JBQzdCLE1BQU0sQ0FBQyxRQUFRLEdBQUcsQ0FBQyxLQUFLLENBQUM7YUFDMUI7UUFDSCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0YVNvdXJjZSwgX3QgfSBmcm9tICdAbjctZnJvbnRlbmQvY29yZSc7XHJcblxyXG5leHBvcnQgY2xhc3MgTXJTZWFyY2hSZXN1bHRzVGl0bGVEUyBleHRlbmRzIERhdGFTb3VyY2Uge1xyXG4gIHByb3RlY3RlZCB0cmFuc2Zvcm0oZGF0YSkge1xyXG4gICAgY29uc3Qge1xyXG4gICAgICB0b3RhbFJlc3VsdHNUZXh0LFxyXG4gICAgICBzb3J0XHJcbiAgICB9ID0gdGhpcy5vcHRpb25zLmNvbmZpZztcclxuICAgIGNvbnN0IHsgdG90YWxfY291bnQ6IHRvdGFsQ291bnQsIHNvcnQ6IGN1cnJlbnRTb3J0IH0gPSBkYXRhO1xyXG4gICAgY29uc3QgbWFpblRleHQgPSBfdCh0b3RhbFJlc3VsdHNUZXh0LCB7IHRvdGFsOiB0b3RhbENvdW50IH0sIChrZXksIHsgdG90YWwgfSkgPT4ge1xyXG4gICAgICBpZiAodG90YWwgPT09IDApIHtcclxuICAgICAgICByZXR1cm4gYCR7a2V5fV8wYDtcclxuICAgICAgfSBpZiAodG90YWwgPT09IDEpIHtcclxuICAgICAgICByZXR1cm4gYCR7a2V5fV8xYDtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4ga2V5O1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgdGl0bGU6IHtcclxuICAgICAgICBtYWluOiB7XHJcbiAgICAgICAgICB0ZXh0OiBtYWluVGV4dFxyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgICAgYWN0aW9uczoge1xyXG4gICAgICAgIHNlbGVjdDoge1xyXG4gICAgICAgICAgbGFiZWw6IHNvcnQubGFiZWwsXHJcbiAgICAgICAgICBvcHRpb25zOiBzb3J0Lm9wdGlvbnMubWFwKCh7XHJcbiAgICAgICAgICAgIGxhYmVsLCB2YWx1ZSwgc2VsZWN0ZWQsIGRpc2FibGVkXHJcbiAgICAgICAgICB9KSA9PiAoe1xyXG4gICAgICAgICAgICB2YWx1ZSxcclxuICAgICAgICAgICAgZGlzYWJsZWQsXHJcbiAgICAgICAgICAgIHNlbGVjdGVkOiBjdXJyZW50U29ydCA/IHZhbHVlID09PSBjdXJyZW50U29ydCA6IHNlbGVjdGVkLFxyXG4gICAgICAgICAgICB0ZXh0OiBsYWJlbFxyXG4gICAgICAgICAgfSkpLFxyXG4gICAgICAgICAgcGF5bG9hZDogJ3NvcnQnXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgT25JbnB1dFF1ZXJ5Q2hhbmdlKHZhbHVlKSB7XHJcbiAgICBjb25zdCB7IHNvcnQgfSA9IHRoaXMub3B0aW9ucy5jb25maWc7XHJcbiAgICBzb3J0Lm9wdGlvbnMuZm9yRWFjaCgob3B0aW9uKSA9PiB7XHJcbiAgICAgIGlmIChvcHRpb24udmFsdWUgPT09ICdfc2NvcmUnKSB7XHJcbiAgICAgICAgb3B0aW9uLmRpc2FibGVkID0gIXZhbHVlO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIGlmICh0aGlzLmlucHV0KSB7XHJcbiAgICAgIHRoaXMudXBkYXRlKHRoaXMuaW5wdXQpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=