import { DataSource, _t } from '@n7-frontend/core';
export class MrSearchResultsTitleDS extends DataSource {
    transform(data) {
        const { totalResultsText, sort } = this.options.config;
        const { total_count: totalCount, sort: currentSort } = data;
        const mainText = _t(totalResultsText, { total: totalCount }, (key, { total }) => {
            if (total === 0) {
                return `${key}_0`;
            }
            if (total === 1) {
                return `${key}_1`;
            }
            return key;
        });
        return {
            title: {
                main: {
                    text: mainText
                }
            },
            actions: {
                select: {
                    label: sort.label,
                    options: sort.options.map(({ label, value, selected, disabled }) => ({
                        value,
                        disabled,
                        selected: currentSort ? value === currentSort : selected,
                        text: label
                    })),
                    payload: 'sort'
                }
            }
        };
    }
    OnInputQueryChange(value) {
        const { sort } = this.options.config;
        sort.options.forEach((option) => {
            if (option.value === '_score') {
                option.disabled = !value;
            }
        });
        if (this.input) {
            this.update(this.input);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLXJlc3VsdHMtdGl0bGUuZHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uNy1ib2lsZXJwbGF0ZS1saWIvc3JjL2xpYi9tdXJ1Y2EvZGF0YS1zb3VyY2VzL3NlYXJjaC9zZWFyY2gtcmVzdWx0cy10aXRsZS5kcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRW5ELE1BQU0sT0FBTyxzQkFBdUIsU0FBUSxVQUFVO0lBQzFDLFNBQVMsQ0FBQyxJQUFJO1FBQ3RCLE1BQU0sRUFDSixnQkFBZ0IsRUFDaEIsSUFBSSxFQUNMLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDeEIsTUFBTSxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxHQUFHLElBQUksQ0FBQztRQUM1RCxNQUFNLFFBQVEsR0FBRyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFO1lBQzlFLElBQUksS0FBSyxLQUFLLENBQUMsRUFBRTtnQkFDZixPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUM7YUFDbkI7WUFBQyxJQUFJLEtBQUssS0FBSyxDQUFDLEVBQUU7Z0JBQ2pCLE9BQU8sR0FBRyxHQUFHLElBQUksQ0FBQzthQUNuQjtZQUNELE9BQU8sR0FBRyxDQUFDO1FBQ2IsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPO1lBQ0wsS0FBSyxFQUFFO2dCQUNMLElBQUksRUFBRTtvQkFDSixJQUFJLEVBQUUsUUFBUTtpQkFDZjthQUNGO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLE1BQU0sRUFBRTtvQkFDTixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7b0JBQ2pCLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQ3pCLEtBQUssRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFDakMsRUFBRSxFQUFFLENBQUMsQ0FBQzt3QkFDTCxLQUFLO3dCQUNMLFFBQVE7d0JBQ1IsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUMsUUFBUTt3QkFDeEQsSUFBSSxFQUFFLEtBQUs7cUJBQ1osQ0FBQyxDQUFDO29CQUNILE9BQU8sRUFBRSxNQUFNO2lCQUNoQjthQUNGO1NBQ0YsQ0FBQztJQUNKLENBQUM7SUFFRCxrQkFBa0IsQ0FBQyxLQUFLO1FBQ3RCLE1BQU0sRUFBRSxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztRQUNyQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQzlCLElBQUksTUFBTSxDQUFDLEtBQUssS0FBSyxRQUFRLEVBQUU7Z0JBQzdCLE1BQU0sQ0FBQyxRQUFRLEdBQUcsQ0FBQyxLQUFLLENBQUM7YUFDMUI7UUFDSCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0YVNvdXJjZSwgX3QgfSBmcm9tICdAbjctZnJvbnRlbmQvY29yZSc7XG5cbmV4cG9ydCBjbGFzcyBNclNlYXJjaFJlc3VsdHNUaXRsZURTIGV4dGVuZHMgRGF0YVNvdXJjZSB7XG4gIHByb3RlY3RlZCB0cmFuc2Zvcm0oZGF0YSkge1xuICAgIGNvbnN0IHtcbiAgICAgIHRvdGFsUmVzdWx0c1RleHQsXG4gICAgICBzb3J0XG4gICAgfSA9IHRoaXMub3B0aW9ucy5jb25maWc7XG4gICAgY29uc3QgeyB0b3RhbF9jb3VudDogdG90YWxDb3VudCwgc29ydDogY3VycmVudFNvcnQgfSA9IGRhdGE7XG4gICAgY29uc3QgbWFpblRleHQgPSBfdCh0b3RhbFJlc3VsdHNUZXh0LCB7IHRvdGFsOiB0b3RhbENvdW50IH0sIChrZXksIHsgdG90YWwgfSkgPT4ge1xuICAgICAgaWYgKHRvdGFsID09PSAwKSB7XG4gICAgICAgIHJldHVybiBgJHtrZXl9XzBgO1xuICAgICAgfSBpZiAodG90YWwgPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIGAke2tleX1fMWA7XG4gICAgICB9XG4gICAgICByZXR1cm4ga2V5O1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHRpdGxlOiB7XG4gICAgICAgIG1haW46IHtcbiAgICAgICAgICB0ZXh0OiBtYWluVGV4dFxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYWN0aW9uczoge1xuICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICBsYWJlbDogc29ydC5sYWJlbCxcbiAgICAgICAgICBvcHRpb25zOiBzb3J0Lm9wdGlvbnMubWFwKCh7XG4gICAgICAgICAgICBsYWJlbCwgdmFsdWUsIHNlbGVjdGVkLCBkaXNhYmxlZFxuICAgICAgICAgIH0pID0+ICh7XG4gICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgIGRpc2FibGVkLFxuICAgICAgICAgICAgc2VsZWN0ZWQ6IGN1cnJlbnRTb3J0ID8gdmFsdWUgPT09IGN1cnJlbnRTb3J0IDogc2VsZWN0ZWQsXG4gICAgICAgICAgICB0ZXh0OiBsYWJlbFxuICAgICAgICAgIH0pKSxcbiAgICAgICAgICBwYXlsb2FkOiAnc29ydCdcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH1cblxuICBPbklucHV0UXVlcnlDaGFuZ2UodmFsdWUpIHtcbiAgICBjb25zdCB7IHNvcnQgfSA9IHRoaXMub3B0aW9ucy5jb25maWc7XG4gICAgc29ydC5vcHRpb25zLmZvckVhY2goKG9wdGlvbikgPT4ge1xuICAgICAgaWYgKG9wdGlvbi52YWx1ZSA9PT0gJ19zY29yZScpIHtcbiAgICAgICAgb3B0aW9uLmRpc2FibGVkID0gIXZhbHVlO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGlmICh0aGlzLmlucHV0KSB7XG4gICAgICB0aGlzLnVwZGF0ZSh0aGlzLmlucHV0KTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==