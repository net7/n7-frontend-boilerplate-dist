import { Component } from '@angular/core';
import { _t } from '@n7-frontend/core';
import { Subject } from 'rxjs';
import { filter, takeUntil } from 'rxjs/operators';
import { NavigationStart } from '@angular/router';
import { isEmpty } from 'lodash';
import { MrCollectionDS, MrInnerTitleDS, MrItemPreviewDS, MrMetadataDS, } from '../../data-sources';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../../services/resource-modal.service";
import * as i3 from "@n7-frontend/components";
import * as i4 from "../read-more/read-more";
import * as i5 from "@angular/common";
const DATASOURCE_MAP = {
    collection: MrCollectionDS,
    metadata: MrMetadataDS,
    preview: MrItemPreviewDS,
    title: MrInnerTitleDS,
};
export class MrResourceModalComponent {
    constructor(router, modalService) {
        this.router = router;
        this.modalService = modalService;
        this.destroy$ = new Subject();
        this.status = 'IDLE';
        this.widgets = {};
        this.errorTitle = _t('global#layout_error_title');
        this.errorDescription = _t('global#layout_error_description');
    }
    ngOnInit() {
        this.modalService.state$
            .pipe(takeUntil(this.destroy$))
            .subscribe(({ status, config, response }) => {
            this.status = status;
            this.config = config;
            if (status === 'SUCCESS') {
                this.loadWidgets(config, response);
            }
        });
        // on router change close
        this.router.events.pipe(takeUntil(this.destroy$), filter(() => !isEmpty(this.widgets)), filter((event) => event instanceof NavigationStart)).subscribe(() => {
            this.onClose();
        });
    }
    ngOnDestroy() {
        // reset
        this.onClose();
        this.destroy$.next();
    }
    onClose(target) {
        if (target && target.className !== 'mr-resource-modal__overlay') {
            return;
        }
        this.widgets = {};
        this.modalService.close();
    }
    loadWidgets(config, response) {
        const { top, content } = config.sections;
        const sections = top.concat(content);
        if (sections) {
            sections.forEach(({ id, type, options }) => {
                const data = response.sections[id];
                this.widgets[id] = {
                    ds: new DATASOURCE_MAP[type]()
                };
                // update options
                if (options) {
                    this.widgets[id].ds.options = options;
                }
                // update data
                if (data) {
                    this.widgets[id].ds.update(data);
                }
            });
        }
    }
}
MrResourceModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: MrResourceModalComponent, deps: [{ token: i1.Router }, { token: i2.MrResourceModalService }], target: i0.ɵɵFactoryTarget.Component });
MrResourceModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.2", type: MrResourceModalComponent, selector: "mr-resource-modal", ngImport: i0, template: "<div *ngIf=\"status !== 'IDLE'\" class=\"mr-modal mr-resource-modal\" [ngClass]=\"{\r\n        'is-loading': status === 'LOADING',\r\n        'is-error': status === 'ERROR'\r\n      }\">\r\n    <div class=\"mr-modal__overlay\" (click)=\"onClose($event.target)\">\r\n        <div class=\"mr-modal__window mr-resource-modal__window\">\r\n            <ng-container [ngSwitch]=\"status\">\r\n\r\n                <!-- Loading -->\r\n                <ng-container *ngSwitchCase=\"'LOADING'\">\r\n                    <div class=\"mr-modal__loader\">\r\n                        <n7-loader></n7-loader>\r\n                    </div>\r\n                </ng-container>\r\n\r\n                <!-- Error -->\r\n                <ng-container *ngSwitchCase=\"'ERROR'\">\r\n\r\n                    <div class=\"mr-modal__header mr-resource-modal__header\">\r\n                        <h2 class=\"mr-modal__header-title\">\r\n                            {{ errorTitle }}\r\n                        </h2>\r\n                        <div class=\"mr-modal__close\">\r\n                            <a class=\"mr-modal__close-link\" (click)=\"onClose()\"><span class=\"n7-icon-close\"></span></a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mr-modal__content\">\r\n                        <p class=\"mr-modal__error-text\">{{ errorDescription }}</p>\r\n                    </div>\r\n\r\n                </ng-container>\r\n\r\n                <!-- Success -->\r\n                <ng-container *ngSwitchCase=\"'SUCCESS'\">\r\n                    \r\n                    <div class=\"mr-modal__header mr-resource-modal__header\">\r\n                        <ng-container *ngIf=\"config.sections as sections\">\r\n                            <ng-container *ngTemplateOutlet=\"blocks; context: { $implicit: sections.top }\"></ng-container>\r\n                        </ng-container>\r\n                        <div class=\"mr-modal__close\">\r\n                            <a class=\"mr-modal__close-link\" (click)=\"onClose()\"><span class=\"n7-icon-close\"></span></a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mr-modal__content mr-resource-modal__content\">\r\n                        <ng-container *ngIf=\"config.sections as sections\">\r\n                            <ng-container *ngTemplateOutlet=\"blocks; context: { $implicit: sections.content }\"></ng-container>                            \r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n\r\n            </ng-container>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #blocks let-list>\r\n    <ng-container *ngFor=\"let section of list\">\r\n        <section *ngIf=\"widgets[section.id].ds && (widgets[section.id].ds.out$ | async)\"\r\n            class=\"{{ 'mr-resource__section mr-resource__' + section.type }}\">\r\n            <ng-container [ngSwitch]=\"section.type\">\r\n\r\n                <!-- INNER TITLE -->\r\n                <ng-container *ngSwitchCase=\"'title'\">\r\n                    <n7-inner-title [data]=\"widgets[section.id].ds.out$ | async\">\r\n                    </n7-inner-title>\r\n                </ng-container>\r\n\r\n                <!-- METADATA VIEWER -->\r\n                <ng-container *ngSwitchCase=\"'metadata'\">\r\n                    <div class=\"mr-resource-modal__metadata-content\">\r\n                        <h3 *ngIf=\"section.title\" class=\"mr-resource-modal__section-title mr-resource__metadata-title\">\r\n                            {{ section.title }}\r\n                        </h3>\r\n                        <mr-read-more [data]=\"section.readmore\">\r\n                            <n7-metadata-viewer [data]=\"widgets[section.id].ds.out$ | async\">\r\n                            </n7-metadata-viewer>\r\n                        </mr-read-more>\r\n                    </div>\r\n                </ng-container>\r\n\r\n                <!-- COLLECTION -->\r\n                <ng-container *ngSwitchCase=\"'collection'\">\r\n                    <ng-container *ngIf=\"widgets[section.id].ds.out$ | async as collection$\">\r\n                        <div *ngIf=\"collection$.items?.length > 0\" class=\"mr-resource__collection-content\">\r\n                            <h3 *ngIf=\"section.title\" class=\"mr-resource-modal__section-title\">\r\n                                {{ section.title }}\r\n                            </h3>\r\n                            <div\r\n                                class=\"mr-resource__collection-grid {{ section.grid ? 'n7-grid-' + section.grid : '' }}\">\r\n                                <n7-item-preview *ngFor=\"let item of collection$?.items\" [data]=\"item\">\r\n                                </n7-item-preview>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n\r\n                <!-- ITEM PREVIEW -->\r\n                <ng-container *ngSwitchCase=\"'preview'\">\r\n                    <h3 *ngIf=\"section.title\" class=\"mr-resource-modal__section-title\">\r\n                        {{ section.title }}\r\n                    </h3>\r\n                    <n7-item-preview [data]=\"widgets[section.id].ds.out$ | async\">\r\n                    </n7-item-preview>\r\n                </ng-container>\r\n\r\n            </ng-container>\r\n        </section>\r\n    </ng-container>\r\n</ng-template>\r\n", components: [{ type: i3.LoaderComponent, selector: "n7-loader", inputs: ["data"] }, { type: i3.InnerTitleComponent, selector: "n7-inner-title", inputs: ["data", "emit"] }, { type: i4.ReadMoreComponent, selector: "mr-read-more", inputs: ["data"] }, { type: i3.MetadataViewerComponent, selector: "n7-metadata-viewer", inputs: ["data", "emit"] }, { type: i3.ItemPreviewComponent, selector: "n7-item-preview", inputs: ["data", "emit"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i5.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i5.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "async": i5.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: MrResourceModalComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mr-resource-modal', template: "<div *ngIf=\"status !== 'IDLE'\" class=\"mr-modal mr-resource-modal\" [ngClass]=\"{\r\n        'is-loading': status === 'LOADING',\r\n        'is-error': status === 'ERROR'\r\n      }\">\r\n    <div class=\"mr-modal__overlay\" (click)=\"onClose($event.target)\">\r\n        <div class=\"mr-modal__window mr-resource-modal__window\">\r\n            <ng-container [ngSwitch]=\"status\">\r\n\r\n                <!-- Loading -->\r\n                <ng-container *ngSwitchCase=\"'LOADING'\">\r\n                    <div class=\"mr-modal__loader\">\r\n                        <n7-loader></n7-loader>\r\n                    </div>\r\n                </ng-container>\r\n\r\n                <!-- Error -->\r\n                <ng-container *ngSwitchCase=\"'ERROR'\">\r\n\r\n                    <div class=\"mr-modal__header mr-resource-modal__header\">\r\n                        <h2 class=\"mr-modal__header-title\">\r\n                            {{ errorTitle }}\r\n                        </h2>\r\n                        <div class=\"mr-modal__close\">\r\n                            <a class=\"mr-modal__close-link\" (click)=\"onClose()\"><span class=\"n7-icon-close\"></span></a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mr-modal__content\">\r\n                        <p class=\"mr-modal__error-text\">{{ errorDescription }}</p>\r\n                    </div>\r\n\r\n                </ng-container>\r\n\r\n                <!-- Success -->\r\n                <ng-container *ngSwitchCase=\"'SUCCESS'\">\r\n                    \r\n                    <div class=\"mr-modal__header mr-resource-modal__header\">\r\n                        <ng-container *ngIf=\"config.sections as sections\">\r\n                            <ng-container *ngTemplateOutlet=\"blocks; context: { $implicit: sections.top }\"></ng-container>\r\n                        </ng-container>\r\n                        <div class=\"mr-modal__close\">\r\n                            <a class=\"mr-modal__close-link\" (click)=\"onClose()\"><span class=\"n7-icon-close\"></span></a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mr-modal__content mr-resource-modal__content\">\r\n                        <ng-container *ngIf=\"config.sections as sections\">\r\n                            <ng-container *ngTemplateOutlet=\"blocks; context: { $implicit: sections.content }\"></ng-container>                            \r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n\r\n            </ng-container>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #blocks let-list>\r\n    <ng-container *ngFor=\"let section of list\">\r\n        <section *ngIf=\"widgets[section.id].ds && (widgets[section.id].ds.out$ | async)\"\r\n            class=\"{{ 'mr-resource__section mr-resource__' + section.type }}\">\r\n            <ng-container [ngSwitch]=\"section.type\">\r\n\r\n                <!-- INNER TITLE -->\r\n                <ng-container *ngSwitchCase=\"'title'\">\r\n                    <n7-inner-title [data]=\"widgets[section.id].ds.out$ | async\">\r\n                    </n7-inner-title>\r\n                </ng-container>\r\n\r\n                <!-- METADATA VIEWER -->\r\n                <ng-container *ngSwitchCase=\"'metadata'\">\r\n                    <div class=\"mr-resource-modal__metadata-content\">\r\n                        <h3 *ngIf=\"section.title\" class=\"mr-resource-modal__section-title mr-resource__metadata-title\">\r\n                            {{ section.title }}\r\n                        </h3>\r\n                        <mr-read-more [data]=\"section.readmore\">\r\n                            <n7-metadata-viewer [data]=\"widgets[section.id].ds.out$ | async\">\r\n                            </n7-metadata-viewer>\r\n                        </mr-read-more>\r\n                    </div>\r\n                </ng-container>\r\n\r\n                <!-- COLLECTION -->\r\n                <ng-container *ngSwitchCase=\"'collection'\">\r\n                    <ng-container *ngIf=\"widgets[section.id].ds.out$ | async as collection$\">\r\n                        <div *ngIf=\"collection$.items?.length > 0\" class=\"mr-resource__collection-content\">\r\n                            <h3 *ngIf=\"section.title\" class=\"mr-resource-modal__section-title\">\r\n                                {{ section.title }}\r\n                            </h3>\r\n                            <div\r\n                                class=\"mr-resource__collection-grid {{ section.grid ? 'n7-grid-' + section.grid : '' }}\">\r\n                                <n7-item-preview *ngFor=\"let item of collection$?.items\" [data]=\"item\">\r\n                                </n7-item-preview>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n\r\n                <!-- ITEM PREVIEW -->\r\n                <ng-container *ngSwitchCase=\"'preview'\">\r\n                    <h3 *ngIf=\"section.title\" class=\"mr-resource-modal__section-title\">\r\n                        {{ section.title }}\r\n                    </h3>\r\n                    <n7-item-preview [data]=\"widgets[section.id].ds.out$ | async\">\r\n                    </n7-item-preview>\r\n                </ng-container>\r\n\r\n            </ng-container>\r\n        </section>\r\n    </ng-container>\r\n</ng-template>\r\n" }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i2.MrResourceModalService }]; } });
//# sourceMappingURL=data:application/json;base64,