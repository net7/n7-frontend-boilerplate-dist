import { Component } from '@angular/core';
import { _t } from '@n7-frontend/core';
import { Subject } from 'rxjs';
import { filter, takeUntil } from 'rxjs/operators';
import { NavigationStart } from '@angular/router';
import { isEmpty } from 'lodash';
import { MrCollectionDS, MrInnerTitleDS, MrItemPreviewDS, MrMetadataDS, } from '../../data-sources';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../../services/resource-modal.service";
import * as i3 from "@n7-frontend/components";
import * as i4 from "../read-more/read-more";
import * as i5 from "@angular/common";
const DATASOURCE_MAP = {
    collection: MrCollectionDS,
    metadata: MrMetadataDS,
    preview: MrItemPreviewDS,
    title: MrInnerTitleDS,
};
export class MrResourceModalComponent {
    constructor(router, modalService) {
        this.router = router;
        this.modalService = modalService;
        this.destroy$ = new Subject();
        this.status = 'IDLE';
        this.widgets = {};
        this.errorTitle = _t('global#layout_error_title');
        this.errorDescription = _t('global#layout_error_description');
    }
    ngOnInit() {
        this.modalService.state$
            .pipe(takeUntil(this.destroy$))
            .subscribe(({ status, config, response }) => {
            this.status = status;
            this.config = config;
            if (status === 'SUCCESS') {
                this.loadWidgets(config, response);
            }
        });
        // on router change close
        this.router.events.pipe(takeUntil(this.destroy$), filter(() => !isEmpty(this.widgets)), filter((event) => event instanceof NavigationStart)).subscribe(() => {
            this.onClose();
        });
    }
    ngOnDestroy() {
        // reset
        this.onClose();
        this.destroy$.next();
    }
    onClose(target) {
        if (target && target.className !== 'mr-resource-modal__overlay') {
            return;
        }
        this.widgets = {};
        this.modalService.close();
    }
    loadWidgets(config, response) {
        const { top, content } = config.sections;
        const sections = top.concat(content);
        if (sections) {
            sections.forEach(({ id, type, options }) => {
                const data = response.sections[id];
                this.widgets[id] = {
                    ds: new DATASOURCE_MAP[type]()
                };
                // update options
                if (options) {
                    this.widgets[id].ds.options = options;
                }
                // update data
                if (data) {
                    this.widgets[id].ds.update(data);
                }
            });
        }
    }
}
MrResourceModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.0", ngImport: i0, type: MrResourceModalComponent, deps: [{ token: i1.Router }, { token: i2.MrResourceModalService }], target: i0.ɵɵFactoryTarget.Component });
MrResourceModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.0", type: MrResourceModalComponent, selector: "mr-resource-modal", ngImport: i0, template: "<div *ngIf=\"status !== 'IDLE'\" class=\"mr-modal mr-resource-modal\" [ngClass]=\"{\n        'is-loading': status === 'LOADING',\n        'is-error': status === 'ERROR'\n      }\">\n    <div class=\"mr-modal__overlay\" (click)=\"onClose($event.target)\">\n        <div class=\"mr-modal__window mr-resource-modal__window\">\n            <ng-container [ngSwitch]=\"status\">\n\n                <!-- Loading -->\n                <ng-container *ngSwitchCase=\"'LOADING'\">\n                    <div class=\"mr-modal__loader\">\n                        <n7-loader></n7-loader>\n                    </div>\n                </ng-container>\n\n                <!-- Error -->\n                <ng-container *ngSwitchCase=\"'ERROR'\">\n\n                    <div class=\"mr-modal__header mr-resource-modal__header\">\n                        <h2 class=\"mr-modal__header-title\">\n                            {{ errorTitle }}\n                        </h2>\n                        <div class=\"mr-modal__close\">\n                            <a class=\"mr-modal__close-link\" (click)=\"onClose()\"><span class=\"n7-icon-close\"></span></a>\n                        </div>\n                    </div>\n                    <div class=\"mr-modal__content\">\n                        <p class=\"mr-modal__error-text\">{{ errorDescription }}</p>\n                    </div>\n\n                </ng-container>\n\n                <!-- Success -->\n                <ng-container *ngSwitchCase=\"'SUCCESS'\">\n                    \n                    <div class=\"mr-modal__header mr-resource-modal__header\">\n                        <ng-container *ngIf=\"config.sections as sections\">\n                            <ng-container *ngTemplateOutlet=\"blocks; context: { $implicit: sections.top }\"></ng-container>\n                        </ng-container>\n                        <div class=\"mr-modal__close\">\n                            <a class=\"mr-modal__close-link\" (click)=\"onClose()\"><span class=\"n7-icon-close\"></span></a>\n                        </div>\n                    </div>\n                    <div class=\"mr-modal__content mr-resource-modal__content\">\n                        <ng-container *ngIf=\"config.sections as sections\">\n                            <ng-container *ngTemplateOutlet=\"blocks; context: { $implicit: sections.content }\"></ng-container>                            \n                        </ng-container>\n                    </div>\n                </ng-container>\n\n            </ng-container>\n\n        </div>\n    </div>\n</div>\n\n<ng-template #blocks let-list>\n    <ng-container *ngFor=\"let section of list\">\n        <section *ngIf=\"widgets[section.id].ds && (widgets[section.id].ds.out$ | async)\"\n            class=\"{{ 'mr-resource__section mr-resource__' + section.type }}\">\n            <ng-container [ngSwitch]=\"section.type\">\n\n                <!-- INNER TITLE -->\n                <ng-container *ngSwitchCase=\"'title'\">\n                    <n7-inner-title [data]=\"widgets[section.id].ds.out$ | async\">\n                    </n7-inner-title>\n                </ng-container>\n\n                <!-- METADATA VIEWER -->\n                <ng-container *ngSwitchCase=\"'metadata'\">\n                    <div class=\"mr-resource-modal__metadata-content\">\n                        <h3 *ngIf=\"section.title\" class=\"mr-resource-modal__section-title mr-resource__metadata-title\">\n                            {{ section.title }}\n                        </h3>\n                        <mr-read-more [data]=\"section.readmore\">\n                            <n7-metadata-viewer [data]=\"widgets[section.id].ds.out$ | async\">\n                            </n7-metadata-viewer>\n                        </mr-read-more>\n                    </div>\n                </ng-container>\n\n                <!-- COLLECTION -->\n                <ng-container *ngSwitchCase=\"'collection'\">\n                    <ng-container *ngIf=\"widgets[section.id].ds.out$ | async as collection$\">\n                        <div *ngIf=\"collection$.items?.length > 0\" class=\"mr-resource__collection-content\">\n                            <h3 *ngIf=\"section.title\" class=\"mr-resource-modal__section-title\">\n                                {{ section.title }}\n                            </h3>\n                            <div\n                                class=\"mr-resource__collection-grid {{ section.grid ? 'n7-grid-' + section.grid : '' }}\">\n                                <n7-item-preview *ngFor=\"let item of collection$?.items\" [data]=\"item\">\n                                </n7-item-preview>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n\n                <!-- ITEM PREVIEW -->\n                <ng-container *ngSwitchCase=\"'preview'\">\n                    <h3 *ngIf=\"section.title\" class=\"mr-resource-modal__section-title\">\n                        {{ section.title }}\n                    </h3>\n                    <n7-item-preview [data]=\"widgets[section.id].ds.out$ | async\">\n                    </n7-item-preview>\n                </ng-container>\n\n            </ng-container>\n        </section>\n    </ng-container>\n</ng-template>\n", components: [{ type: i3.LoaderComponent, selector: "n7-loader", inputs: ["data"] }, { type: i3.InnerTitleComponent, selector: "n7-inner-title", inputs: ["data", "emit"] }, { type: i4.ReadMoreComponent, selector: "mr-read-more", inputs: ["data"] }, { type: i3.MetadataViewerComponent, selector: "n7-metadata-viewer", inputs: ["data", "emit"] }, { type: i3.ItemPreviewComponent, selector: "n7-item-preview", inputs: ["data", "emit"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i5.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i5.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "async": i5.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.0", ngImport: i0, type: MrResourceModalComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mr-resource-modal', template: "<div *ngIf=\"status !== 'IDLE'\" class=\"mr-modal mr-resource-modal\" [ngClass]=\"{\n        'is-loading': status === 'LOADING',\n        'is-error': status === 'ERROR'\n      }\">\n    <div class=\"mr-modal__overlay\" (click)=\"onClose($event.target)\">\n        <div class=\"mr-modal__window mr-resource-modal__window\">\n            <ng-container [ngSwitch]=\"status\">\n\n                <!-- Loading -->\n                <ng-container *ngSwitchCase=\"'LOADING'\">\n                    <div class=\"mr-modal__loader\">\n                        <n7-loader></n7-loader>\n                    </div>\n                </ng-container>\n\n                <!-- Error -->\n                <ng-container *ngSwitchCase=\"'ERROR'\">\n\n                    <div class=\"mr-modal__header mr-resource-modal__header\">\n                        <h2 class=\"mr-modal__header-title\">\n                            {{ errorTitle }}\n                        </h2>\n                        <div class=\"mr-modal__close\">\n                            <a class=\"mr-modal__close-link\" (click)=\"onClose()\"><span class=\"n7-icon-close\"></span></a>\n                        </div>\n                    </div>\n                    <div class=\"mr-modal__content\">\n                        <p class=\"mr-modal__error-text\">{{ errorDescription }}</p>\n                    </div>\n\n                </ng-container>\n\n                <!-- Success -->\n                <ng-container *ngSwitchCase=\"'SUCCESS'\">\n                    \n                    <div class=\"mr-modal__header mr-resource-modal__header\">\n                        <ng-container *ngIf=\"config.sections as sections\">\n                            <ng-container *ngTemplateOutlet=\"blocks; context: { $implicit: sections.top }\"></ng-container>\n                        </ng-container>\n                        <div class=\"mr-modal__close\">\n                            <a class=\"mr-modal__close-link\" (click)=\"onClose()\"><span class=\"n7-icon-close\"></span></a>\n                        </div>\n                    </div>\n                    <div class=\"mr-modal__content mr-resource-modal__content\">\n                        <ng-container *ngIf=\"config.sections as sections\">\n                            <ng-container *ngTemplateOutlet=\"blocks; context: { $implicit: sections.content }\"></ng-container>                            \n                        </ng-container>\n                    </div>\n                </ng-container>\n\n            </ng-container>\n\n        </div>\n    </div>\n</div>\n\n<ng-template #blocks let-list>\n    <ng-container *ngFor=\"let section of list\">\n        <section *ngIf=\"widgets[section.id].ds && (widgets[section.id].ds.out$ | async)\"\n            class=\"{{ 'mr-resource__section mr-resource__' + section.type }}\">\n            <ng-container [ngSwitch]=\"section.type\">\n\n                <!-- INNER TITLE -->\n                <ng-container *ngSwitchCase=\"'title'\">\n                    <n7-inner-title [data]=\"widgets[section.id].ds.out$ | async\">\n                    </n7-inner-title>\n                </ng-container>\n\n                <!-- METADATA VIEWER -->\n                <ng-container *ngSwitchCase=\"'metadata'\">\n                    <div class=\"mr-resource-modal__metadata-content\">\n                        <h3 *ngIf=\"section.title\" class=\"mr-resource-modal__section-title mr-resource__metadata-title\">\n                            {{ section.title }}\n                        </h3>\n                        <mr-read-more [data]=\"section.readmore\">\n                            <n7-metadata-viewer [data]=\"widgets[section.id].ds.out$ | async\">\n                            </n7-metadata-viewer>\n                        </mr-read-more>\n                    </div>\n                </ng-container>\n\n                <!-- COLLECTION -->\n                <ng-container *ngSwitchCase=\"'collection'\">\n                    <ng-container *ngIf=\"widgets[section.id].ds.out$ | async as collection$\">\n                        <div *ngIf=\"collection$.items?.length > 0\" class=\"mr-resource__collection-content\">\n                            <h3 *ngIf=\"section.title\" class=\"mr-resource-modal__section-title\">\n                                {{ section.title }}\n                            </h3>\n                            <div\n                                class=\"mr-resource__collection-grid {{ section.grid ? 'n7-grid-' + section.grid : '' }}\">\n                                <n7-item-preview *ngFor=\"let item of collection$?.items\" [data]=\"item\">\n                                </n7-item-preview>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n\n                <!-- ITEM PREVIEW -->\n                <ng-container *ngSwitchCase=\"'preview'\">\n                    <h3 *ngIf=\"section.title\" class=\"mr-resource-modal__section-title\">\n                        {{ section.title }}\n                    </h3>\n                    <n7-item-preview [data]=\"widgets[section.id].ds.out$ | async\">\n                    </n7-item-preview>\n                </ng-container>\n\n            </ng-container>\n        </section>\n    </ng-container>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i2.MrResourceModalService }]; } });
//# sourceMappingURL=data:application/json;base64,