import { Component, ContentChild, Input, TemplateRef } from '@angular/core';
import { _t } from '@n7-frontend/core';
import * as i0 from "@angular/core";
import * as i1 from "@n7-frontend/components";
import * as i2 from "@angular/common";
export class MrFormComponent {
    ngOnInit() {
        if (this.group) {
            this.sections = this.form.config.sections
                .filter(({ id }) => this.group.sections.includes(id));
        }
        else {
            this.sections = this.form.config.sections;
        }
        // translations
        this.sections = this.sections.map((section) => ({
            ...section,
            title: _t(section.title),
            description: _t(section.description)
        }));
    }
}
MrFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: MrFormComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
MrFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.2", type: MrFormComponent, selector: "mr-form", inputs: { form: "form", group: "group" }, queries: [{ propertyName: "templateRef", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0, template: "<div *ngIf=\"form.loaded$ | async\" class=\"mr-form {{ group?.classes || '' }}\">\r\n    <div *ngFor=\"let section of sections\" class=\"mr-form__section {{ section.classes || '' }}\" \r\n         [ngClass]=\"{ 'mr-form__section-advanced' : section.advancedSection  }\" >\r\n        \r\n        <div class=\"mr-form__section-header\">\r\n            <h3 *ngIf=\"section.title\" class=\"mr-form__section-title\">{{ section.title }}</h3>\r\n            <p *ngIf=\"section.description\" class=\"mr-form__section-description\">{{ section.description }}</p>\r\n        </div>\r\n        \r\n        <div class=\"mr-form__section-content\">\r\n            <div *ngFor=\"let input of section.inputs\" class=\"mr-form__element {{ input.options?.classes || '' }}\">\r\n                <ng-container [ngSwitch]=\"input.type\">\r\n\r\n                    <!-- INPUT TEXT -->\r\n                    <n7-input-text *ngSwitchCase=\"'text'\" \r\n                        [data]=\"form.inputs[input.id].ds.out$ | async\"\r\n                        [emit]=\"form.inputs[input.id].emit\"></n7-input-text>\r\n\r\n                    <!-- INPUT CHECKBOX -->\r\n                    <n7-input-checkbox *ngSwitchCase=\"'checkbox'\" \r\n                        [data]=\"form.inputs[input.id].ds.out$ | async\"\r\n                        [emit]=\"form.inputs[input.id].emit\"></n7-input-checkbox>\r\n\r\n                    <!-- INPUT SELECT -->\r\n                    <n7-input-select *ngSwitchCase=\"'select'\" \r\n                        [data]=\"form.inputs[input.id].ds.out$ | async\"\r\n                        [emit]=\"form.inputs[input.id].emit\"></n7-input-select>\r\n\r\n                    <!-- DEFAULT (external template) -->\r\n                    <ng-container *ngSwitchDefault>\r\n                        <ng-template *ngTemplateOutlet=\"\r\n                        templateRef; \r\n                        context: { \r\n                            type: input.type, \r\n                            input: form.inputs[input.id] \r\n                        }\"></ng-template>\r\n                    </ng-container>\r\n\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>", components: [{ type: i1.InputTextComponent, selector: "n7-input-text", inputs: ["data", "emit"] }, { type: i1.InputCheckboxComponent, selector: "n7-input-checkbox", inputs: ["data", "emit"] }, { type: i1.InputSelectComponent, selector: "n7-input-select", inputs: ["data", "emit"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i2.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "async": i2.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: MrFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mr-form', template: "<div *ngIf=\"form.loaded$ | async\" class=\"mr-form {{ group?.classes || '' }}\">\r\n    <div *ngFor=\"let section of sections\" class=\"mr-form__section {{ section.classes || '' }}\" \r\n         [ngClass]=\"{ 'mr-form__section-advanced' : section.advancedSection  }\" >\r\n        \r\n        <div class=\"mr-form__section-header\">\r\n            <h3 *ngIf=\"section.title\" class=\"mr-form__section-title\">{{ section.title }}</h3>\r\n            <p *ngIf=\"section.description\" class=\"mr-form__section-description\">{{ section.description }}</p>\r\n        </div>\r\n        \r\n        <div class=\"mr-form__section-content\">\r\n            <div *ngFor=\"let input of section.inputs\" class=\"mr-form__element {{ input.options?.classes || '' }}\">\r\n                <ng-container [ngSwitch]=\"input.type\">\r\n\r\n                    <!-- INPUT TEXT -->\r\n                    <n7-input-text *ngSwitchCase=\"'text'\" \r\n                        [data]=\"form.inputs[input.id].ds.out$ | async\"\r\n                        [emit]=\"form.inputs[input.id].emit\"></n7-input-text>\r\n\r\n                    <!-- INPUT CHECKBOX -->\r\n                    <n7-input-checkbox *ngSwitchCase=\"'checkbox'\" \r\n                        [data]=\"form.inputs[input.id].ds.out$ | async\"\r\n                        [emit]=\"form.inputs[input.id].emit\"></n7-input-checkbox>\r\n\r\n                    <!-- INPUT SELECT -->\r\n                    <n7-input-select *ngSwitchCase=\"'select'\" \r\n                        [data]=\"form.inputs[input.id].ds.out$ | async\"\r\n                        [emit]=\"form.inputs[input.id].emit\"></n7-input-select>\r\n\r\n                    <!-- DEFAULT (external template) -->\r\n                    <ng-container *ngSwitchDefault>\r\n                        <ng-template *ngTemplateOutlet=\"\r\n                        templateRef; \r\n                        context: { \r\n                            type: input.type, \r\n                            input: form.inputs[input.id] \r\n                        }\"></ng-template>\r\n                    </ng-container>\r\n\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>" }]
        }], propDecorators: { form: [{
                type: Input
            }], group: [{
                type: Input
            }], templateRef: [{
                type: ContentChild,
                args: [TemplateRef]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL243LWJvaWxlcnBsYXRlLWxpYi9zcmMvbGliL211cnVjYS9jb21wb25lbnRzL2Zvcm0vZm9ybS50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL243LWJvaWxlcnBsYXRlLWxpYi9zcmMvbGliL211cnVjYS9jb21wb25lbnRzL2Zvcm0vZm9ybS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxXQUFXLEVBQ3BELE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxFQUFFLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7OztBQVF2QyxNQUFNLE9BQU8sZUFBZTtJQVUxQixRQUFRO1FBQ04sSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRO2lCQUN0QyxNQUFNLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUN6RDthQUFNO1lBQ0wsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7U0FDM0M7UUFFRCxlQUFlO1FBQ2YsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQztZQUM5QyxHQUFHLE9BQU87WUFDVixLQUFLLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7WUFDeEIsV0FBVyxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDO1NBQ3JDLENBQUMsQ0FBQyxDQUFDO0lBQ04sQ0FBQzs7NEdBeEJVLGVBQWU7Z0dBQWYsZUFBZSxrSUFLWixXQUFXLGdEQ2hCM0IsZ3FFQTBDTTsyRkQvQk8sZUFBZTtrQkFKM0IsU0FBUzsrQkFDRSxTQUFTOzhCQUlWLElBQUk7c0JBQVosS0FBSztnQkFFRyxLQUFLO3NCQUFiLEtBQUs7Z0JBR0MsV0FBVztzQkFEakIsWUFBWTt1QkFBQyxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgSW5wdXQsIE9uSW5pdCwgVGVtcGxhdGVSZWZcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgX3QgfSBmcm9tICdAbjctZnJvbnRlbmQvY29yZSc7XHJcbmltcG9ydCB7IE1yRm9ybUNvbmZpZ0dyb3VwLCBNckZvcm1Db25maWdTZWN0aW9uIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9mb3JtLmludGVyZmFjZSc7XHJcbmltcG9ydCB7IE1yRm9ybU1vZGVsIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2Zvcm0ubW9kZWwnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdtci1mb3JtJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vZm9ybS5odG1sJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIE1yRm9ybUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQElucHV0KCkgZm9ybTogTXJGb3JtTW9kZWw7XHJcblxyXG4gIEBJbnB1dCgpIGdyb3VwPzogTXJGb3JtQ29uZmlnR3JvdXA7XHJcblxyXG4gIEBDb250ZW50Q2hpbGQoVGVtcGxhdGVSZWYpXHJcbiAgcHVibGljIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG5cclxuICBwdWJsaWMgc2VjdGlvbnM6IE1yRm9ybUNvbmZpZ1NlY3Rpb25bXTtcclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICBpZiAodGhpcy5ncm91cCkge1xyXG4gICAgICB0aGlzLnNlY3Rpb25zID0gdGhpcy5mb3JtLmNvbmZpZy5zZWN0aW9uc1xyXG4gICAgICAgIC5maWx0ZXIoKHsgaWQgfSkgPT4gdGhpcy5ncm91cC5zZWN0aW9ucy5pbmNsdWRlcyhpZCkpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5zZWN0aW9ucyA9IHRoaXMuZm9ybS5jb25maWcuc2VjdGlvbnM7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gdHJhbnNsYXRpb25zXHJcbiAgICB0aGlzLnNlY3Rpb25zID0gdGhpcy5zZWN0aW9ucy5tYXAoKHNlY3Rpb24pID0+ICh7XHJcbiAgICAgIC4uLnNlY3Rpb24sXHJcbiAgICAgIHRpdGxlOiBfdChzZWN0aW9uLnRpdGxlKSxcclxuICAgICAgZGVzY3JpcHRpb246IF90KHNlY3Rpb24uZGVzY3JpcHRpb24pXHJcbiAgICB9KSk7XHJcbiAgfVxyXG59XHJcbiIsIjxkaXYgKm5nSWY9XCJmb3JtLmxvYWRlZCQgfCBhc3luY1wiIGNsYXNzPVwibXItZm9ybSB7eyBncm91cD8uY2xhc3NlcyB8fCAnJyB9fVwiPlxyXG4gICAgPGRpdiAqbmdGb3I9XCJsZXQgc2VjdGlvbiBvZiBzZWN0aW9uc1wiIGNsYXNzPVwibXItZm9ybV9fc2VjdGlvbiB7eyBzZWN0aW9uLmNsYXNzZXMgfHwgJycgfX1cIiBcclxuICAgICAgICAgW25nQ2xhc3NdPVwieyAnbXItZm9ybV9fc2VjdGlvbi1hZHZhbmNlZCcgOiBzZWN0aW9uLmFkdmFuY2VkU2VjdGlvbiAgfVwiID5cclxuICAgICAgICBcclxuICAgICAgICA8ZGl2IGNsYXNzPVwibXItZm9ybV9fc2VjdGlvbi1oZWFkZXJcIj5cclxuICAgICAgICAgICAgPGgzICpuZ0lmPVwic2VjdGlvbi50aXRsZVwiIGNsYXNzPVwibXItZm9ybV9fc2VjdGlvbi10aXRsZVwiPnt7IHNlY3Rpb24udGl0bGUgfX08L2gzPlxyXG4gICAgICAgICAgICA8cCAqbmdJZj1cInNlY3Rpb24uZGVzY3JpcHRpb25cIiBjbGFzcz1cIm1yLWZvcm1fX3NlY3Rpb24tZGVzY3JpcHRpb25cIj57eyBzZWN0aW9uLmRlc2NyaXB0aW9uIH19PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIFxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJtci1mb3JtX19zZWN0aW9uLWNvbnRlbnRcIj5cclxuICAgICAgICAgICAgPGRpdiAqbmdGb3I9XCJsZXQgaW5wdXQgb2Ygc2VjdGlvbi5pbnB1dHNcIiBjbGFzcz1cIm1yLWZvcm1fX2VsZW1lbnQge3sgaW5wdXQub3B0aW9ucz8uY2xhc3NlcyB8fCAnJyB9fVwiPlxyXG4gICAgICAgICAgICAgICAgPG5nLWNvbnRhaW5lciBbbmdTd2l0Y2hdPVwiaW5wdXQudHlwZVwiPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICA8IS0tIElOUFVUIFRFWFQgLS0+XHJcbiAgICAgICAgICAgICAgICAgICAgPG43LWlucHV0LXRleHQgKm5nU3dpdGNoQ2FzZT1cIid0ZXh0J1wiIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBbZGF0YV09XCJmb3JtLmlucHV0c1tpbnB1dC5pZF0uZHMub3V0JCB8IGFzeW5jXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgW2VtaXRdPVwiZm9ybS5pbnB1dHNbaW5wdXQuaWRdLmVtaXRcIj48L243LWlucHV0LXRleHQ+XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIDwhLS0gSU5QVVQgQ0hFQ0tCT1ggLS0+XHJcbiAgICAgICAgICAgICAgICAgICAgPG43LWlucHV0LWNoZWNrYm94ICpuZ1N3aXRjaENhc2U9XCInY2hlY2tib3gnXCIgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFtkYXRhXT1cImZvcm0uaW5wdXRzW2lucHV0LmlkXS5kcy5vdXQkIHwgYXN5bmNcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBbZW1pdF09XCJmb3JtLmlucHV0c1tpbnB1dC5pZF0uZW1pdFwiPjwvbjctaW5wdXQtY2hlY2tib3g+XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIDwhLS0gSU5QVVQgU0VMRUNUIC0tPlxyXG4gICAgICAgICAgICAgICAgICAgIDxuNy1pbnB1dC1zZWxlY3QgKm5nU3dpdGNoQ2FzZT1cIidzZWxlY3QnXCIgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFtkYXRhXT1cImZvcm0uaW5wdXRzW2lucHV0LmlkXS5kcy5vdXQkIHwgYXN5bmNcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBbZW1pdF09XCJmb3JtLmlucHV0c1tpbnB1dC5pZF0uZW1pdFwiPjwvbjctaW5wdXQtc2VsZWN0PlxyXG5cclxuICAgICAgICAgICAgICAgICAgICA8IS0tIERFRkFVTFQgKGV4dGVybmFsIHRlbXBsYXRlKSAtLT5cclxuICAgICAgICAgICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ1N3aXRjaERlZmF1bHQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSAqbmdUZW1wbGF0ZU91dGxldD1cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVJlZjsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQ6IHsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbnB1dC50eXBlLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBmb3JtLmlucHV0c1tpbnB1dC5pZF0gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cIj48L25nLXRlbXBsYXRlPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxyXG5cclxuICAgICAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj4iXX0=