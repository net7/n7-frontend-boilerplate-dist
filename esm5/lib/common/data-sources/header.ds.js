import { __assign, __extends } from "tslib";
import { DataSource } from '@n7-frontend/core';
var MOBILE_CLASS = 'is-mobile-nav-displayed';
var ACTIVE_CLASS = 'is-active';
var HeaderDS = /** @class */ (function (_super) {
    __extends(HeaderDS, _super);
    function HeaderDS() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HeaderDS.prototype.transform = function (data) {
        if (!data) {
            return null;
        }
        return __assign(__assign({}, data), { menuToggle: {
                open: {
                    payload: 'mobile-open'
                },
                close: {
                    payload: 'mobile-close'
                }
            } });
    };
    HeaderDS.prototype.onCurrentNavChange = function (payload) {
        this.output.nav.items.forEach(function (item) {
            item.classes = item._meta.id === payload ? ACTIVE_CLASS : '';
        });
    };
    HeaderDS.prototype.onRouterChange = function () {
        if (!this.output) {
            return;
        }
        var classes = this.output.classes;
        classes = classes || '';
        classes = classes.split(' ');
        if (classes.includes(MOBILE_CLASS)) {
            classes.splice(classes.indexOf(MOBILE_CLASS), 1);
            this.output.classes = classes.join(' ');
        }
    };
    HeaderDS.prototype.onClick = function (payload) {
        // mobile control
        if (['mobile-open', 'mobile-close'].includes(payload)) {
            var classes = this.output.classes;
            classes = classes || '';
            classes = classes.split(' ');
            if (classes.includes(MOBILE_CLASS)) {
                classes.splice(classes.indexOf(MOBILE_CLASS), 1);
            }
            else {
                classes.push(MOBILE_CLASS);
            }
            this.output.classes = classes.join(' ');
        }
    };
    return HeaderDS;
}(DataSource));
export { HeaderDS };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmRzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG43LWZyb250ZW5kL2JvaWxlcnBsYXRlLyIsInNvdXJjZXMiOlsibGliL2NvbW1vbi9kYXRhLXNvdXJjZXMvaGVhZGVyLmRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFHL0MsSUFBTSxZQUFZLEdBQUcseUJBQXlCLENBQUM7QUFFL0MsSUFBTSxZQUFZLEdBQUcsV0FBVyxDQUFDO0FBRWpDO0lBQThCLDRCQUFVO0lBQXhDOztJQXNEQSxDQUFDO0lBckRXLDRCQUFTLEdBQW5CLFVBQW9CLElBQUk7UUFDdEIsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNULE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCw2QkFDSyxJQUFJLEtBQ1AsVUFBVSxFQUFFO2dCQUNWLElBQUksRUFBRTtvQkFDSixPQUFPLEVBQUUsYUFBYTtpQkFDdkI7Z0JBQ0QsS0FBSyxFQUFFO29CQUNMLE9BQU8sRUFBRSxjQUFjO2lCQUN4QjthQUNGLElBQ0Q7SUFDSixDQUFDO0lBRU0scUNBQWtCLEdBQXpCLFVBQTBCLE9BQU87UUFDL0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUFDLElBQUk7WUFDakMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsS0FBSyxPQUFPLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQy9ELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLGlDQUFjLEdBQXJCO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDaEIsT0FBTztTQUNSO1FBQ0ssSUFBQSw2QkFBTyxDQUFpQjtRQUM5QixPQUFPLEdBQUcsT0FBTyxJQUFJLEVBQUUsQ0FBQztRQUN4QixPQUFPLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUU3QixJQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLEVBQUU7WUFDbEMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ2pELElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDekM7SUFDSCxDQUFDO0lBRU0sMEJBQU8sR0FBZCxVQUFlLE9BQU87UUFDcEIsaUJBQWlCO1FBQ2pCLElBQUksQ0FBQyxhQUFhLEVBQUUsY0FBYyxDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQy9DLElBQUEsNkJBQU8sQ0FBaUI7WUFDOUIsT0FBTyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7WUFDeEIsT0FBTyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7WUFFN0IsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxFQUFFO2dCQUNsQyxPQUFPLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDbEQ7aUJBQU07Z0JBQ0wsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQzthQUM1QjtZQUNELElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDekM7SUFDSCxDQUFDO0lBQ0gsZUFBQztBQUFELENBQUMsQUF0REQsQ0FBOEIsVUFBVSxHQXNEdkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRhU291cmNlIH0gZnJvbSAnQG43LWZyb250ZW5kL2NvcmUnO1xyXG5pbXBvcnQgeyBIZWFkZXJEYXRhIH0gZnJvbSAnQG43LWZyb250ZW5kL2NvbXBvbmVudHMnO1xyXG5cclxuY29uc3QgTU9CSUxFX0NMQVNTID0gJ2lzLW1vYmlsZS1uYXYtZGlzcGxheWVkJztcclxuXHJcbmNvbnN0IEFDVElWRV9DTEFTUyA9ICdpcy1hY3RpdmUnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEhlYWRlckRTIGV4dGVuZHMgRGF0YVNvdXJjZSB7XHJcbiAgcHJvdGVjdGVkIHRyYW5zZm9ybShkYXRhKTogSGVhZGVyRGF0YSB7XHJcbiAgICBpZiAoIWRhdGEpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgLi4uZGF0YSxcclxuICAgICAgbWVudVRvZ2dsZToge1xyXG4gICAgICAgIG9wZW46IHtcclxuICAgICAgICAgIHBheWxvYWQ6ICdtb2JpbGUtb3BlbidcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNsb3NlOiB7XHJcbiAgICAgICAgICBwYXlsb2FkOiAnbW9iaWxlLWNsb3NlJ1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvbkN1cnJlbnROYXZDaGFuZ2UocGF5bG9hZCkge1xyXG4gICAgdGhpcy5vdXRwdXQubmF2Lml0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgaXRlbS5jbGFzc2VzID0gaXRlbS5fbWV0YS5pZCA9PT0gcGF5bG9hZCA/IEFDVElWRV9DTEFTUyA6ICcnO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb25Sb3V0ZXJDaGFuZ2UoKSB7XHJcbiAgICBpZiAoIXRoaXMub3V0cHV0KSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGxldCB7IGNsYXNzZXMgfSA9IHRoaXMub3V0cHV0O1xyXG4gICAgY2xhc3NlcyA9IGNsYXNzZXMgfHwgJyc7XHJcbiAgICBjbGFzc2VzID0gY2xhc3Nlcy5zcGxpdCgnICcpO1xyXG5cclxuICAgIGlmIChjbGFzc2VzLmluY2x1ZGVzKE1PQklMRV9DTEFTUykpIHtcclxuICAgICAgY2xhc3Nlcy5zcGxpY2UoY2xhc3Nlcy5pbmRleE9mKE1PQklMRV9DTEFTUyksIDEpO1xyXG4gICAgICB0aGlzLm91dHB1dC5jbGFzc2VzID0gY2xhc3Nlcy5qb2luKCcgJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb25DbGljayhwYXlsb2FkKSB7XHJcbiAgICAvLyBtb2JpbGUgY29udHJvbFxyXG4gICAgaWYgKFsnbW9iaWxlLW9wZW4nLCAnbW9iaWxlLWNsb3NlJ10uaW5jbHVkZXMocGF5bG9hZCkpIHtcclxuICAgICAgbGV0IHsgY2xhc3NlcyB9ID0gdGhpcy5vdXRwdXQ7XHJcbiAgICAgIGNsYXNzZXMgPSBjbGFzc2VzIHx8ICcnO1xyXG4gICAgICBjbGFzc2VzID0gY2xhc3Nlcy5zcGxpdCgnICcpO1xyXG5cclxuICAgICAgaWYgKGNsYXNzZXMuaW5jbHVkZXMoTU9CSUxFX0NMQVNTKSkge1xyXG4gICAgICAgIGNsYXNzZXMuc3BsaWNlKGNsYXNzZXMuaW5kZXhPZihNT0JJTEVfQ0xBU1MpLCAxKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjbGFzc2VzLnB1c2goTU9CSUxFX0NMQVNTKTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLm91dHB1dC5jbGFzc2VzID0gY2xhc3Nlcy5qb2luKCcgJyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==