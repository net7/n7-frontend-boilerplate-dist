// FIXME: custom inputs
// export interface ConfigMurucaAdvancedSearchInputCustom<T>
//   extends ConfigMurucaAdvancedSearchInput<T> {
//   type: string;
//   data: object;
// }
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWR2YW5jZWQtc2VhcmNoLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG43LWZyb250ZW5kL2JvaWxlcnBsYXRlLyIsInNvdXJjZXMiOlsibGliL2NvbmZpZy10eXBlcy9tdXJ1Y2EvYWR2YW5jZWQtc2VhcmNoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlHQSx1QkFBdUI7QUFDdkIsNERBQTREO0FBQzVELGlEQUFpRDtBQUNqRCxrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIElucHV0Q2hlY2tib3hEYXRhLCBJbnB1dFNlbGVjdERhdGEsIElucHV0VGV4dERhdGEsIE1hcERhdGEsIEhpc3RvZ3JhbVJhbmdlRGF0YVxyXG59IGZyb20gJ0BuNy1mcm9udGVuZC9jb21wb25lbnRzJztcclxuaW1wb3J0IHsgQ29uZmlnTXVydWNhTGF5b3V0IH0gZnJvbSAnLi9sYXlvdXRzJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlnTXVydWNhQWR2YW5jZWRTZWFyY2hMYXlvdXQgZXh0ZW5kcyBDb25maWdNdXJ1Y2FMYXlvdXQge1xyXG4gIC8qKiByZXN1bHRzIHBhZ2UgdXJsICovXHJcbiAgcmVzdWx0c1VybDogc3RyaW5nO1xyXG4gIGZvcm1Db25maWc6IHtcclxuICAgIC8qKiBmb3JtIHN1Ym1pdCBidXR0b24gICovXHJcbiAgICBzdWJtaXRCdXR0b246IHtcclxuICAgICAgbGFiZWw6IHN0cmluZztcclxuICAgIH07XHJcbiAgICAvKiogZm9ybSByZXNldCBidXR0b24gICovXHJcbiAgICByZXNldEJ1dHRvbjoge1xyXG4gICAgICBsYWJlbDogc3RyaW5nO1xyXG4gICAgfTtcclxuICAgIC8qKiBmb3JtIGdyb3VwcyAoZm9ybSBhY2NvcmRpb24gc2VjdGlvbikgKi9cclxuICAgIGdyb3Vwczoge1xyXG4gICAgICAvKiogaWQgKHVuaXF1ZSkgKi9cclxuICAgICAgaWQ6IHN0cmluZztcclxuICAgICAgLyoqIGdyb3VwIHNlY3Rpb25zIChpZCkgW3NlY3Rpb24xLCBzZWN0aW9uMiwgLi4uXSAqL1xyXG4gICAgICBzZWN0aW9uczogc3RyaW5nW107XHJcbiAgICAgIC8qKiBhZGl0aW9uYWwgY3NzIGNsYXNzZXMgKi9cclxuICAgICAgY2xhc3Nlcz86IHN0cmluZztcclxuICAgICAgLyoqIGFkaXRpb25hbCBvcHRpb25zICovXHJcbiAgICAgIG9wdGlvbnM/OiB7XHJcbiAgICAgICAgLyoqIGdyb3VwIGxhYmVsICovXHJcbiAgICAgICAgbGFiZWw6IHN0cmluZztcclxuICAgICAgICAvKiogZ3JvdXAgaXMgKHZpc3VhbGx5KSBvcGVuPyAqL1xyXG4gICAgICAgIGlzT3Blbj86IGJvb2xlYW47XHJcbiAgICAgICAgLyoqIHNob3cgZ3JvdXAgaGVhZGVyPyAqL1xyXG4gICAgICAgIHNob3dIZWFkZXI/OiBib29sZWFuO1xyXG4gICAgICB9O1xyXG4gICAgfVtdO1xyXG4gICAgc2VjdGlvbnM6IENvbmZpZ011cnVjYUFkdmFuY2VkU2VhcmNoU2VjdGlvbltdO1xyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlnTXVydWNhQWR2YW5jZWRTZWFyY2hTZWN0aW9uIHtcclxuICAvKiogaWQgKHVuaXF1ZSkgKi9cclxuICBpZDogc3RyaW5nO1xyXG4gIC8qKiBzZWN0aW9uIHRpdGxlICovXHJcbiAgdGl0bGU/OiBzdHJpbmc7XHJcbiAgLyoqIHNlY3Rpb24gZGVzY3JpcHRpb24gdGV4dCAqL1xyXG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xyXG4gIC8qKiBpcyBhZHZhbmNlZD8gZm9yIGNzcyBwdXJwb3NlcyAqL1xyXG4gIGFkdmFuY2VkU2VjdGlvbj86IGJvb2xlYW47XHJcbiAgLyoqIHNlY3Rpb24gaW5wdXRzICovXHJcbiAgaW5wdXRzOiAoXHJcbiAgICBDb25maWdNdXJ1Y2FBZHZhbmNlZFNlYXJjaElucHV0VGV4dDx1bmtub3duPlxyXG4gICAgfCBDb25maWdNdXJ1Y2FBZHZhbmNlZFNlYXJjaElucHV0Q2hlY2tib3g8dW5rbm93bj5cclxuICAgIHwgQ29uZmlnTXVydWNhQWR2YW5jZWRTZWFyY2hJbnB1dFNlbGVjdDx1bmtub3duPlxyXG4gICAgfCBDb25maWdNdXJ1Y2FBZHZhbmNlZFNlYXJjaElucHV0TWFwPHVua25vd24+XHJcbiAgICAvLyBGSVhNRTogY3VzdG9tIGlucHV0c1xyXG4gICAgLy8gfCBDb25maWdNdXJ1Y2FBZHZhbmNlZFNlYXJjaElucHV0Q3VzdG9tPHVua25vd24+XHJcbiAgKVtdO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENvbmZpZ011cnVjYUFkdmFuY2VkU2VhcmNoSW5wdXQ8VD4ge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIGlucHV0IHN0YXRlICovXHJcbiAgc3RhdGU/OiB7XHJcbiAgICB2YWx1ZTogVDtcclxuICAgIGRpc2FibGVkPzogYm9vbGVhbjtcclxuICAgIGhpZGRlbj86IGJvb2xlYW47XHJcbiAgfTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDb25maWdNdXJ1Y2FBZHZhbmNlZFNlYXJjaElucHV0VGV4dDxUPlxyXG4gIGV4dGVuZHMgQ29uZmlnTXVydWNhQWR2YW5jZWRTZWFyY2hJbnB1dDxUPiB7XHJcbiAgdHlwZTogJ3RleHQnO1xyXG4gIGRhdGE6IElucHV0VGV4dERhdGE7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWR2YW5jZWRJbnB1dENoZWNrYm94RGF0YSBleHRlbmRzIElucHV0Q2hlY2tib3hEYXRhIHtcclxuICBpZDogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENvbmZpZ011cnVjYUFkdmFuY2VkU2VhcmNoSW5wdXRDaGVja2JveDxUPlxyXG4gIGV4dGVuZHMgQ29uZmlnTXVydWNhQWR2YW5jZWRTZWFyY2hJbnB1dDxUPiB7XHJcbiAgdHlwZTogJ2NoZWNrYm94JztcclxuICBkYXRhOiBBZHZhbmNlZElucHV0Q2hlY2tib3hEYXRhO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENvbmZpZ011cnVjYUFkdmFuY2VkU2VhcmNoSW5wdXRTZWxlY3Q8VD5cclxuICBleHRlbmRzIENvbmZpZ011cnVjYUFkdmFuY2VkU2VhcmNoSW5wdXQ8VD4ge1xyXG4gIHR5cGU6ICdzZWxlY3QnO1xyXG4gIGRhdGE6IElucHV0U2VsZWN0RGF0YTtcclxufVxyXG5cclxuLy8gQWxsb3cgZW1iZWRkaW5nIG9mIG1hcC1jb21wb25lbnQgaW50byB0aGUgc2VhcmNoIGZhY2V0c1xyXG5leHBvcnQgaW50ZXJmYWNlIENvbmZpZ011cnVjYUFkdmFuY2VkU2VhcmNoSW5wdXRNYXA8VD5cclxuICBleHRlbmRzIENvbmZpZ011cnVjYUFkdmFuY2VkU2VhcmNoSW5wdXQ8VD4ge1xyXG4gIHR5cGU6ICdtYXAnO1xyXG4gIGRhdGE6IE1hcERhdGE7XHJcbn1cclxuXHJcbi8vIEFsbG93IGVtYmVkZGluZyBvZiBoaXN0b2dyYW0tY29tcG9uZW50IGludG8gdGhlIHNlYXJjaCBmYWNldHNcclxuZXhwb3J0IGludGVyZmFjZSBDb25maWdNdXJ1Y2FBZHZhbmNlZFNlYXJjaElucHV0SGlzdG9ncmFtPFQ+XHJcbiAgZXh0ZW5kcyBDb25maWdNdXJ1Y2FBZHZhbmNlZFNlYXJjaElucHV0PFQ+IHtcclxuICB0eXBlOiAnaGlzdG9ncmFtJztcclxuICBkYXRhOiBIaXN0b2dyYW1SYW5nZURhdGE7XHJcbn1cclxuXHJcbi8vIEZJWE1FOiBjdXN0b20gaW5wdXRzXHJcbi8vIGV4cG9ydCBpbnRlcmZhY2UgQ29uZmlnTXVydWNhQWR2YW5jZWRTZWFyY2hJbnB1dEN1c3RvbTxUPlxyXG4vLyAgIGV4dGVuZHMgQ29uZmlnTXVydWNhQWR2YW5jZWRTZWFyY2hJbnB1dDxUPiB7XHJcbi8vICAgdHlwZTogc3RyaW5nO1xyXG4vLyAgIGRhdGE6IG9iamVjdDtcclxuLy8gfVxyXG4iXX0=