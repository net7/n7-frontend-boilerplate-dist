// FIXME: custom inputs
// export interface ConfigMurucaAdvancedSearchInputCustom<T>
//   extends ConfigMurucaAdvancedSearchInput<T> {
//   type: string;
//   data: object;
// }
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWR2YW5jZWQtc2VhcmNoLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG43LWZyb250ZW5kL2JvaWxlcnBsYXRlLyIsInNvdXJjZXMiOlsibGliL2NvbmZpZy10eXBlcy9tdXJ1Y2EvYWR2YW5jZWQtc2VhcmNoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdGQSx1QkFBdUI7QUFDdkIsNERBQTREO0FBQzVELGlEQUFpRDtBQUNqRCxrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dENoZWNrYm94RGF0YSwgSW5wdXRTZWxlY3REYXRhLCBJbnB1dFRleHREYXRhIH0gZnJvbSAnQG43LWZyb250ZW5kL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgQ29uZmlnTXVydWNhTGF5b3V0IH0gZnJvbSAnLi9sYXlvdXRzJztcblxuZXhwb3J0IGludGVyZmFjZSBDb25maWdNdXJ1Y2FBZHZhbmNlZFNlYXJjaExheW91dCBleHRlbmRzIENvbmZpZ011cnVjYUxheW91dCB7XG4gIC8qKiByZXN1bHRzIHBhZ2UgdXJsICovXG4gIHJlc3VsdHNVcmw6IHN0cmluZztcbiAgZm9ybUNvbmZpZzoge1xuICAgIC8qKiBmb3JtIHN1Ym1pdCBidXR0b24gICovXG4gICAgc3VibWl0QnV0dG9uOiB7XG4gICAgICBsYWJlbDogc3RyaW5nO1xuICAgIH07XG4gICAgLyoqIGZvcm0gcmVzZXQgYnV0dG9uICAqL1xuICAgIHJlc2V0QnV0dG9uOiB7XG4gICAgICBsYWJlbDogc3RyaW5nO1xuICAgIH07XG4gICAgLyoqIGZvcm0gZ3JvdXBzIChmb3JtIGFjY29yZGlvbiBzZWN0aW9uKSAqL1xuICAgIGdyb3Vwczoge1xuICAgICAgLyoqIGlkICh1bmlxdWUpICovXG4gICAgICBpZDogc3RyaW5nO1xuICAgICAgLyoqIGdyb3VwIHNlY3Rpb25zIChpZCkgW3NlY3Rpb24xLCBzZWN0aW9uMiwgLi4uXSAqL1xuICAgICAgc2VjdGlvbnM6IHN0cmluZ1tdO1xuICAgICAgLyoqIGFkaXRpb25hbCBjc3MgY2xhc3NlcyAqL1xuICAgICAgY2xhc3Nlcz86IHN0cmluZztcbiAgICAgIC8qKiBhZGl0aW9uYWwgb3B0aW9ucyAqL1xuICAgICAgb3B0aW9ucz86IHtcbiAgICAgICAgLyoqIGdyb3VwIGxhYmVsICovXG4gICAgICAgIGxhYmVsOiBzdHJpbmc7XG4gICAgICAgIC8qKiBncm91cCBpcyAodmlzdWFsbHkpIG9wZW4/ICovXG4gICAgICAgIGlzT3Blbj86IGJvb2xlYW47XG4gICAgICAgIC8qKiBzaG93IGdyb3VwIGhlYWRlcj8gKi9cbiAgICAgICAgc2hvd0hlYWRlcj86IGJvb2xlYW47XG4gICAgICB9O1xuICAgIH1bXTtcbiAgICBzZWN0aW9uczogQ29uZmlnTXVydWNhQWR2YW5jZWRTZWFyY2hTZWN0aW9uW107XG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlnTXVydWNhQWR2YW5jZWRTZWFyY2hTZWN0aW9uIHtcbiAgLyoqIGlkICh1bmlxdWUpICovXG4gIGlkOiBzdHJpbmc7XG4gIC8qKiBzZWN0aW9uIHRpdGxlICovXG4gIHRpdGxlPzogc3RyaW5nO1xuICAvKiogc2VjdGlvbiBkZXNjcmlwdGlvbiB0ZXh0ICovXG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICAvKiogaXMgYWR2YW5jZWQ/IGZvciBjc3MgcHVycG9zZXMgKi9cbiAgYWR2YW5jZWRTZWN0aW9uPzogYm9vbGVhbjtcbiAgLyoqIHNlY3Rpb24gaW5wdXRzICovXG4gIGlucHV0czogKFxuICAgIENvbmZpZ011cnVjYUFkdmFuY2VkU2VhcmNoSW5wdXRUZXh0PHVua25vd24+XG4gICAgfCBDb25maWdNdXJ1Y2FBZHZhbmNlZFNlYXJjaElucHV0Q2hlY2tib3g8dW5rbm93bj5cbiAgICB8IENvbmZpZ011cnVjYUFkdmFuY2VkU2VhcmNoSW5wdXRTZWxlY3Q8dW5rbm93bj5cbiAgICAvLyBGSVhNRTogY3VzdG9tIGlucHV0c1xuICAgIC8vIHwgQ29uZmlnTXVydWNhQWR2YW5jZWRTZWFyY2hJbnB1dEN1c3RvbTx1bmtub3duPlxuICApW107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlnTXVydWNhQWR2YW5jZWRTZWFyY2hJbnB1dDxUPiB7XG4gIGlkOiBzdHJpbmc7XG4gIC8qKiBpbnB1dCBzdGF0ZSAqL1xuICBzdGF0ZT86IHtcbiAgICB2YWx1ZTogVDtcbiAgICBkaXNhYmxlZD86IGJvb2xlYW47XG4gICAgaGlkZGVuPzogYm9vbGVhbjtcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb25maWdNdXJ1Y2FBZHZhbmNlZFNlYXJjaElucHV0VGV4dDxUPlxuICBleHRlbmRzIENvbmZpZ011cnVjYUFkdmFuY2VkU2VhcmNoSW5wdXQ8VD4ge1xuICB0eXBlOiAndGV4dCc7XG4gIGRhdGE6IElucHV0VGV4dERhdGE7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWR2YW5jZWRJbnB1dENoZWNrYm94RGF0YSBleHRlbmRzIElucHV0Q2hlY2tib3hEYXRhIHtcbiAgaWQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb25maWdNdXJ1Y2FBZHZhbmNlZFNlYXJjaElucHV0Q2hlY2tib3g8VD5cbiAgZXh0ZW5kcyBDb25maWdNdXJ1Y2FBZHZhbmNlZFNlYXJjaElucHV0PFQ+IHtcbiAgdHlwZTogJ2NoZWNrYm94JztcbiAgZGF0YTogQWR2YW5jZWRJbnB1dENoZWNrYm94RGF0YTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb25maWdNdXJ1Y2FBZHZhbmNlZFNlYXJjaElucHV0U2VsZWN0PFQ+XG4gIGV4dGVuZHMgQ29uZmlnTXVydWNhQWR2YW5jZWRTZWFyY2hJbnB1dDxUPiB7XG4gIHR5cGU6ICdzZWxlY3QnO1xuICBkYXRhOiBJbnB1dFNlbGVjdERhdGE7XG59XG5cbi8vIEZJWE1FOiBjdXN0b20gaW5wdXRzXG4vLyBleHBvcnQgaW50ZXJmYWNlIENvbmZpZ011cnVjYUFkdmFuY2VkU2VhcmNoSW5wdXRDdXN0b208VD5cbi8vICAgZXh0ZW5kcyBDb25maWdNdXJ1Y2FBZHZhbmNlZFNlYXJjaElucHV0PFQ+IHtcbi8vICAgdHlwZTogc3RyaW5nO1xuLy8gICBkYXRhOiBvYmplY3Q7XG4vLyB9XG4iXX0=