import { __extends } from "tslib";
import { LayoutDataSource } from '@n7-frontend/core';
var DvCardExampleLayoutDS = /** @class */ (function (_super) {
    __extends(DvCardExampleLayoutDS, _super);
    function DvCardExampleLayoutDS() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DvCardExampleLayoutDS.prototype.onInit = function (payload) {
        var _this = this;
        this.cardLoader = payload.cardLoader;
        this.cards = this.cardLoader.getCards();
        setTimeout(function () {
            _this.one('item-1').update('<b>Hola</b> <i>mundo</i>!!!');
            _this.one('item-2').update({
                icon: 'n7-icon-earth',
                text: '197 <em>Dipendenti</em>',
                subtitle: {
                    text: 'Going down...',
                    icon: 'n7-icon-caret-down',
                    value: '-49%',
                    payload: 'view percent tooltip'
                },
                payload: 'view earth tooltip',
                classes: 'is-negative'
            });
            _this.one('item-3').update({
                series: [{
                        id: 'serie-1',
                        name: 'Serie 1',
                        data: [24, 35, 23, 33]
                    }],
                categories: ['Fetta A', 'Fetta B', 'Fetta C', 'Fetta D'],
            });
            _this.one('item-4').update({
                series: [{
                        id: 'serie-desktops',
                        name: 'Desktops',
                        data: [10, 41, 35, 51, 49, 62, 69, 91, 148].map(function (value) { return ({
                            value: value,
                            metadata: {
                                info: "\u00E8 questo il valore: " + value
                            }
                        }); }).reverse()
                    }],
                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],
            });
            _this.one('item-5').update({
                series: [{
                        id: 'serie-2021',
                        name: '2021',
                        data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380].reverse()
                    }, {
                        id: 'serie-2020',
                        name: '2020',
                        data: [300, 530, 418, 370, 240, 680, 390, 100, 200, 1280].reverse()
                    }],
                categories: ['South Korea', 'Canada', 'United Kingdom', 'Netherlands', 'Italy', 'France', 'Japan', 'United States', 'China', 'Germany'],
            });
        }, 5000);
    };
    DvCardExampleLayoutDS.prototype.onDestroy = function () {
        console.warn('DvCardExampleLayout destroyed!');
    };
    return DvCardExampleLayoutDS;
}(LayoutDataSource));
export { DvCardExampleLayoutDS };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC1leGFtcGxlLWxheW91dC5kcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuNy1mcm9udGVuZC9ib2lsZXJwbGF0ZS8iLCJzb3VyY2VzIjpbImxpYi9kYXRhLXZpei9sYXlvdXQvY2FyZC1leGFtcGxlLWxheW91dC9jYXJkLWV4YW1wbGUtbGF5b3V0LmRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUlyRDtJQUEyQyx5Q0FBZ0I7SUFBM0Q7O0lBOERBLENBQUM7SUF6REMsc0NBQU0sR0FBTixVQUFPLE9BQU87UUFBZCxpQkFvREM7UUFuREMsSUFBSSxDQUFDLFVBQVUsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUV4QyxVQUFVLENBQUM7WUFDVCxLQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO1lBQ3pELEtBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxDQUFDO2dCQUN4QixJQUFJLEVBQUUsZUFBZTtnQkFDckIsSUFBSSxFQUFFLHlCQUF5QjtnQkFDL0IsUUFBUSxFQUFFO29CQUNSLElBQUksRUFBRSxlQUFlO29CQUNyQixJQUFJLEVBQUUsb0JBQW9CO29CQUMxQixLQUFLLEVBQUUsTUFBTTtvQkFDYixPQUFPLEVBQUUsc0JBQXNCO2lCQUNoQztnQkFDRCxPQUFPLEVBQUUsb0JBQW9CO2dCQUM3QixPQUFPLEVBQUUsYUFBYTthQUN2QixDQUFDLENBQUM7WUFDSCxLQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQztnQkFDeEIsTUFBTSxFQUFFLENBQUM7d0JBQ1AsRUFBRSxFQUFFLFNBQVM7d0JBQ2IsSUFBSSxFQUFFLFNBQVM7d0JBQ2YsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO3FCQUN2QixDQUFDO2dCQUNGLFVBQVUsRUFBRSxDQUFDLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQzthQUN6RCxDQUFDLENBQUM7WUFDSCxLQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQztnQkFDeEIsTUFBTSxFQUFFLENBQUM7d0JBQ1AsRUFBRSxFQUFFLGdCQUFnQjt3QkFDcEIsSUFBSSxFQUFFLFVBQVU7d0JBQ2hCLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQUMsS0FBSyxJQUFLLE9BQUEsQ0FBQzs0QkFDMUQsS0FBSyxPQUFBOzRCQUNMLFFBQVEsRUFBRTtnQ0FDUixJQUFJLEVBQUUsOEJBQXVCLEtBQU87NkJBQ3JDO3lCQUNGLENBQUMsRUFMeUQsQ0FLekQsQ0FBQyxDQUFDLE9BQU8sRUFBRTtxQkFDZCxDQUFDO2dCQUNGLFVBQVUsRUFBRSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDO2FBQzVFLENBQUMsQ0FBQztZQUNILEtBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxDQUFDO2dCQUN4QixNQUFNLEVBQUUsQ0FBQzt3QkFDUCxFQUFFLEVBQUUsWUFBWTt3QkFDaEIsSUFBSSxFQUFFLE1BQU07d0JBQ1osSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsT0FBTyxFQUFFO3FCQUN0RSxFQUFFO3dCQUNELEVBQUUsRUFBRSxZQUFZO3dCQUNoQixJQUFJLEVBQUUsTUFBTTt3QkFDWixJQUFJLEVBQUUsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQyxPQUFPLEVBQUU7cUJBQ3BFLENBQUM7Z0JBQ0YsVUFBVSxFQUFFLENBQUMsYUFBYSxFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRSxhQUFhLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE9BQU8sRUFBRSxTQUFTLENBQUM7YUFDeEksQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVELHlDQUFTLEdBQVQ7UUFDRSxPQUFPLENBQUMsSUFBSSxDQUFDLGdDQUFnQyxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUNILDRCQUFDO0FBQUQsQ0FBQyxBQTlERCxDQUEyQyxnQkFBZ0IsR0E4RDFEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTGF5b3V0RGF0YVNvdXJjZSB9IGZyb20gJ0BuNy1mcm9udGVuZC9jb3JlJztcclxuaW1wb3J0IHsgQ2FyZERhdGEgfSBmcm9tICcuLi8uLi90eXBlcy9jYXJkLnR5cGVzJztcclxuaW1wb3J0IHsgQ2FyZExvYWRlciB9IGZyb20gJy4uLy4uL21vZGVscy9jYXJkLWxvYWRlcic7XHJcblxyXG5leHBvcnQgY2xhc3MgRHZDYXJkRXhhbXBsZUxheW91dERTIGV4dGVuZHMgTGF5b3V0RGF0YVNvdXJjZSB7XHJcbiAgcHVibGljIGNhcmRMb2FkZXI6IENhcmRMb2FkZXI7XHJcblxyXG4gIHB1YmxpYyBjYXJkczogQ2FyZERhdGFbXTtcclxuXHJcbiAgb25Jbml0KHBheWxvYWQpIHtcclxuICAgIHRoaXMuY2FyZExvYWRlciA9IHBheWxvYWQuY2FyZExvYWRlcjtcclxuICAgIHRoaXMuY2FyZHMgPSB0aGlzLmNhcmRMb2FkZXIuZ2V0Q2FyZHMoKTtcclxuXHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgdGhpcy5vbmUoJ2l0ZW0tMScpLnVwZGF0ZSgnPGI+SG9sYTwvYj4gPGk+bXVuZG88L2k+ISEhJyk7XHJcbiAgICAgIHRoaXMub25lKCdpdGVtLTInKS51cGRhdGUoe1xyXG4gICAgICAgIGljb246ICduNy1pY29uLWVhcnRoJyxcclxuICAgICAgICB0ZXh0OiAnMTk3IDxlbT5EaXBlbmRlbnRpPC9lbT4nLFxyXG4gICAgICAgIHN1YnRpdGxlOiB7XHJcbiAgICAgICAgICB0ZXh0OiAnR29pbmcgZG93bi4uLicsXHJcbiAgICAgICAgICBpY29uOiAnbjctaWNvbi1jYXJldC1kb3duJyxcclxuICAgICAgICAgIHZhbHVlOiAnLTQ5JScsXHJcbiAgICAgICAgICBwYXlsb2FkOiAndmlldyBwZXJjZW50IHRvb2x0aXAnXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwYXlsb2FkOiAndmlldyBlYXJ0aCB0b29sdGlwJyxcclxuICAgICAgICBjbGFzc2VzOiAnaXMtbmVnYXRpdmUnXHJcbiAgICAgIH0pO1xyXG4gICAgICB0aGlzLm9uZSgnaXRlbS0zJykudXBkYXRlKHtcclxuICAgICAgICBzZXJpZXM6IFt7XHJcbiAgICAgICAgICBpZDogJ3NlcmllLTEnLFxyXG4gICAgICAgICAgbmFtZTogJ1NlcmllIDEnLFxyXG4gICAgICAgICAgZGF0YTogWzI0LCAzNSwgMjMsIDMzXVxyXG4gICAgICAgIH1dLFxyXG4gICAgICAgIGNhdGVnb3JpZXM6IFsnRmV0dGEgQScsICdGZXR0YSBCJywgJ0ZldHRhIEMnLCAnRmV0dGEgRCddLFxyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy5vbmUoJ2l0ZW0tNCcpLnVwZGF0ZSh7XHJcbiAgICAgICAgc2VyaWVzOiBbe1xyXG4gICAgICAgICAgaWQ6ICdzZXJpZS1kZXNrdG9wcycsXHJcbiAgICAgICAgICBuYW1lOiAnRGVza3RvcHMnLFxyXG4gICAgICAgICAgZGF0YTogWzEwLCA0MSwgMzUsIDUxLCA0OSwgNjIsIDY5LCA5MSwgMTQ4XS5tYXAoKHZhbHVlKSA9PiAoe1xyXG4gICAgICAgICAgICB2YWx1ZSxcclxuICAgICAgICAgICAgbWV0YWRhdGE6IHtcclxuICAgICAgICAgICAgICBpbmZvOiBgw6ggcXVlc3RvIGlsIHZhbG9yZTogJHt2YWx1ZX1gXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pKS5yZXZlcnNlKClcclxuICAgICAgICB9XSxcclxuICAgICAgICBjYXRlZ29yaWVzOiBbJ0phbicsICdGZWInLCAnTWFyJywgJ0FwcicsICdNYXknLCAnSnVuJywgJ0p1bCcsICdBdWcnLCAnU2VwJ10sXHJcbiAgICAgIH0pO1xyXG4gICAgICB0aGlzLm9uZSgnaXRlbS01JykudXBkYXRlKHtcclxuICAgICAgICBzZXJpZXM6IFt7XHJcbiAgICAgICAgICBpZDogJ3NlcmllLTIwMjEnLFxyXG4gICAgICAgICAgbmFtZTogJzIwMjEnLFxyXG4gICAgICAgICAgZGF0YTogWzQwMCwgNDMwLCA0NDgsIDQ3MCwgNTQwLCA1ODAsIDY5MCwgMTEwMCwgMTIwMCwgMTM4MF0ucmV2ZXJzZSgpXHJcbiAgICAgICAgfSwge1xyXG4gICAgICAgICAgaWQ6ICdzZXJpZS0yMDIwJyxcclxuICAgICAgICAgIG5hbWU6ICcyMDIwJyxcclxuICAgICAgICAgIGRhdGE6IFszMDAsIDUzMCwgNDE4LCAzNzAsIDI0MCwgNjgwLCAzOTAsIDEwMCwgMjAwLCAxMjgwXS5yZXZlcnNlKClcclxuICAgICAgICB9XSxcclxuICAgICAgICBjYXRlZ29yaWVzOiBbJ1NvdXRoIEtvcmVhJywgJ0NhbmFkYScsICdVbml0ZWQgS2luZ2RvbScsICdOZXRoZXJsYW5kcycsICdJdGFseScsICdGcmFuY2UnLCAnSmFwYW4nLCAnVW5pdGVkIFN0YXRlcycsICdDaGluYScsICdHZXJtYW55J10sXHJcbiAgICAgIH0pO1xyXG4gICAgfSwgNTAwMCk7XHJcbiAgfVxyXG5cclxuICBvbkRlc3Ryb3koKSB7XHJcbiAgICBjb25zb2xlLndhcm4oJ0R2Q2FyZEV4YW1wbGVMYXlvdXQgZGVzdHJveWVkIScpO1xyXG4gIH1cclxufVxyXG4iXX0=