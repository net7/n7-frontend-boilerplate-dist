import { __extends } from "tslib";
import { LayoutDataSource } from '@n7-frontend/core';
var DvCardExampleLayoutDS = /** @class */ (function (_super) {
    __extends(DvCardExampleLayoutDS, _super);
    function DvCardExampleLayoutDS() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DvCardExampleLayoutDS.prototype.onInit = function (payload) {
        var _this = this;
        this.cardLoader = payload.cardLoader;
        this.cards = this.cardLoader.getCards();
        setTimeout(function () {
            _this.one('item-1').update('<b>Hola</b> <i>mundo</i>!!!');
            _this.one('item-2').update({
                icon: 'n7-icon-earth',
                text: '197 <em>Dipendenti</em>',
                subtitle: {
                    text: 'Going down...',
                    icon: 'n7-icon-caret-down',
                    value: '-49%',
                    payload: 'view percent tooltip'
                },
                payload: 'view earth tooltip',
                classes: 'is-negative'
            });
            _this.one('item-3').update({
                series: [{
                        id: 'serie-1',
                        name: 'Serie 1',
                        data: [24, 35, 23, 33]
                    }],
                categories: ['Fetta A', 'Fetta B', 'Fetta C', 'Fetta D'],
            });
            _this.one('item-4').update({
                series: [{
                        id: 'serie-desktops',
                        name: 'Desktops',
                        data: [10, 41, 35, 51, 49, 62, 69, 91, 148].map(function (value) { return ({
                            value: value,
                            metadata: {
                                info: "\u00E8 questo il valore: " + value
                            }
                        }); }).reverse()
                    }],
                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],
            });
            _this.one('item-5').update({
                series: [{
                        id: 'serie-2021',
                        name: '2021',
                        data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380].reverse()
                    }, {
                        id: 'serie-2020',
                        name: '2020',
                        data: [300, 530, 418, 370, 240, 680, 390, 100, 200, 1280].reverse()
                    }],
                categories: ['South Korea', 'Canada', 'United Kingdom', 'Netherlands', 'Italy', 'France', 'Japan', 'United States', 'China', 'Germany'],
            });
        }, 5000);
    };
    DvCardExampleLayoutDS.prototype.onDestroy = function () {
        console.warn('DvCardExampleLayout destroyed!');
    };
    return DvCardExampleLayoutDS;
}(LayoutDataSource));
export { DvCardExampleLayoutDS };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC1leGFtcGxlLWxheW91dC5kcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuNy1mcm9udGVuZC9ib2lsZXJwbGF0ZS8iLCJzb3VyY2VzIjpbImxpYi9kYXRhLXZpei9sYXlvdXQvY2FyZC1leGFtcGxlLWxheW91dC9jYXJkLWV4YW1wbGUtbGF5b3V0LmRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUlyRDtJQUEyQyx5Q0FBZ0I7SUFBM0Q7O0lBOERBLENBQUM7SUF6REMsc0NBQU0sR0FBTixVQUFPLE9BQU87UUFBZCxpQkFvREM7UUFuREMsSUFBSSxDQUFDLFVBQVUsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUV4QyxVQUFVLENBQUM7WUFDVCxLQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO1lBQ3pELEtBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxDQUFDO2dCQUN4QixJQUFJLEVBQUUsZUFBZTtnQkFDckIsSUFBSSxFQUFFLHlCQUF5QjtnQkFDL0IsUUFBUSxFQUFFO29CQUNSLElBQUksRUFBRSxlQUFlO29CQUNyQixJQUFJLEVBQUUsb0JBQW9CO29CQUMxQixLQUFLLEVBQUUsTUFBTTtvQkFDYixPQUFPLEVBQUUsc0JBQXNCO2lCQUNoQztnQkFDRCxPQUFPLEVBQUUsb0JBQW9CO2dCQUM3QixPQUFPLEVBQUUsYUFBYTthQUN2QixDQUFDLENBQUM7WUFDSCxLQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQztnQkFDeEIsTUFBTSxFQUFFLENBQUM7d0JBQ1AsRUFBRSxFQUFFLFNBQVM7d0JBQ2IsSUFBSSxFQUFFLFNBQVM7d0JBQ2YsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO3FCQUN2QixDQUFDO2dCQUNGLFVBQVUsRUFBRSxDQUFDLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQzthQUN6RCxDQUFDLENBQUM7WUFDSCxLQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQztnQkFDeEIsTUFBTSxFQUFFLENBQUM7d0JBQ1AsRUFBRSxFQUFFLGdCQUFnQjt3QkFDcEIsSUFBSSxFQUFFLFVBQVU7d0JBQ2hCLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQUMsS0FBSyxJQUFLLE9BQUEsQ0FBQzs0QkFDMUQsS0FBSyxPQUFBOzRCQUNMLFFBQVEsRUFBRTtnQ0FDUixJQUFJLEVBQUUsOEJBQXVCLEtBQU87NkJBQ3JDO3lCQUNGLENBQUMsRUFMeUQsQ0FLekQsQ0FBQyxDQUFDLE9BQU8sRUFBRTtxQkFDZCxDQUFDO2dCQUNGLFVBQVUsRUFBRSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDO2FBQzVFLENBQUMsQ0FBQztZQUNILEtBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxDQUFDO2dCQUN4QixNQUFNLEVBQUUsQ0FBQzt3QkFDUCxFQUFFLEVBQUUsWUFBWTt3QkFDaEIsSUFBSSxFQUFFLE1BQU07d0JBQ1osSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsT0FBTyxFQUFFO3FCQUN0RSxFQUFFO3dCQUNELEVBQUUsRUFBRSxZQUFZO3dCQUNoQixJQUFJLEVBQUUsTUFBTTt3QkFDWixJQUFJLEVBQUUsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQyxPQUFPLEVBQUU7cUJBQ3BFLENBQUM7Z0JBQ0YsVUFBVSxFQUFFLENBQUMsYUFBYSxFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRSxhQUFhLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE9BQU8sRUFBRSxTQUFTLENBQUM7YUFDeEksQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVELHlDQUFTLEdBQVQ7UUFDRSxPQUFPLENBQUMsSUFBSSxDQUFDLGdDQUFnQyxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUNILDRCQUFDO0FBQUQsQ0FBQyxBQTlERCxDQUEyQyxnQkFBZ0IsR0E4RDFEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTGF5b3V0RGF0YVNvdXJjZSB9IGZyb20gJ0BuNy1mcm9udGVuZC9jb3JlJztcbmltcG9ydCB7IENhcmREYXRhIH0gZnJvbSAnLi4vLi4vdHlwZXMvY2FyZC50eXBlcyc7XG5pbXBvcnQgeyBDYXJkTG9hZGVyIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2NhcmQtbG9hZGVyJztcblxuZXhwb3J0IGNsYXNzIER2Q2FyZEV4YW1wbGVMYXlvdXREUyBleHRlbmRzIExheW91dERhdGFTb3VyY2Uge1xuICBwdWJsaWMgY2FyZExvYWRlcjogQ2FyZExvYWRlcjtcblxuICBwdWJsaWMgY2FyZHM6IENhcmREYXRhW107XG5cbiAgb25Jbml0KHBheWxvYWQpIHtcbiAgICB0aGlzLmNhcmRMb2FkZXIgPSBwYXlsb2FkLmNhcmRMb2FkZXI7XG4gICAgdGhpcy5jYXJkcyA9IHRoaXMuY2FyZExvYWRlci5nZXRDYXJkcygpO1xuXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLm9uZSgnaXRlbS0xJykudXBkYXRlKCc8Yj5Ib2xhPC9iPiA8aT5tdW5kbzwvaT4hISEnKTtcbiAgICAgIHRoaXMub25lKCdpdGVtLTInKS51cGRhdGUoe1xuICAgICAgICBpY29uOiAnbjctaWNvbi1lYXJ0aCcsXG4gICAgICAgIHRleHQ6ICcxOTcgPGVtPkRpcGVuZGVudGk8L2VtPicsXG4gICAgICAgIHN1YnRpdGxlOiB7XG4gICAgICAgICAgdGV4dDogJ0dvaW5nIGRvd24uLi4nLFxuICAgICAgICAgIGljb246ICduNy1pY29uLWNhcmV0LWRvd24nLFxuICAgICAgICAgIHZhbHVlOiAnLTQ5JScsXG4gICAgICAgICAgcGF5bG9hZDogJ3ZpZXcgcGVyY2VudCB0b29sdGlwJ1xuICAgICAgICB9LFxuICAgICAgICBwYXlsb2FkOiAndmlldyBlYXJ0aCB0b29sdGlwJyxcbiAgICAgICAgY2xhc3NlczogJ2lzLW5lZ2F0aXZlJ1xuICAgICAgfSk7XG4gICAgICB0aGlzLm9uZSgnaXRlbS0zJykudXBkYXRlKHtcbiAgICAgICAgc2VyaWVzOiBbe1xuICAgICAgICAgIGlkOiAnc2VyaWUtMScsXG4gICAgICAgICAgbmFtZTogJ1NlcmllIDEnLFxuICAgICAgICAgIGRhdGE6IFsyNCwgMzUsIDIzLCAzM11cbiAgICAgICAgfV0sXG4gICAgICAgIGNhdGVnb3JpZXM6IFsnRmV0dGEgQScsICdGZXR0YSBCJywgJ0ZldHRhIEMnLCAnRmV0dGEgRCddLFxuICAgICAgfSk7XG4gICAgICB0aGlzLm9uZSgnaXRlbS00JykudXBkYXRlKHtcbiAgICAgICAgc2VyaWVzOiBbe1xuICAgICAgICAgIGlkOiAnc2VyaWUtZGVza3RvcHMnLFxuICAgICAgICAgIG5hbWU6ICdEZXNrdG9wcycsXG4gICAgICAgICAgZGF0YTogWzEwLCA0MSwgMzUsIDUxLCA0OSwgNjIsIDY5LCA5MSwgMTQ4XS5tYXAoKHZhbHVlKSA9PiAoe1xuICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgICAgICBpbmZvOiBgw6ggcXVlc3RvIGlsIHZhbG9yZTogJHt2YWx1ZX1gXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSkpLnJldmVyc2UoKVxuICAgICAgICB9XSxcbiAgICAgICAgY2F0ZWdvcmllczogWydKYW4nLCAnRmViJywgJ01hcicsICdBcHInLCAnTWF5JywgJ0p1bicsICdKdWwnLCAnQXVnJywgJ1NlcCddLFxuICAgICAgfSk7XG4gICAgICB0aGlzLm9uZSgnaXRlbS01JykudXBkYXRlKHtcbiAgICAgICAgc2VyaWVzOiBbe1xuICAgICAgICAgIGlkOiAnc2VyaWUtMjAyMScsXG4gICAgICAgICAgbmFtZTogJzIwMjEnLFxuICAgICAgICAgIGRhdGE6IFs0MDAsIDQzMCwgNDQ4LCA0NzAsIDU0MCwgNTgwLCA2OTAsIDExMDAsIDEyMDAsIDEzODBdLnJldmVyc2UoKVxuICAgICAgICB9LCB7XG4gICAgICAgICAgaWQ6ICdzZXJpZS0yMDIwJyxcbiAgICAgICAgICBuYW1lOiAnMjAyMCcsXG4gICAgICAgICAgZGF0YTogWzMwMCwgNTMwLCA0MTgsIDM3MCwgMjQwLCA2ODAsIDM5MCwgMTAwLCAyMDAsIDEyODBdLnJldmVyc2UoKVxuICAgICAgICB9XSxcbiAgICAgICAgY2F0ZWdvcmllczogWydTb3V0aCBLb3JlYScsICdDYW5hZGEnLCAnVW5pdGVkIEtpbmdkb20nLCAnTmV0aGVybGFuZHMnLCAnSXRhbHknLCAnRnJhbmNlJywgJ0phcGFuJywgJ1VuaXRlZCBTdGF0ZXMnLCAnQ2hpbmEnLCAnR2VybWFueSddLFxuICAgICAgfSk7XG4gICAgfSwgNTAwMCk7XG4gIH1cblxuICBvbkRlc3Ryb3koKSB7XG4gICAgY29uc29sZS53YXJuKCdEdkNhcmRFeGFtcGxlTGF5b3V0IGRlc3Ryb3llZCEnKTtcbiAgfVxufVxuIl19