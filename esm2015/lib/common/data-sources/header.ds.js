import { DataSource } from '@n7-frontend/core';
const MOBILE_CLASS = 'is-mobile-nav-displayed';
const ACTIVE_CLASS = 'is-active';
export class HeaderDS extends DataSource {
    transform(data) {
        if (!data) {
            return null;
        }
        return Object.assign(Object.assign({}, data), { menuToggle: {
                open: {
                    payload: 'mobile-open'
                },
                close: {
                    payload: 'mobile-close'
                }
            } });
    }
    onCurrentNavChange(payload) {
        this.output.nav.items.forEach((item) => {
            item.classes = item._meta.id === payload ? ACTIVE_CLASS : '';
        });
    }
    onRouterChange() {
        if (!this.output) {
            return;
        }
        let { classes } = this.output;
        classes = classes || '';
        classes = classes.split(' ');
        if (classes.includes(MOBILE_CLASS)) {
            classes.splice(classes.indexOf(MOBILE_CLASS), 1);
            this.output.classes = classes.join(' ');
        }
    }
    onClick(payload) {
        // mobile control
        if (['mobile-open', 'mobile-close'].includes(payload)) {
            let { classes } = this.output;
            classes = classes || '';
            classes = classes.split(' ');
            if (classes.includes(MOBILE_CLASS)) {
                classes.splice(classes.indexOf(MOBILE_CLASS), 1);
            }
            else {
                classes.push(MOBILE_CLASS);
            }
            this.output.classes = classes.join(' ');
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmRzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG43LWZyb250ZW5kL2JvaWxlcnBsYXRlLyIsInNvdXJjZXMiOlsibGliL2NvbW1vbi9kYXRhLXNvdXJjZXMvaGVhZGVyLmRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUcvQyxNQUFNLFlBQVksR0FBRyx5QkFBeUIsQ0FBQztBQUUvQyxNQUFNLFlBQVksR0FBRyxXQUFXLENBQUM7QUFFakMsTUFBTSxPQUFPLFFBQVMsU0FBUSxVQUFVO0lBQzVCLFNBQVMsQ0FBQyxJQUFJO1FBQ3RCLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDVCxPQUFPLElBQUksQ0FBQztTQUNiO1FBRUQsdUNBQ0ssSUFBSSxLQUNQLFVBQVUsRUFBRTtnQkFDVixJQUFJLEVBQUU7b0JBQ0osT0FBTyxFQUFFLGFBQWE7aUJBQ3ZCO2dCQUNELEtBQUssRUFBRTtvQkFDTCxPQUFPLEVBQUUsY0FBYztpQkFDeEI7YUFDRixJQUNEO0lBQ0osQ0FBQztJQUVNLGtCQUFrQixDQUFDLE9BQU87UUFDL0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1lBQ3JDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssT0FBTyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUMvRCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTSxjQUFjO1FBQ25CLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2hCLE9BQU87U0FDUjtRQUNELElBQUksRUFBRSxPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzlCLE9BQU8sR0FBRyxPQUFPLElBQUksRUFBRSxDQUFDO1FBQ3hCLE9BQU8sR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTdCLElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsRUFBRTtZQUNsQyxPQUFPLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDakQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN6QztJQUNILENBQUM7SUFFTSxPQUFPLENBQUMsT0FBTztRQUNwQixpQkFBaUI7UUFDakIsSUFBSSxDQUFDLGFBQWEsRUFBRSxjQUFjLENBQUMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDckQsSUFBSSxFQUFFLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDOUIsT0FBTyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7WUFDeEIsT0FBTyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7WUFFN0IsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxFQUFFO2dCQUNsQyxPQUFPLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDbEQ7aUJBQU07Z0JBQ0wsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQzthQUM1QjtZQUNELElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDekM7SUFDSCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRhU291cmNlIH0gZnJvbSAnQG43LWZyb250ZW5kL2NvcmUnO1xyXG5pbXBvcnQgeyBIZWFkZXJEYXRhIH0gZnJvbSAnQG43LWZyb250ZW5kL2NvbXBvbmVudHMnO1xyXG5cclxuY29uc3QgTU9CSUxFX0NMQVNTID0gJ2lzLW1vYmlsZS1uYXYtZGlzcGxheWVkJztcclxuXHJcbmNvbnN0IEFDVElWRV9DTEFTUyA9ICdpcy1hY3RpdmUnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEhlYWRlckRTIGV4dGVuZHMgRGF0YVNvdXJjZSB7XHJcbiAgcHJvdGVjdGVkIHRyYW5zZm9ybShkYXRhKTogSGVhZGVyRGF0YSB7XHJcbiAgICBpZiAoIWRhdGEpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgLi4uZGF0YSxcclxuICAgICAgbWVudVRvZ2dsZToge1xyXG4gICAgICAgIG9wZW46IHtcclxuICAgICAgICAgIHBheWxvYWQ6ICdtb2JpbGUtb3BlbidcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNsb3NlOiB7XHJcbiAgICAgICAgICBwYXlsb2FkOiAnbW9iaWxlLWNsb3NlJ1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvbkN1cnJlbnROYXZDaGFuZ2UocGF5bG9hZCkge1xyXG4gICAgdGhpcy5vdXRwdXQubmF2Lml0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgaXRlbS5jbGFzc2VzID0gaXRlbS5fbWV0YS5pZCA9PT0gcGF5bG9hZCA/IEFDVElWRV9DTEFTUyA6ICcnO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb25Sb3V0ZXJDaGFuZ2UoKSB7XHJcbiAgICBpZiAoIXRoaXMub3V0cHV0KSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGxldCB7IGNsYXNzZXMgfSA9IHRoaXMub3V0cHV0O1xyXG4gICAgY2xhc3NlcyA9IGNsYXNzZXMgfHwgJyc7XHJcbiAgICBjbGFzc2VzID0gY2xhc3Nlcy5zcGxpdCgnICcpO1xyXG5cclxuICAgIGlmIChjbGFzc2VzLmluY2x1ZGVzKE1PQklMRV9DTEFTUykpIHtcclxuICAgICAgY2xhc3Nlcy5zcGxpY2UoY2xhc3Nlcy5pbmRleE9mKE1PQklMRV9DTEFTUyksIDEpO1xyXG4gICAgICB0aGlzLm91dHB1dC5jbGFzc2VzID0gY2xhc3Nlcy5qb2luKCcgJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb25DbGljayhwYXlsb2FkKSB7XHJcbiAgICAvLyBtb2JpbGUgY29udHJvbFxyXG4gICAgaWYgKFsnbW9iaWxlLW9wZW4nLCAnbW9iaWxlLWNsb3NlJ10uaW5jbHVkZXMocGF5bG9hZCkpIHtcclxuICAgICAgbGV0IHsgY2xhc3NlcyB9ID0gdGhpcy5vdXRwdXQ7XHJcbiAgICAgIGNsYXNzZXMgPSBjbGFzc2VzIHx8ICcnO1xyXG4gICAgICBjbGFzc2VzID0gY2xhc3Nlcy5zcGxpdCgnICcpO1xyXG5cclxuICAgICAgaWYgKGNsYXNzZXMuaW5jbHVkZXMoTU9CSUxFX0NMQVNTKSkge1xyXG4gICAgICAgIGNsYXNzZXMuc3BsaWNlKGNsYXNzZXMuaW5kZXhPZihNT0JJTEVfQ0xBU1MpLCAxKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjbGFzc2VzLnB1c2goTU9CSUxFX0NMQVNTKTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLm91dHB1dC5jbGFzc2VzID0gY2xhc3Nlcy5qb2luKCcgJyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==