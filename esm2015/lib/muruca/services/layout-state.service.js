import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { ReplaySubject } from 'rxjs';
export var LayoutState;
(function (LayoutState) {
    LayoutState["IDLE"] = "IDLE";
    LayoutState["LOADING"] = "LOADING";
    LayoutState["SUCCESS"] = "SUCCESS";
    LayoutState["EMPTY"] = "EMPTY";
    LayoutState["ERROR"] = "ERROR";
})(LayoutState || (LayoutState = {}));
let MrLayoutStateService = class MrLayoutStateService {
    constructor() {
        this.stateContainers = {};
    }
    add(id) {
        const ids = Array.isArray(id) ? id : [id];
        ids.forEach((key) => {
            this.stateContainers[key] = new ReplaySubject();
            // initial state
            this.stateContainers[key].next(LayoutState.IDLE);
        });
    }
    get$(id) {
        if (!this.stateContainers[id]) {
            throw Error(`Layout state id '${id}' does not exists`);
        }
        return this.stateContainers[id];
    }
    set(id, newState) {
        if (!this.stateContainers[id]) {
            throw Error(`Layout state id '${id}' does not exists`);
        }
        this.stateContainers[id].next(newState);
    }
};
MrLayoutStateService = __decorate([
    Injectable()
], MrLayoutStateService);
export { MrLayoutStateService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LXN0YXRlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbjctZnJvbnRlbmQvYm9pbGVycGxhdGUvIiwic291cmNlcyI6WyJsaWIvbXVydWNhL3NlcnZpY2VzL2xheW91dC1zdGF0ZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFFckMsTUFBTSxDQUFOLElBQVksV0FNWDtBQU5ELFdBQVksV0FBVztJQUNyQiw0QkFBYSxDQUFBO0lBQ2Isa0NBQW1CLENBQUE7SUFDbkIsa0NBQW1CLENBQUE7SUFDbkIsOEJBQWUsQ0FBQTtJQUNmLDhCQUFlLENBQUE7QUFDakIsQ0FBQyxFQU5XLFdBQVcsS0FBWCxXQUFXLFFBTXRCO0FBR0QsSUFBYSxvQkFBb0IsR0FBakMsTUFBYSxvQkFBb0I7SUFBakM7UUFDVSxvQkFBZSxHQUVuQixFQUFFLENBQUM7SUF3QlQsQ0FBQztJQXRCQyxHQUFHLENBQUMsRUFBcUI7UUFDdkIsTUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUNsQixJQUFJLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksYUFBYSxFQUFFLENBQUM7WUFDaEQsZ0JBQWdCO1lBQ2hCLElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNuRCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxJQUFJLENBQUMsRUFBVTtRQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQzdCLE1BQU0sS0FBSyxDQUFDLG9CQUFvQixFQUFFLG1CQUFtQixDQUFDLENBQUM7U0FDeEQ7UUFDRCxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELEdBQUcsQ0FBQyxFQUFVLEVBQUUsUUFBcUI7UUFDbkMsSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsRUFBRSxDQUFDLEVBQUU7WUFDN0IsTUFBTSxLQUFLLENBQUMsb0JBQW9CLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztTQUN4RDtRQUNELElBQUksQ0FBQyxlQUFlLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFDLENBQUM7Q0FDRixDQUFBO0FBM0JZLG9CQUFvQjtJQURoQyxVQUFVLEVBQUU7R0FDQSxvQkFBb0IsQ0EyQmhDO1NBM0JZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUmVwbGF5U3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5cclxuZXhwb3J0IGVudW0gTGF5b3V0U3RhdGUge1xyXG4gIElETEUgPSAnSURMRScsXHJcbiAgTE9BRElORyA9ICdMT0FESU5HJyxcclxuICBTVUNDRVNTID0gJ1NVQ0NFU1MnLFxyXG4gIEVNUFRZID0gJ0VNUFRZJyxcclxuICBFUlJPUiA9ICdFUlJPUicsXHJcbn1cclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIE1yTGF5b3V0U3RhdGVTZXJ2aWNlIHtcclxuICBwcml2YXRlIHN0YXRlQ29udGFpbmVyczoge1xyXG4gICAgW2tleTogc3RyaW5nXTogUmVwbGF5U3ViamVjdDxMYXlvdXRTdGF0ZT47XHJcbiAgfSA9IHt9O1xyXG5cclxuICBhZGQoaWQ6IHN0cmluZyB8IHN0cmluZ1tdKSB7XHJcbiAgICBjb25zdCBpZHMgPSBBcnJheS5pc0FycmF5KGlkKSA/IGlkIDogW2lkXTtcclxuICAgIGlkcy5mb3JFYWNoKChrZXkpID0+IHtcclxuICAgICAgdGhpcy5zdGF0ZUNvbnRhaW5lcnNba2V5XSA9IG5ldyBSZXBsYXlTdWJqZWN0KCk7XHJcbiAgICAgIC8vIGluaXRpYWwgc3RhdGVcclxuICAgICAgdGhpcy5zdGF0ZUNvbnRhaW5lcnNba2V5XS5uZXh0KExheW91dFN0YXRlLklETEUpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBnZXQkKGlkOiBzdHJpbmcpIHtcclxuICAgIGlmICghdGhpcy5zdGF0ZUNvbnRhaW5lcnNbaWRdKSB7XHJcbiAgICAgIHRocm93IEVycm9yKGBMYXlvdXQgc3RhdGUgaWQgJyR7aWR9JyBkb2VzIG5vdCBleGlzdHNgKTtcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLnN0YXRlQ29udGFpbmVyc1tpZF07XHJcbiAgfVxyXG5cclxuICBzZXQoaWQ6IHN0cmluZywgbmV3U3RhdGU6IExheW91dFN0YXRlKSB7XHJcbiAgICBpZiAoIXRoaXMuc3RhdGVDb250YWluZXJzW2lkXSkge1xyXG4gICAgICB0aHJvdyBFcnJvcihgTGF5b3V0IHN0YXRlIGlkICcke2lkfScgZG9lcyBub3QgZXhpc3RzYCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLnN0YXRlQ29udGFpbmVyc1tpZF0ubmV4dChuZXdTdGF0ZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==