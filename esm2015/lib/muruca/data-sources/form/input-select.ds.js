import { DataSource, _t } from '@n7-frontend/core';
export class MrInputSelectDS extends DataSource {
    constructor() {
        super(...arguments);
        this.state = {
            value: null,
            disabled: false,
            hidden: false,
        };
        this.getState = () => this.state;
    }
    transform(data) {
        return Object.assign(Object.assign({}, data), { options: this.getOptions(data.options) });
    }
    setState(newState) {
        this.state = Object.assign(Object.assign({}, this.state), newState);
        this.refresh();
    }
    clear() {
        this.setState({ value: null });
    }
    refresh() {
        const { hidden, disabled } = this.state;
        // render value
        this.output.options = this.getOptions(this.output.options);
        // render disabled
        this.output.disabled = disabled;
        // render hidden
        this.output.classes = hidden ? 'is-hidden' : '';
    }
    getOptions(options) {
        const { value } = this.state;
        return options.map((option) => (Object.assign(Object.assign({}, option), { label: _t(option.label), selected: value === option.value })));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtc2VsZWN0LmRzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG43LWZyb250ZW5kL2JvaWxlcnBsYXRlLyIsInNvdXJjZXMiOlsibGliL211cnVjYS9kYXRhLXNvdXJjZXMvZm9ybS9pbnB1dC1zZWxlY3QuZHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQU1uRCxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxVQUFVO0lBQS9DOztRQUdTLFVBQUssR0FBeUM7WUFDbkQsS0FBSyxFQUFFLElBQUk7WUFDWCxRQUFRLEVBQUUsS0FBSztZQUNmLE1BQU0sRUFBRSxLQUFLO1NBQ2QsQ0FBQztRQVNGLGFBQVEsR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBbUM5QixDQUFDO0lBMUNXLFNBQVMsQ0FBQyxJQUFxQjtRQUN2Qyx1Q0FDSyxJQUFJLEtBQ1AsT0FBTyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUN0QztJQUNKLENBQUM7SUFJRCxRQUFRLENBQUMsUUFBOEM7UUFDckQsSUFBSSxDQUFDLEtBQUssbUNBQ0wsSUFBSSxDQUFDLEtBQUssR0FDVixRQUFRLENBQ1osQ0FBQztRQUNGLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNqQixDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRUQsT0FBTztRQUNMLE1BQU0sRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUV4QyxlQUFlO1FBQ2YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTNELGtCQUFrQjtRQUNsQixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFFaEMsZ0JBQWdCO1FBQ2hCLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDbEQsQ0FBQztJQUVPLFVBQVUsQ0FBQyxPQUFPO1FBQ3hCLE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQzdCLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsaUNBQzFCLE1BQU0sS0FDVCxLQUFLLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFDdkIsUUFBUSxFQUFFLEtBQUssS0FBSyxNQUFNLENBQUMsS0FBSyxJQUNoQyxDQUFDLENBQUM7SUFDTixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRhU291cmNlLCBfdCB9IGZyb20gJ0BuNy1mcm9udGVuZC9jb3JlJztcbmltcG9ydCB7IElucHV0U2VsZWN0RGF0YSB9IGZyb20gJ0BuNy1mcm9udGVuZC9jb21wb25lbnRzJztcbmltcG9ydCB7IE1yRm9ybUlucHV0U3RhdGUsIE1ySW5wdXREYXRhU291cmNlIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9mb3JtLmludGVyZmFjZSc7XG5cbnR5cGUgTXJJbnB1dFNlbGVjdFZhbHVlID0gc3RyaW5nIHwgbnVsbDtcblxuZXhwb3J0IGNsYXNzIE1ySW5wdXRTZWxlY3REUyBleHRlbmRzIERhdGFTb3VyY2UgaW1wbGVtZW50cyBNcklucHV0RGF0YVNvdXJjZTxNcklucHV0U2VsZWN0VmFsdWU+IHtcbiAgcHVibGljIGlkOiBzdHJpbmc7XG5cbiAgcHVibGljIHN0YXRlOiBNckZvcm1JbnB1dFN0YXRlPE1ySW5wdXRTZWxlY3RWYWx1ZT4gPSB7XG4gICAgdmFsdWU6IG51bGwsXG4gICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgIGhpZGRlbjogZmFsc2UsXG4gIH07XG5cbiAgcHJvdGVjdGVkIHRyYW5zZm9ybShkYXRhOiBJbnB1dFNlbGVjdERhdGEpOiBJbnB1dFNlbGVjdERhdGEge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5kYXRhLFxuICAgICAgb3B0aW9uczogdGhpcy5nZXRPcHRpb25zKGRhdGEub3B0aW9ucylcbiAgICB9O1xuICB9XG5cbiAgZ2V0U3RhdGUgPSAoKSA9PiB0aGlzLnN0YXRlO1xuXG4gIHNldFN0YXRlKG5ld1N0YXRlOiBNckZvcm1JbnB1dFN0YXRlPE1ySW5wdXRTZWxlY3RWYWx1ZT4pIHtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgLi4udGhpcy5zdGF0ZSxcbiAgICAgIC4uLm5ld1N0YXRlXG4gICAgfTtcbiAgICB0aGlzLnJlZnJlc2goKTtcbiAgfVxuXG4gIGNsZWFyKCkge1xuICAgIHRoaXMuc2V0U3RhdGUoeyB2YWx1ZTogbnVsbCB9KTtcbiAgfVxuXG4gIHJlZnJlc2goKSB7XG4gICAgY29uc3QgeyBoaWRkZW4sIGRpc2FibGVkIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgLy8gcmVuZGVyIHZhbHVlXG4gICAgdGhpcy5vdXRwdXQub3B0aW9ucyA9IHRoaXMuZ2V0T3B0aW9ucyh0aGlzLm91dHB1dC5vcHRpb25zKTtcblxuICAgIC8vIHJlbmRlciBkaXNhYmxlZFxuICAgIHRoaXMub3V0cHV0LmRpc2FibGVkID0gZGlzYWJsZWQ7XG5cbiAgICAvLyByZW5kZXIgaGlkZGVuXG4gICAgdGhpcy5vdXRwdXQuY2xhc3NlcyA9IGhpZGRlbiA/ICdpcy1oaWRkZW4nIDogJyc7XG4gIH1cblxuICBwcml2YXRlIGdldE9wdGlvbnMob3B0aW9ucykge1xuICAgIGNvbnN0IHsgdmFsdWUgfSA9IHRoaXMuc3RhdGU7XG4gICAgcmV0dXJuIG9wdGlvbnMubWFwKChvcHRpb24pID0+ICh7XG4gICAgICAuLi5vcHRpb24sXG4gICAgICBsYWJlbDogX3Qob3B0aW9uLmxhYmVsKSxcbiAgICAgIHNlbGVjdGVkOiB2YWx1ZSA9PT0gb3B0aW9uLnZhbHVlXG4gICAgfSkpO1xuICB9XG59XG4iXX0=