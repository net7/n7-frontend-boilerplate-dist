import { IMAGE_VIEWER_TOOLS_MOCK } from '@n7-frontend/components';
import { DataSource } from '@n7-frontend/core';
export class MrImageViewerToolsDS extends DataSource {
    transform() {
        const data = IMAGE_VIEWER_TOOLS_MOCK;
        data.images = [
            { thumb: 'http://placekitten.com/200/130', payload: { thumbindex: 0 }, caption: 'Test caption <b>#1</b>' },
            { thumb: 'http://placekitten.com/90/180', payload: { thumbindex: 1 }, caption: 'Test caption <b>#2</b>' },
            { thumb: 'http://placekitten.com/90/110', payload: { thumbindex: 2 }, caption: 'Test caption <b>#3</b>' },
        ];
        const initialDescription = data.images[data.initial].caption;
        if (initialDescription !== undefined) {
            data.description = initialDescription;
        }
        return data;
    }
    toggleDescription() {
        this.output.isVisible.description = !this.output.isVisible.description;
    }
    toggleThumbs() {
        this.output.isVisible.thumbnails = !this.output.isVisible.thumbnails;
    }
    handleThumbs(index) {
        this.output.initial = index;
        this.updateDescription();
    }
    handlePageChange(payload) {
        this.handleThumbs(payload.page);
    }
    updateDescription() {
        const index = this.output.initial;
        const { images } = this.output;
        this.output.description = images[index].caption;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2Utdmlld2VyLXRvb2xzLmRzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG43LWZyb250ZW5kL2JvaWxlcnBsYXRlLyIsInNvdXJjZXMiOlsibGliL211cnVjYS9kYXRhLXNvdXJjZXMvaW1hZ2Utdmlld2VyLXRvb2xzLmRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBd0IsdUJBQXVCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN4RixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFL0MsTUFBTSxPQUFPLG9CQUFxQixTQUFRLFVBQVU7SUFDeEMsU0FBUztRQUNqQixNQUFNLElBQUksR0FBRyx1QkFBdUIsQ0FBQztRQUNyQyxJQUFJLENBQUMsTUFBTSxHQUFHO1lBQ1osRUFBRSxLQUFLLEVBQUUsZ0NBQWdDLEVBQUUsT0FBTyxFQUFFLEVBQUUsVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRTtZQUMxRyxFQUFFLEtBQUssRUFBRSwrQkFBK0IsRUFBRSxPQUFPLEVBQUUsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFO1lBQ3pHLEVBQUUsS0FBSyxFQUFFLCtCQUErQixFQUFFLE9BQU8sRUFBRSxFQUFFLFVBQVUsRUFBRSxDQUFDLEVBQUUsRUFBRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUU7U0FDMUcsQ0FBQztRQUNGLE1BQU0sa0JBQWtCLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDO1FBQzdELElBQUksa0JBQWtCLEtBQUssU0FBUyxFQUFFO1lBQ3BDLElBQUksQ0FBQyxXQUFXLEdBQUcsa0JBQWtCLENBQUM7U0FDdkM7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSxpQkFBaUI7UUFDdEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsV0FBVyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDO0lBQ3pFLENBQUM7SUFFTSxZQUFZO1FBQ2pCLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFVBQVUsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQztJQUN2RSxDQUFDO0lBRU0sWUFBWSxDQUFDLEtBQUs7UUFDdkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQzVCLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTSxnQkFBZ0IsQ0FBQyxPQUFPO1FBQzdCLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFTSxpQkFBaUI7UUFDdEIsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUM7UUFDbEMsTUFBTSxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDL0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQztJQUNsRCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbWFnZVZpZXdlclRvb2xzRGF0YSwgSU1BR0VfVklFV0VSX1RPT0xTX01PQ0sgfSBmcm9tICdAbjctZnJvbnRlbmQvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBEYXRhU291cmNlIH0gZnJvbSAnQG43LWZyb250ZW5kL2NvcmUnO1xuXG5leHBvcnQgY2xhc3MgTXJJbWFnZVZpZXdlclRvb2xzRFMgZXh0ZW5kcyBEYXRhU291cmNlIHtcbiAgcHJvdGVjdGVkIHRyYW5zZm9ybSgpOiBJbWFnZVZpZXdlclRvb2xzRGF0YSB7XG4gICAgY29uc3QgZGF0YSA9IElNQUdFX1ZJRVdFUl9UT09MU19NT0NLO1xuICAgIGRhdGEuaW1hZ2VzID0gW1xuICAgICAgeyB0aHVtYjogJ2h0dHA6Ly9wbGFjZWtpdHRlbi5jb20vMjAwLzEzMCcsIHBheWxvYWQ6IHsgdGh1bWJpbmRleDogMCB9LCBjYXB0aW9uOiAnVGVzdCBjYXB0aW9uIDxiPiMxPC9iPicgfSxcbiAgICAgIHsgdGh1bWI6ICdodHRwOi8vcGxhY2VraXR0ZW4uY29tLzkwLzE4MCcsIHBheWxvYWQ6IHsgdGh1bWJpbmRleDogMSB9LCBjYXB0aW9uOiAnVGVzdCBjYXB0aW9uIDxiPiMyPC9iPicgfSxcbiAgICAgIHsgdGh1bWI6ICdodHRwOi8vcGxhY2VraXR0ZW4uY29tLzkwLzExMCcsIHBheWxvYWQ6IHsgdGh1bWJpbmRleDogMiB9LCBjYXB0aW9uOiAnVGVzdCBjYXB0aW9uIDxiPiMzPC9iPicgfSxcbiAgICBdO1xuICAgIGNvbnN0IGluaXRpYWxEZXNjcmlwdGlvbiA9IGRhdGEuaW1hZ2VzW2RhdGEuaW5pdGlhbF0uY2FwdGlvbjtcbiAgICBpZiAoaW5pdGlhbERlc2NyaXB0aW9uICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGRhdGEuZGVzY3JpcHRpb24gPSBpbml0aWFsRGVzY3JpcHRpb247XG4gICAgfVxuXG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cblxuICBwdWJsaWMgdG9nZ2xlRGVzY3JpcHRpb24oKSB7XG4gICAgdGhpcy5vdXRwdXQuaXNWaXNpYmxlLmRlc2NyaXB0aW9uID0gIXRoaXMub3V0cHV0LmlzVmlzaWJsZS5kZXNjcmlwdGlvbjtcbiAgfVxuXG4gIHB1YmxpYyB0b2dnbGVUaHVtYnMoKSB7XG4gICAgdGhpcy5vdXRwdXQuaXNWaXNpYmxlLnRodW1ibmFpbHMgPSAhdGhpcy5vdXRwdXQuaXNWaXNpYmxlLnRodW1ibmFpbHM7XG4gIH1cblxuICBwdWJsaWMgaGFuZGxlVGh1bWJzKGluZGV4KSB7XG4gICAgdGhpcy5vdXRwdXQuaW5pdGlhbCA9IGluZGV4O1xuICAgIHRoaXMudXBkYXRlRGVzY3JpcHRpb24oKTtcbiAgfVxuXG4gIHB1YmxpYyBoYW5kbGVQYWdlQ2hhbmdlKHBheWxvYWQpIHtcbiAgICB0aGlzLmhhbmRsZVRodW1icyhwYXlsb2FkLnBhZ2UpO1xuICB9XG5cbiAgcHVibGljIHVwZGF0ZURlc2NyaXB0aW9uKCkge1xuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5vdXRwdXQuaW5pdGlhbDtcbiAgICBjb25zdCB7IGltYWdlcyB9ID0gdGhpcy5vdXRwdXQ7XG4gICAgdGhpcy5vdXRwdXQuZGVzY3JpcHRpb24gPSBpbWFnZXNbaW5kZXhdLmNhcHRpb247XG4gIH1cbn1cbiJdfQ==