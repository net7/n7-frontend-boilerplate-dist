import { DataSource, _t } from '@n7-frontend/core';
const ICON_OPEN = 'n7-icon-angle-up';
const ICON_CLOSE = 'n7-icon-angle-down';
export class FacetHeaderDS extends DataSource {
    constructor() {
        super(...arguments);
        this.getValue = () => this.value;
    }
    transform(data) {
        return Object.assign(Object.assign({}, data), { text: _t(data.text), iconRight: data.iconRight || ICON_OPEN });
    }
    setValue(value, update = false) {
        this.value = value;
        if (update) {
            this.update(Object.assign(Object.assign({}, this.input), { additionalText: value }));
        }
    }
    toggle() {
        let { iconRight } = this.output;
        iconRight = iconRight === ICON_OPEN ? ICON_CLOSE : ICON_OPEN;
        this.update(Object.assign(Object.assign({}, this.input), { iconRight }));
    }
    isOpen() {
        return this.output.iconRight === ICON_OPEN;
    }
    clear() {
        this.value = null;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjZXQtaGVhZGVyLmRzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG43LWZyb250ZW5kL2JvaWxlcnBsYXRlLyIsInNvdXJjZXMiOlsibGliL211cnVjYS9kYXRhLXNvdXJjZXMvZmFjZXRzL2ZhY2V0LWhlYWRlci5kcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBS25ELE1BQU0sU0FBUyxHQUFHLGtCQUFrQixDQUFDO0FBQ3JDLE1BQU0sVUFBVSxHQUFHLG9CQUFvQixDQUFDO0FBRXhDLE1BQU0sT0FBTyxhQUFjLFNBQVEsVUFBVTtJQUE3Qzs7UUF3QkUsYUFBUSxHQUFHLEdBQWdCLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBa0IzQyxDQUFDO0lBckNXLFNBQVMsQ0FBQyxJQUFxQjtRQUN2Qyx1Q0FDSyxJQUFJLEtBQ1AsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQ25CLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUyxJQUFJLFNBQVMsSUFDdEM7SUFDSixDQUFDO0lBRUQsUUFBUSxDQUFDLEtBQWtCLEVBQUUsTUFBTSxHQUFHLEtBQUs7UUFDekMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFFbkIsSUFBSSxNQUFNLEVBQUU7WUFDVixJQUFJLENBQUMsTUFBTSxpQ0FDTixJQUFJLENBQUMsS0FBSyxLQUNiLGNBQWMsRUFBRSxLQUFLLElBQ3JCLENBQUM7U0FDSjtJQUNILENBQUM7SUFJRCxNQUFNO1FBQ0osSUFBSSxFQUFFLFNBQVMsRUFBRSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDaEMsU0FBUyxHQUFHLFNBQVMsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1FBQzdELElBQUksQ0FBQyxNQUFNLGlDQUNOLElBQUksQ0FBQyxLQUFLLEtBQ2IsU0FBUyxJQUNULENBQUM7SUFDTCxDQUFDO0lBRUQsTUFBTTtRQUNKLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEtBQUssU0FBUyxDQUFDO0lBQzdDLENBQUM7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7SUFDcEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0YVNvdXJjZSwgX3QgfSBmcm9tICdAbjctZnJvbnRlbmQvY29yZSc7XG5pbXBvcnQgeyBGYWNldEhlYWRlckRhdGEgfSBmcm9tICdAbjctZnJvbnRlbmQvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBGYWNldERhdGFTb3VyY2UgfSBmcm9tICcuL2ZhY2V0LWRhdGFzb3VyY2UnO1xuXG50eXBlIEZBQ0VUX1ZBTFVFID0gc3RyaW5nIHwgbnVsbDtcbmNvbnN0IElDT05fT1BFTiA9ICduNy1pY29uLWFuZ2xlLXVwJztcbmNvbnN0IElDT05fQ0xPU0UgPSAnbjctaWNvbi1hbmdsZS1kb3duJztcblxuZXhwb3J0IGNsYXNzIEZhY2V0SGVhZGVyRFMgZXh0ZW5kcyBEYXRhU291cmNlIGltcGxlbWVudHMgRmFjZXREYXRhU291cmNlIHtcbiAgaWQ6IHN0cmluZztcblxuICB2YWx1ZTogRkFDRVRfVkFMVUU7XG5cbiAgcHJvdGVjdGVkIHRyYW5zZm9ybShkYXRhOiBGYWNldEhlYWRlckRhdGEpOiBGYWNldEhlYWRlckRhdGEge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5kYXRhLFxuICAgICAgdGV4dDogX3QoZGF0YS50ZXh0KSxcbiAgICAgIGljb25SaWdodDogZGF0YS5pY29uUmlnaHQgfHwgSUNPTl9PUEVOXG4gICAgfTtcbiAgfVxuXG4gIHNldFZhbHVlKHZhbHVlOiBGQUNFVF9WQUxVRSwgdXBkYXRlID0gZmFsc2UpIHtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG5cbiAgICBpZiAodXBkYXRlKSB7XG4gICAgICB0aGlzLnVwZGF0ZSh7XG4gICAgICAgIC4uLnRoaXMuaW5wdXQsXG4gICAgICAgIGFkZGl0aW9uYWxUZXh0OiB2YWx1ZVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZ2V0VmFsdWUgPSAoKTogRkFDRVRfVkFMVUUgPT4gdGhpcy52YWx1ZTtcblxuICB0b2dnbGUoKSB7XG4gICAgbGV0IHsgaWNvblJpZ2h0IH0gPSB0aGlzLm91dHB1dDtcbiAgICBpY29uUmlnaHQgPSBpY29uUmlnaHQgPT09IElDT05fT1BFTiA/IElDT05fQ0xPU0UgOiBJQ09OX09QRU47XG4gICAgdGhpcy51cGRhdGUoe1xuICAgICAgLi4udGhpcy5pbnB1dCxcbiAgICAgIGljb25SaWdodFxuICAgIH0pO1xuICB9XG5cbiAgaXNPcGVuKCkge1xuICAgIHJldHVybiB0aGlzLm91dHB1dC5pY29uUmlnaHQgPT09IElDT05fT1BFTjtcbiAgfVxuXG4gIGNsZWFyKCkge1xuICAgIHRoaXMudmFsdWUgPSBudWxsO1xuICB9XG59XG4iXX0=