import { isObject } from 'lodash';
const getSeries = (series) => series.map(({ id, name, data }) => ({
    id,
    name,
    data: data.map((point) => (isObject(point) ? point.value : point))
}));
const ɵ0 = getSeries;
const getSeriesMetadata = (series) => series.map(({ data }) => {
    const serieMetadata = [];
    data.forEach((point) => {
        if (isObject(point)) {
            serieMetadata.push((point === null || point === void 0 ? void 0 : point.metadata) || null);
        }
        else {
            serieMetadata.push(null);
        }
    });
    return serieMetadata;
});
const ɵ1 = getSeriesMetadata;
export default {
    getContainerId: (id) => `chart-${id}`,
    getSeries,
    getSeriesMetadata
};
export { ɵ0, ɵ1 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBleC1oZWxwZXJzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG43LWZyb250ZW5kL2JvaWxlcnBsYXRlLyIsInNvdXJjZXMiOlsibGliL2RhdGEtdml6L21vZGVscy9hcGV4L2FwZXgtaGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBR2xDLE1BQU0sU0FBUyxHQUFHLENBQ2hCLE1BQTZCLEVBQ1IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDNUQsRUFBRTtJQUNGLElBQUk7SUFDSixJQUFJLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0NBQ25FLENBQUMsQ0FBQyxDQUFDOztBQUVKLE1BQU0saUJBQWlCLEdBQUcsQ0FDeEIsTUFBNkIsRUFDbkIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUU7SUFDckMsTUFBTSxhQUFhLEdBQUcsRUFBRSxDQUFDO0lBQ3pCLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRTtRQUNyQixJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNuQixhQUFhLENBQUMsSUFBSSxDQUFDLENBQUEsS0FBSyxhQUFMLEtBQUssdUJBQUwsS0FBSyxDQUFFLFFBQVEsS0FBSSxJQUFJLENBQUMsQ0FBQztTQUM3QzthQUFNO1lBQ0wsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUMxQjtJQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxhQUFhLENBQUM7QUFDdkIsQ0FBQyxDQUFDLENBQUM7O0FBRUgsZUFBZTtJQUNiLGNBQWMsRUFBRSxDQUFDLEVBQVUsRUFBRSxFQUFFLENBQUMsU0FBUyxFQUFFLEVBQUU7SUFDN0MsU0FBUztJQUNULGlCQUFpQjtDQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNPYmplY3QgfSBmcm9tICdsb2Rhc2gnO1xyXG5pbXBvcnQgeyBDaGFydFJlc3BvbnNlU2VyaWVzIH0gZnJvbSAnLi4vLi4vdHlwZXMvcmVzcG9uc2UudHlwZXMnO1xyXG5cclxuY29uc3QgZ2V0U2VyaWVzID0gKFxyXG4gIHNlcmllczogQ2hhcnRSZXNwb25zZVNlcmllc1tdXHJcbik6IEFwZXhBeGlzQ2hhcnRTZXJpZXMgPT4gc2VyaWVzLm1hcCgoeyBpZCwgbmFtZSwgZGF0YSB9KSA9PiAoe1xyXG4gIGlkLFxyXG4gIG5hbWUsXHJcbiAgZGF0YTogZGF0YS5tYXAoKHBvaW50KSA9PiAoaXNPYmplY3QocG9pbnQpID8gcG9pbnQudmFsdWUgOiBwb2ludCkpXHJcbn0pKTtcclxuXHJcbmNvbnN0IGdldFNlcmllc01ldGFkYXRhID0gKFxyXG4gIHNlcmllczogQ2hhcnRSZXNwb25zZVNlcmllc1tdXHJcbik6IG9iamVjdFtdID0+IHNlcmllcy5tYXAoKHsgZGF0YSB9KSA9PiB7XHJcbiAgY29uc3Qgc2VyaWVNZXRhZGF0YSA9IFtdO1xyXG4gIGRhdGEuZm9yRWFjaCgocG9pbnQpID0+IHtcclxuICAgIGlmIChpc09iamVjdChwb2ludCkpIHtcclxuICAgICAgc2VyaWVNZXRhZGF0YS5wdXNoKHBvaW50Py5tZXRhZGF0YSB8fCBudWxsKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHNlcmllTWV0YWRhdGEucHVzaChudWxsKTtcclxuICAgIH1cclxuICB9KTtcclxuICByZXR1cm4gc2VyaWVNZXRhZGF0YTtcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgZ2V0Q29udGFpbmVySWQ6IChpZDogc3RyaW5nKSA9PiBgY2hhcnQtJHtpZH1gLFxyXG4gIGdldFNlcmllcyxcclxuICBnZXRTZXJpZXNNZXRhZGF0YVxyXG59O1xyXG4iXX0=