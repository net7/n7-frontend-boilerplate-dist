import { isObject } from 'lodash';
const getSeries = (series) => series.map(({ id, name, data }) => ({
    id,
    name,
    data: data.map((point) => (isObject(point) ? point.value : point))
}));
const ɵ0 = getSeries;
const getSeriesMetadata = (series) => series.map(({ data }) => {
    const serieMetadata = [];
    data.forEach((point) => {
        if (isObject(point)) {
            serieMetadata.push((point === null || point === void 0 ? void 0 : point.metadata) || null);
        }
        else {
            serieMetadata.push(null);
        }
    });
    return serieMetadata;
});
const ɵ1 = getSeriesMetadata;
export default {
    getContainerId: (id) => `chart-${id}`,
    getSeries,
    getSeriesMetadata
};
export { ɵ0, ɵ1 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBleC1oZWxwZXJzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG43LWZyb250ZW5kL2JvaWxlcnBsYXRlLyIsInNvdXJjZXMiOlsibGliL2RhdGEtdml6L21vZGVscy9hcGV4L2FwZXgtaGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBR2xDLE1BQU0sU0FBUyxHQUFHLENBQ2hCLE1BQTZCLEVBQ1IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDNUQsRUFBRTtJQUNGLElBQUk7SUFDSixJQUFJLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0NBQ25FLENBQUMsQ0FBQyxDQUFDOztBQUVKLE1BQU0saUJBQWlCLEdBQUcsQ0FDeEIsTUFBNkIsRUFDbkIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUU7SUFDckMsTUFBTSxhQUFhLEdBQUcsRUFBRSxDQUFDO0lBQ3pCLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRTtRQUNyQixJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNuQixhQUFhLENBQUMsSUFBSSxDQUFDLENBQUEsS0FBSyxhQUFMLEtBQUssdUJBQUwsS0FBSyxDQUFFLFFBQVEsS0FBSSxJQUFJLENBQUMsQ0FBQztTQUM3QzthQUFNO1lBQ0wsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUMxQjtJQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxhQUFhLENBQUM7QUFDdkIsQ0FBQyxDQUFDLENBQUM7O0FBRUgsZUFBZTtJQUNiLGNBQWMsRUFBRSxDQUFDLEVBQVUsRUFBRSxFQUFFLENBQUMsU0FBUyxFQUFFLEVBQUU7SUFDN0MsU0FBUztJQUNULGlCQUFpQjtDQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNPYmplY3QgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgQ2hhcnRSZXNwb25zZVNlcmllcyB9IGZyb20gJy4uLy4uL3R5cGVzL3Jlc3BvbnNlLnR5cGVzJztcblxuY29uc3QgZ2V0U2VyaWVzID0gKFxuICBzZXJpZXM6IENoYXJ0UmVzcG9uc2VTZXJpZXNbXVxuKTogQXBleEF4aXNDaGFydFNlcmllcyA9PiBzZXJpZXMubWFwKCh7IGlkLCBuYW1lLCBkYXRhIH0pID0+ICh7XG4gIGlkLFxuICBuYW1lLFxuICBkYXRhOiBkYXRhLm1hcCgocG9pbnQpID0+IChpc09iamVjdChwb2ludCkgPyBwb2ludC52YWx1ZSA6IHBvaW50KSlcbn0pKTtcblxuY29uc3QgZ2V0U2VyaWVzTWV0YWRhdGEgPSAoXG4gIHNlcmllczogQ2hhcnRSZXNwb25zZVNlcmllc1tdXG4pOiBvYmplY3RbXSA9PiBzZXJpZXMubWFwKCh7IGRhdGEgfSkgPT4ge1xuICBjb25zdCBzZXJpZU1ldGFkYXRhID0gW107XG4gIGRhdGEuZm9yRWFjaCgocG9pbnQpID0+IHtcbiAgICBpZiAoaXNPYmplY3QocG9pbnQpKSB7XG4gICAgICBzZXJpZU1ldGFkYXRhLnB1c2gocG9pbnQ/Lm1ldGFkYXRhIHx8IG51bGwpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXJpZU1ldGFkYXRhLnB1c2gobnVsbCk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHNlcmllTWV0YWRhdGE7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBnZXRDb250YWluZXJJZDogKGlkOiBzdHJpbmcpID0+IGBjaGFydC0ke2lkfWAsXG4gIGdldFNlcmllcyxcbiAgZ2V0U2VyaWVzTWV0YWRhdGFcbn07XG4iXX0=