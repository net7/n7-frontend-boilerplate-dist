/**
 * @fileoverview added by tsickle
 * Generated from: lib/data-viz/data-sources/graph.ds.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DataSource } from '@n7-frontend/core';
export class DvGraphDS extends DataSource {
    /**
     * @protected
     * @return {?}
     */
    transform() {
        return {
            containerId: 'test-Chart',
            libOptions: {
                chart: {
                    height: 550,
                    width: 1500,
                    type: 'area',
                    toolbar: { show: true },
                },
                dataLabels: { enabled: false },
                colors: ['rgba(15,200,255)'],
                fill: {
                    colors: ['#0fc8ff'],
                    gradient: { opacityFrom: 0.5, opacityTo: 0.1 },
                },
                stroke: { curve: 'straight', width: [2, 1] },
                series: [
                    {
                        name: 'Reddish value',
                        data: [['2019-08-01', '770.17'], ['2019-08-02', '645.03'],
                            ['2019-08-03', '709.32'], ['2019-08-04', '708.11'],
                            ['2019-08-05', '706.59'], ['2019-08-06', '607.28'],
                            ['2019-08-07', '494.59'], ['2019-08-08', '636.81'],
                            ['2019-08-09', '709.04'], ['2019-08-10', '717.31'],
                            ['2019-08-11', '805.61'], ['2019-08-12', '758.60'],
                            ['2019-08-13', '612.82'], ['2019-08-14', '608.90'],
                            ['2019-08-15', '734.68'], ['2019-08-16', '838.54'],
                            ['2019-08-17', '692.88']],
                    },
                ],
                grid: {
                    borderColor: '#e7e7e7',
                    strokeDashArray: 3,
                    xaxis: { lines: { show: true } },
                },
                markers: { size: 3, hover: { size: 6 } },
                xaxis: {
                    axisBorder: { show: true, color: '#f4f6fc' },
                    labels: {},
                    type: 'datetime',
                    tickAmount: 6,
                },
                yaxis: [
                    {
                        show: true,
                        showAlways: false,
                        opposite: false,
                        reversed: false,
                        logarithmic: false,
                        forceNiceScale: false,
                        floating: false,
                        labels: {
                            show: true,
                            minWidth: 0,
                            maxWidth: 160,
                            offsetX: 0,
                            offsetY: 0,
                            rotate: 0,
                            padding: 20,
                            style: { colors: [], fontSize: '11px', cssClass: '' },
                        },
                        axisBorder: {
                            show: true, color: '#f4f6fc', offsetX: 0, offsetY: 0,
                        },
                        axisTicks: {
                            show: false, color: '#78909C', width: 6, offsetX: 0, offsetY: 0,
                        },
                        title: {
                            text: 'P Totale Â°C', rotate: 90, offsetY: 0, offsetX: 0, style: { fontSize: '11px', cssClass: '' },
                        },
                        tooltip: { enabled: false, offsetX: 0 },
                        crosshairs: { show: true, position: 'front', stroke: { color: '#b6b6b6', width: 1, dashArray: 0 } },
                    },
                ],
                legend: { show: true },
                tooltip: {},
                annotations: { yaxis: [], xaxis: [], points: [] },
            },
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhcGguZHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbjctZnJvbnRlbmQvYm9pbGVycGxhdGUvIiwic291cmNlcyI6WyJsaWIvZGF0YS12aXovZGF0YS1zb3VyY2VzL2dyYXBoLmRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRS9DLE1BQU0sT0FBTyxTQUFVLFNBQVEsVUFBVTs7Ozs7SUFDN0IsU0FBUztRQUNqQixPQUFPO1lBQ0wsV0FBVyxFQUFFLFlBQVk7WUFDekIsVUFBVSxFQUFFO2dCQUNWLEtBQUssRUFBRTtvQkFDTCxNQUFNLEVBQUUsR0FBRztvQkFDWCxLQUFLLEVBQUUsSUFBSTtvQkFDWCxJQUFJLEVBQUUsTUFBTTtvQkFDWixPQUFPLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFO2lCQUN4QjtnQkFDRCxVQUFVLEVBQUUsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFO2dCQUM5QixNQUFNLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztnQkFDNUIsSUFBSSxFQUFFO29CQUNKLE1BQU0sRUFBRSxDQUFDLFNBQVMsQ0FBQztvQkFDbkIsUUFBUSxFQUFFLEVBQUUsV0FBVyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFO2lCQUMvQztnQkFDRCxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRTtnQkFDNUMsTUFBTSxFQUFFO29CQUNOO3dCQUNFLElBQUksRUFBRSxlQUFlO3dCQUNyQixJQUFJLEVBQUUsQ0FBQyxDQUFDLFlBQVksRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxRQUFRLENBQUM7NEJBQ3ZELENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQzs0QkFDbEQsQ0FBQyxZQUFZLEVBQUUs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RUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7Z0JBQ3RCLE9BQU8sRUFBRSxFQUFFO2dCQUNYLFdBQVcsRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFO2FBQ2xEO1NBQ0YsQ0FBQztJQUNKLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGFTb3VyY2UgfSBmcm9tICdAbjctZnJvbnRlbmQvY29yZSc7XHJcblxyXG5leHBvcnQgY2xhc3MgRHZHcmFwaERTIGV4dGVuZHMgRGF0YVNvdXJjZSB7XHJcbiAgcHJvdGVjdGVkIHRyYW5zZm9ybSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGNvbnRhaW5lcklkOiAndGVzdC1DaGFydCcsXHJcbiAgICAgIGxpYk9wdGlvbnM6IHtcclxuICAgICAgICBjaGFydDoge1xyXG4gICAgICAgICAgaGVpZ2h0OiA1NTAsXHJcbiAgICAgICAgICB3aWR0aDogMTUwMCxcclxuICAgICAgICAgIHR5cGU6ICdhcmVhJyxcclxuICAgICAgICAgIHRvb2xiYXI6IHsgc2hvdzogdHJ1ZSB9LFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGF0YUxhYmVsczogeyBlbmFibGVkOiBmYWxzZSB9LFxyXG4gICAgICAgIGNvbG9yczogWydyZ2JhKDE1LDIwMCwyNTUpJ10sXHJcbiAgICAgICAgZmlsbDoge1xyXG4gICAgICAgICAgY29sb3JzOiBbJyMwZmM4ZmYnXSxcclxuICAgICAgICAgIGdyYWRpZW50OiB7IG9wYWNpdHlGcm9tOiAwLjUsIG9wYWNpdHlUbzogMC4xIH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgICBzdHJva2U6IHsgY3VydmU6ICdzdHJhaWdodCcsIHdpZHRoOiBbMiwgMV0gfSxcclxuICAgICAgICBzZXJpZXM6IFtcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgbmFtZTogJ1JlZGRpc2ggdmFsdWUnLFxyXG4gICAgICAgICAgICBkYXRhOiBbWycyMDE5LTA4LTAxJywgJzc3MC4xNyddLCBbJzIwMTktMDgtMDInLCAnNjQ1LjAzJ10sXHJcbiAgICAgICAgICAgICAgWycyMDE5LTA4LTAzJywgJzcwOS4zMiddLCBbJzIwMTktMDgtMDQnLCAnNzA4LjExJ10sXHJcbiAgICAgICAgICAgICAgWycyMDE5LTA4LTA1JywgJzcwNi41OSddLCBbJzIwMTktMDgtMDYnLCAnNjA3LjI4J10sXHJcbiAgICAgICAgICAgICAgWycyMDE5LTA4LTA3JywgJzQ5NC41OSddLCBbJzIwMTktMDgtMDgnLCAnNjM2LjgxJ10sXHJcbiAgICAgICAgICAgICAgWycyMDE5LTA4LTA5JywgJzcwOS4wNCddLCBbJzIwMTktMDgtMTAnLCAnNzE3LjMxJ10sXHJcbiAgICAgICAgICAgICAgWycyMDE5LTA4LTExJywgJzgwNS42MSddLCBbJzIwMTktMDgtMTInLCAnNzU4LjYwJ10sXHJcbiAgICAgICAgICAgICAgWycyMDE5LTA4LTEzJywgJzYxMi44MiddLCBbJzIwMTktMDgtMTQnLCAnNjA4LjkwJ10sXHJcbiAgICAgICAgICAgICAgWycyMDE5LTA4LTE1JywgJzczNC42OCddLCBbJzIwMTktMDgtMTYnLCAnODM4LjU0J10sXHJcbiAgICAgICAgICAgICAgWycyMDE5LTA4LTE3JywgJzY5Mi44OCddXSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgXSxcclxuICAgICAgICBncmlkOiB7XHJcbiAgICAgICAgICBib3JkZXJDb2xvcjogJyNlN2U3ZTcnLFxyXG4gICAgICAgICAgc3Ryb2tlRGFzaEFycmF5OiAzLFxyXG4gICAgICAgICAgeGF4aXM6IHsgbGluZXM6IHsgc2hvdzogdHJ1ZSB9IH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgICBtYXJrZXJzOiB7IHNpemU6IDMsIGhvdmVyOiB7IHNpemU6IDYgfSB9LFxyXG4gICAgICAgIHhheGlzOiB7XHJcbiAgICAgICAgICBheGlzQm9yZGVyOiB7IHNob3c6IHRydWUsIGNvbG9yOiAnI2Y0ZjZmYycgfSxcclxuICAgICAgICAgIGxhYmVsczoge30sXHJcbiAgICAgICAgICB0eXBlOiAnZGF0ZXRpbWUnLFxyXG4gICAgICAgICAgdGlja0Ftb3VudDogNixcclxuICAgICAgICB9LFxyXG4gICAgICAgIHlheGlzOiBbXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIHNob3c6IHRydWUsXHJcbiAgICAgICAgICAgIHNob3dBbHdheXM6IGZhbHNlLFxyXG4gICAgICAgICAgICBvcHBvc2l0ZTogZmFsc2UsXHJcbiAgICAgICAgICAgIHJldmVyc2VkOiBmYWxzZSxcclxuICAgICAgICAgICAgbG9nYXJpdGhtaWM6IGZhbHNlLFxyXG4gICAgICAgICAgICBmb3JjZU5pY2VTY2FsZTogZmFsc2UsXHJcbiAgICAgICAgICAgIGZsb2F0aW5nOiBmYWxzZSxcclxuICAgICAgICAgICAgbGFiZWxzOiB7XHJcbiAgICAgICAgICAgICAgc2hvdzogdHJ1ZSxcclxuICAgICAgICAgICAgICBtaW5XaWR0aDogMCxcclxuICAgICAgICAgICAgICBtYXhXaWR0aDogMTYwLFxyXG4gICAgICAgICAgICAgIG9mZnNldFg6IDAsXHJcbiAgICAgICAgICAgICAgb2Zmc2V0WTogMCxcclxuICAgICAgICAgICAgICByb3RhdGU6IDAsXHJcbiAgICAgICAgICAgICAgcGFkZGluZzogMjAsXHJcbiAgICAgICAgICAgICAgc3R5bGU6IHsgY29sb3JzOiBbXSwgZm9udFNpemU6ICcxMXB4JywgY3NzQ2xhc3M6ICcnIH0sXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGF4aXNCb3JkZXI6IHtcclxuICAgICAgICAgICAgICBzaG93OiB0cnVlLCBjb2xvcjogJyNmNGY2ZmMnLCBvZmZzZXRYOiAwLCBvZmZzZXRZOiAwLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBheGlzVGlja3M6IHtcclxuICAgICAgICAgICAgICBzaG93OiBmYWxzZSwgY29sb3I6ICcjNzg5MDlDJywgd2lkdGg6IDYsIG9mZnNldFg6IDAsIG9mZnNldFk6IDAsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHRpdGxlOiB7XHJcbiAgICAgICAgICAgICAgdGV4dDogJ1AgVG90YWxlIMKwQycsIHJvdGF0ZTogOTAsIG9mZnNldFk6IDAsIG9mZnNldFg6IDAsIHN0eWxlOiB7IGZvbnRTaXplOiAnMTFweCcsIGNzc0NsYXNzOiAnJyB9LFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB0b29sdGlwOiB7IGVuYWJsZWQ6IGZhbHNlLCBvZmZzZXRYOiAwIH0sXHJcbiAgICAgICAgICAgIGNyb3NzaGFpcnM6IHsgc2hvdzogdHJ1ZSwgcG9zaXRpb246ICdmcm9udCcsIHN0cm9rZTogeyBjb2xvcjogJyNiNmI2YjYnLCB3aWR0aDogMSwgZGFzaEFycmF5OiAwIH0gfSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgXSxcclxuICAgICAgICBsZWdlbmQ6IHsgc2hvdzogdHJ1ZSB9LFxyXG4gICAgICAgIHRvb2x0aXA6IHt9LFxyXG4gICAgICAgIGFubm90YXRpb25zOiB7IHlheGlzOiBbXSwgeGF4aXM6IFtdLCBwb2ludHM6IFtdIH0sXHJcbiAgICAgIH0sXHJcbiAgICB9O1xyXG4gIH1cclxufVxyXG4iXX0=