/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DataSource } from '@n7-frontend/core';
export class DvGraphDS extends DataSource {
    /**
     * @protected
     * @return {?}
     */
    transform() {
        return {
            containerId: 'test-Chart',
            libOptions: {
                chart: {
                    height: 550,
                    width: 1500,
                    type: 'area',
                    toolbar: { show: true },
                },
                dataLabels: { enabled: false },
                colors: ['rgba(15,200,255)'],
                fill: {
                    colors: ['#0fc8ff'],
                    gradient: { opacityFrom: 0.5, opacityTo: 0.1 },
                },
                stroke: { curve: 'straight', width: [2, 1] },
                series: [
                    {
                        name: 'Reddish value',
                        data: [['2019-08-01', '770.17'], ['2019-08-02', '645.03'],
                            ['2019-08-03', '709.32'], ['2019-08-04', '708.11'],
                            ['2019-08-05', '706.59'], ['2019-08-06', '607.28'],
                            ['2019-08-07', '494.59'], ['2019-08-08', '636.81'],
                            ['2019-08-09', '709.04'], ['2019-08-10', '717.31'],
                            ['2019-08-11', '805.61'], ['2019-08-12', '758.60'],
                            ['2019-08-13', '612.82'], ['2019-08-14', '608.90'],
                            ['2019-08-15', '734.68'], ['2019-08-16', '838.54'],
                            ['2019-08-17', '692.88']],
                    },
                ],
                grid: {
                    borderColor: '#e7e7e7',
                    strokeDashArray: 3,
                    xaxis: { lines: { show: true } },
                },
                markers: { size: 3, hover: { size: 6 } },
                xaxis: {
                    axisBorder: { show: true, color: '#f4f6fc' },
                    labels: {},
                    type: 'datetime',
                    tickAmount: 6,
                },
                yaxis: [
                    {
                        show: true,
                        showAlways: false,
                        opposite: false,
                        reversed: false,
                        logarithmic: false,
                        forceNiceScale: false,
                        floating: false,
                        labels: {
                            show: true,
                            minWidth: 0,
                            maxWidth: 160,
                            offsetX: 0,
                            offsetY: 0,
                            rotate: 0,
                            padding: 20,
                            style: { colors: [], fontSize: '11px', cssClass: '' },
                        },
                        axisBorder: {
                            show: true, color: '#f4f6fc', offsetX: 0, offsetY: 0,
                        },
                        axisTicks: {
                            show: false, color: '#78909C', width: 6, offsetX: 0, offsetY: 0,
                        },
                        title: {
                            text: 'P Totale Â°C', rotate: 90, offsetY: 0, offsetX: 0, style: { fontSize: '11px', cssClass: '' },
                        },
                        tooltip: { enabled: false, offsetX: 0 },
                        crosshairs: { show: true, position: 'front', stroke: { color: '#b6b6b6', width: 1, dashArray: 0 } },
                    },
                ],
                legend: { show: true },
                tooltip: {},
                annotations: { yaxis: [], xaxis: [], points: [] },
            },
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhcGguZHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbjctZnJvbnRlbmQvYm9pbGVycGxhdGUvIiwic291cmNlcyI6WyJsaWIvZGF0YS12aXovZGF0YS1zb3VyY2VzL2dyYXBoLmRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFL0MsTUFBTSxPQUFPLFNBQVUsU0FBUSxVQUFVOzs7OztJQUM3QixTQUFTO1FBQ2pCLE9BQU87WUFDTCxXQUFXLEVBQUUsWUFBWTtZQUN6QixVQUFVLEVBQUU7Z0JBQ1YsS0FBSyxFQUFFO29CQUNMLE1BQU0sRUFBRSxHQUFHO29CQUNYLEtBQUssRUFBRSxJQUFJO29CQUNYLElBQUksRUFBRSxNQUFNO29CQUNaLE9BQU8sRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7aUJBQ3hCO2dCQUNELFVBQVUsRUFBRSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUU7Z0JBQzlCLE1BQU0sRUFBRSxDQUFDLGtCQUFrQixDQUFDO2dCQUM1QixJQUFJLEVBQUU7b0JBQ0osTUFBTSxFQUFFLENBQUMsU0FBUyxDQUFDO29CQUNuQixRQUFRLEVBQUUsRUFBRSxXQUFXLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxHQUFHLEVBQUU7aUJBQy9DO2dCQUNELE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFO2dCQUM1QyxNQUFNLEVBQUU7b0JBQ047d0JBQ0UsSUFBSSxFQUFFLGVBQWU7d0JBQ3JCLElBQUksRUFBRSxDQUFDLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQzs0QkFDdkQsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDOzRCQUNsRCxDQUFDLFlBQVksRUFBRSxR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QUFFLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRTtnQkFDdEIsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsV0FBVyxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUU7YUFDbEQ7U0FDRixDQUFDO0lBQ0osQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0YVNvdXJjZSB9IGZyb20gJ0BuNy1mcm9udGVuZC9jb3JlJztcblxuZXhwb3J0IGNsYXNzIER2R3JhcGhEUyBleHRlbmRzIERhdGFTb3VyY2Uge1xuICBwcm90ZWN0ZWQgdHJhbnNmb3JtKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjb250YWluZXJJZDogJ3Rlc3QtQ2hhcnQnLFxuICAgICAgbGliT3B0aW9uczoge1xuICAgICAgICBjaGFydDoge1xuICAgICAgICAgIGhlaWdodDogNTUwLFxuICAgICAgICAgIHdpZHRoOiAxNTAwLFxuICAgICAgICAgIHR5cGU6ICdhcmVhJyxcbiAgICAgICAgICB0b29sYmFyOiB7IHNob3c6IHRydWUgfSxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YUxhYmVsczogeyBlbmFibGVkOiBmYWxzZSB9LFxuICAgICAgICBjb2xvcnM6IFsncmdiYSgxNSwyMDAsMjU1KSddLFxuICAgICAgICBmaWxsOiB7XG4gICAgICAgICAgY29sb3JzOiBbJyMwZmM4ZmYnXSxcbiAgICAgICAgICBncmFkaWVudDogeyBvcGFjaXR5RnJvbTogMC41LCBvcGFjaXR5VG86IDAuMSB9LFxuICAgICAgICB9LFxuICAgICAgICBzdHJva2U6IHsgY3VydmU6ICdzdHJhaWdodCcsIHdpZHRoOiBbMiwgMV0gfSxcbiAgICAgICAgc2VyaWVzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ1JlZGRpc2ggdmFsdWUnLFxuICAgICAgICAgICAgZGF0YTogW1snMjAxOS0wOC0wMScsICc3NzAuMTcnXSwgWycyMDE5LTA4LTAyJywgJzY0NS4wMyddLFxuICAgICAgICAgICAgICBbJzIwMTktMDgtMDMnLCAnNzA5LjMyJ10sIFsnMjAxOS0wOC0wNCcsICc3MDguMTEnXSxcbiAgICAgICAgICAgICAgWycyMDE5LTA4LTA1JywgJzcwNi41OSddLCBbJzIwMTktMDgtMDYnLCAnNjA3LjI4J10sXG4gICAgICAgICAgICAgIFsnMjAxOS0wOC0wNycsICc0OTQuNTknXSwgWycyMDE5LTA4LTA4JywgJzYzNi44MSddLFxuICAgICAgICAgICAgICBbJzIwMTktMDgtMDknLCAnNzA5LjA0J10sIFsnMjAxOS0wOC0xMCcsICc3MTcuMzEnXSxcbiAgICAgICAgICAgICAgWycyMDE5LTA4LTExJywgJzgwNS42MSddLCBbJzIwMTktMDgtMTInLCAnNzU4LjYwJ10sXG4gICAgICAgICAgICAgIFsnMjAxOS0wOC0xMycsICc2MTIuODInXSwgWycyMDE5LTA4LTE0JywgJzYwOC45MCddLFxuICAgICAgICAgICAgICBbJzIwMTktMDgtMTUnLCAnNzM0LjY4J10sIFsnMjAxOS0wOC0xNicsICc4MzguNTQnXSxcbiAgICAgICAgICAgICAgWycyMDE5LTA4LTE3JywgJzY5Mi44OCddXSxcbiAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBncmlkOiB7XG4gICAgICAgICAgYm9yZGVyQ29sb3I6ICcjZTdlN2U3JyxcbiAgICAgICAgICBzdHJva2VEYXNoQXJyYXk6IDMsXG4gICAgICAgICAgeGF4aXM6IHsgbGluZXM6IHsgc2hvdzogdHJ1ZSB9IH0sXG4gICAgICAgIH0sXG4gICAgICAgIG1hcmtlcnM6IHsgc2l6ZTogMywgaG92ZXI6IHsgc2l6ZTogNiB9IH0sXG4gICAgICAgIHhheGlzOiB7XG4gICAgICAgICAgYXhpc0JvcmRlcjogeyBzaG93OiB0cnVlLCBjb2xvcjogJyNmNGY2ZmMnIH0sXG4gICAgICAgICAgbGFiZWxzOiB7fSxcbiAgICAgICAgICB0eXBlOiAnZGF0ZXRpbWUnLFxuICAgICAgICAgIHRpY2tBbW91bnQ6IDYsXG4gICAgICAgIH0sXG4gICAgICAgIHlheGlzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2hvdzogdHJ1ZSxcbiAgICAgICAgICAgIHNob3dBbHdheXM6IGZhbHNlLFxuICAgICAgICAgICAgb3Bwb3NpdGU6IGZhbHNlLFxuICAgICAgICAgICAgcmV2ZXJzZWQ6IGZhbHNlLFxuICAgICAgICAgICAgbG9nYXJpdGhtaWM6IGZhbHNlLFxuICAgICAgICAgICAgZm9yY2VOaWNlU2NhbGU6IGZhbHNlLFxuICAgICAgICAgICAgZmxvYXRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgbGFiZWxzOiB7XG4gICAgICAgICAgICAgIHNob3c6IHRydWUsXG4gICAgICAgICAgICAgIG1pbldpZHRoOiAwLFxuICAgICAgICAgICAgICBtYXhXaWR0aDogMTYwLFxuICAgICAgICAgICAgICBvZmZzZXRYOiAwLFxuICAgICAgICAgICAgICBvZmZzZXRZOiAwLFxuICAgICAgICAgICAgICByb3RhdGU6IDAsXG4gICAgICAgICAgICAgIHBhZGRpbmc6IDIwLFxuICAgICAgICAgICAgICBzdHlsZTogeyBjb2xvcnM6IFtdLCBmb250U2l6ZTogJzExcHgnLCBjc3NDbGFzczogJycgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBheGlzQm9yZGVyOiB7XG4gICAgICAgICAgICAgIHNob3c6IHRydWUsIGNvbG9yOiAnI2Y0ZjZmYycsIG9mZnNldFg6IDAsIG9mZnNldFk6IDAsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYXhpc1RpY2tzOiB7XG4gICAgICAgICAgICAgIHNob3c6IGZhbHNlLCBjb2xvcjogJyM3ODkwOUMnLCB3aWR0aDogNiwgb2Zmc2V0WDogMCwgb2Zmc2V0WTogMCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0aXRsZToge1xuICAgICAgICAgICAgICB0ZXh0OiAnUCBUb3RhbGUgwrBDJywgcm90YXRlOiA5MCwgb2Zmc2V0WTogMCwgb2Zmc2V0WDogMCwgc3R5bGU6IHsgZm9udFNpemU6ICcxMXB4JywgY3NzQ2xhc3M6ICcnIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdG9vbHRpcDogeyBlbmFibGVkOiBmYWxzZSwgb2Zmc2V0WDogMCB9LFxuICAgICAgICAgICAgY3Jvc3NoYWlyczogeyBzaG93OiB0cnVlLCBwb3NpdGlvbjogJ2Zyb250Jywgc3Ryb2tlOiB7IGNvbG9yOiAnI2I2YjZiNicsIHdpZHRoOiAxLCBkYXNoQXJyYXk6IDAgfSB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIGxlZ2VuZDogeyBzaG93OiB0cnVlIH0sXG4gICAgICAgIHRvb2x0aXA6IHt9LFxuICAgICAgICBhbm5vdGF0aW9uczogeyB5YXhpczogW10sIHhheGlzOiBbXSwgcG9pbnRzOiBbXSB9LFxuICAgICAgfSxcbiAgICB9O1xuICB9XG59XG4iXX0=