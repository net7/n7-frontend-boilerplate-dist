import { DataSource } from '@n7-frontend/core';
export class AwSchedaPdfDS extends DataSource {
    transform(data) {
        const { items } = data;
        if (!(Array.isArray(items) && items.length)) {
            return null;
        }
        this.items = items.map((item, index) => (Object.assign(Object.assign({}, item), { selected: index === 0 })));
        // defaults
        return {
            items: this.items,
            next: 1,
            prev: null,
            currentUrl: items[0].url
        };
    }
    onChange(index) {
        this.output.next = index < (this.items.length - 1) ? index + 1 : null;
        this.output.prev = index > 0 ? index - 1 : null;
        this.output.currentUrl = this.items[index].url;
        this.items.forEach((item, itemIndex) => {
            item.selected = itemIndex === index;
        });
    }
    onLoaded() {
        this.output.classes = 'is-loaded';
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZWRhLXBkZi5kcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuNy1mcm9udGVuZC9ib2lsZXJwbGF0ZS8iLCJzb3VyY2VzIjpbImxpYi9hcmlhbm5hLXdlYi9kYXRhLXNvdXJjZXMvc2NoZWRhLXBkZi5kcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFHL0MsTUFBTSxPQUFPLGFBQWMsU0FBUSxVQUFVO0lBT2pDLFNBQVMsQ0FBQyxJQUFJO1FBQ3RCLE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDdkIsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDM0MsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUVELElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLGlDQUNuQyxJQUFJLEtBQ1AsUUFBUSxFQUFFLEtBQUssS0FBSyxDQUFDLElBQ3JCLENBQUMsQ0FBQztRQUVKLFdBQVc7UUFDWCxPQUFPO1lBQ0wsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ2pCLElBQUksRUFBRSxDQUFDO1lBQ1AsSUFBSSxFQUFFLElBQUk7WUFDVixVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUc7U0FDekIsQ0FBQztJQUNKLENBQUM7SUFFRCxRQUFRLENBQUMsS0FBSztRQUNaLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLEtBQUssR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDdEUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ2hELElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDO1FBQy9DLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxFQUFFO1lBQ3JDLElBQUksQ0FBQyxRQUFRLEdBQUcsU0FBUyxLQUFLLEtBQUssQ0FBQztRQUN0QyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsV0FBVyxDQUFDO0lBQ3BDLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGFTb3VyY2UgfSBmcm9tICdAbjctZnJvbnRlbmQvY29yZSc7XG5pbXBvcnQgeyBQZGZWaWV3ZXJEYXRhIH0gZnJvbSAnLi4vY29tcG9uZW50cyc7XG5cbmV4cG9ydCBjbGFzcyBBd1NjaGVkYVBkZkRTIGV4dGVuZHMgRGF0YVNvdXJjZSB7XG4gIHByaXZhdGUgaXRlbXM6IHtcbiAgICBsYWJlbDogc3RyaW5nO1xuICAgIHVybDogc3RyaW5nO1xuICAgIHNlbGVjdGVkOiBib29sZWFuO1xuICB9W107XG5cbiAgcHJvdGVjdGVkIHRyYW5zZm9ybShkYXRhKTogUGRmVmlld2VyRGF0YSB7XG4gICAgY29uc3QgeyBpdGVtcyB9ID0gZGF0YTtcbiAgICBpZiAoIShBcnJheS5pc0FycmF5KGl0ZW1zKSAmJiBpdGVtcy5sZW5ndGgpKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICB0aGlzLml0ZW1zID0gaXRlbXMubWFwKChpdGVtLCBpbmRleCkgPT4gKHtcbiAgICAgIC4uLml0ZW0sXG4gICAgICBzZWxlY3RlZDogaW5kZXggPT09IDBcbiAgICB9KSk7XG5cbiAgICAvLyBkZWZhdWx0c1xuICAgIHJldHVybiB7XG4gICAgICBpdGVtczogdGhpcy5pdGVtcyxcbiAgICAgIG5leHQ6IDEsXG4gICAgICBwcmV2OiBudWxsLFxuICAgICAgY3VycmVudFVybDogaXRlbXNbMF0udXJsXG4gICAgfTtcbiAgfVxuXG4gIG9uQ2hhbmdlKGluZGV4KSB7XG4gICAgdGhpcy5vdXRwdXQubmV4dCA9IGluZGV4IDwgKHRoaXMuaXRlbXMubGVuZ3RoIC0gMSkgPyBpbmRleCArIDEgOiBudWxsO1xuICAgIHRoaXMub3V0cHV0LnByZXYgPSBpbmRleCA+IDAgPyBpbmRleCAtIDEgOiBudWxsO1xuICAgIHRoaXMub3V0cHV0LmN1cnJlbnRVcmwgPSB0aGlzLml0ZW1zW2luZGV4XS51cmw7XG4gICAgdGhpcy5pdGVtcy5mb3JFYWNoKChpdGVtLCBpdGVtSW5kZXgpID0+IHtcbiAgICAgIGl0ZW0uc2VsZWN0ZWQgPSBpdGVtSW5kZXggPT09IGluZGV4O1xuICAgIH0pO1xuICB9XG5cbiAgb25Mb2FkZWQoKSB7XG4gICAgdGhpcy5vdXRwdXQuY2xhc3NlcyA9ICdpcy1sb2FkZWQnO1xuICB9XG59XG4iXX0=