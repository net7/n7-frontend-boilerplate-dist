import { DataSource } from '@n7-frontend/core';
import { merge } from 'lodash';
const DEFAULT_OPTIONS = {
    showToolbar: true,
    showSidebarButton: true,
    showFindButton: true,
    showPagingButtons: true,
    showZoomButtons: true,
    showPresentationModeButton: true,
    showOpenFileButton: false,
    showPrintButton: false,
    showDownloadButton: false,
    showBookmarkButton: false,
    showSecondaryToolbarButton: true,
    showRotateButton: false,
    showHandToolButton: true,
    showScrollingButton: false,
    showSpreadButton: false,
    showPropertiesButton: false
};
export class AwSchedaPdfDS extends DataSource {
    transform(data) {
        const { items } = data;
        const libOptions = merge(DEFAULT_OPTIONS, this.options.libOptions || {});
        if (!(Array.isArray(items) && items.length)) {
            return null;
        }
        this.items = items.map((item, index) => (Object.assign(Object.assign({}, item), { selected: index === 0 })));
        console.log('libOptions----------------------------->', libOptions);
        // defaults
        return {
            libOptions,
            items: this.items,
            next: 1,
            prev: null,
            currentUrl: items[0].url,
        };
    }
    onChange(index) {
        this.output.next = index < (this.items.length - 1) ? index + 1 : null;
        this.output.prev = index > 0 ? index - 1 : null;
        this.output.currentUrl = this.items[index].url;
        this.items.forEach((item, itemIndex) => {
            item.selected = itemIndex === index;
        });
    }
    onLoaded() {
        this.output.classes = 'is-loaded';
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZWRhLXBkZi5kcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuNy1mcm9udGVuZC9ib2lsZXJwbGF0ZS8iLCJzb3VyY2VzIjpbImxpYi9hcmlhbm5hLXdlYi9kYXRhLXNvdXJjZXMvc2NoZWRhLXBkZi5kcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUcvQixNQUFNLGVBQWUsR0FBRztJQUN0QixXQUFXLEVBQUUsSUFBSTtJQUNqQixpQkFBaUIsRUFBRSxJQUFJO0lBQ3ZCLGNBQWMsRUFBRSxJQUFJO0lBQ3BCLGlCQUFpQixFQUFFLElBQUk7SUFDdkIsZUFBZSxFQUFFLElBQUk7SUFDckIsMEJBQTBCLEVBQUUsSUFBSTtJQUNoQyxrQkFBa0IsRUFBRSxLQUFLO0lBQ3pCLGVBQWUsRUFBRSxLQUFLO0lBQ3RCLGtCQUFrQixFQUFFLEtBQUs7SUFDekIsa0JBQWtCLEVBQUUsS0FBSztJQUN6QiwwQkFBMEIsRUFBRSxJQUFJO0lBQ2hDLGdCQUFnQixFQUFFLEtBQUs7SUFDdkIsa0JBQWtCLEVBQUUsSUFBSTtJQUN4QixtQkFBbUIsRUFBRSxLQUFLO0lBQzFCLGdCQUFnQixFQUFFLEtBQUs7SUFDdkIsb0JBQW9CLEVBQUUsS0FBSztDQUM1QixDQUFDO0FBRUYsTUFBTSxPQUFPLGFBQWMsU0FBUSxVQUFVO0lBT2pDLFNBQVMsQ0FBQyxJQUFJO1FBQ3RCLE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDdkIsTUFBTSxVQUFVLEdBQUcsS0FBSyxDQUN0QixlQUFlLEVBQ2YsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLElBQUksRUFBRSxDQUM5QixDQUFDO1FBQ0YsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDM0MsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUVELElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLGlDQUNuQyxJQUFJLEtBQ1AsUUFBUSxFQUFFLEtBQUssS0FBSyxDQUFDLElBQ3JCLENBQUMsQ0FBQztRQUVKLE9BQU8sQ0FBQyxHQUFHLENBQUMsMENBQTBDLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFFcEUsV0FBVztRQUNYLE9BQU87WUFDTCxVQUFVO1lBQ1YsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ2pCLElBQUksRUFBRSxDQUFDO1lBQ1AsSUFBSSxFQUFFLElBQUk7WUFDVixVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUc7U0FDekIsQ0FBQztJQUNKLENBQUM7SUFFRCxRQUFRLENBQUMsS0FBSztRQUNaLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLEtBQUssR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDdEUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ2hELElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDO1FBQy9DLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxFQUFFO1lBQ3JDLElBQUksQ0FBQyxRQUFRLEdBQUcsU0FBUyxLQUFLLEtBQUssQ0FBQztRQUN0QyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsV0FBVyxDQUFDO0lBQ3BDLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGFTb3VyY2UgfSBmcm9tICdAbjctZnJvbnRlbmQvY29yZSc7XG5pbXBvcnQgeyBtZXJnZSB9IGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBQZGZWaWV3ZXJEYXRhIH0gZnJvbSAnLi4vY29tcG9uZW50cyc7XG5cbmNvbnN0IERFRkFVTFRfT1BUSU9OUyA9IHtcbiAgc2hvd1Rvb2xiYXI6IHRydWUsXG4gIHNob3dTaWRlYmFyQnV0dG9uOiB0cnVlLFxuICBzaG93RmluZEJ1dHRvbjogdHJ1ZSxcbiAgc2hvd1BhZ2luZ0J1dHRvbnM6IHRydWUsXG4gIHNob3dab29tQnV0dG9uczogdHJ1ZSxcbiAgc2hvd1ByZXNlbnRhdGlvbk1vZGVCdXR0b246IHRydWUsXG4gIHNob3dPcGVuRmlsZUJ1dHRvbjogZmFsc2UsXG4gIHNob3dQcmludEJ1dHRvbjogZmFsc2UsXG4gIHNob3dEb3dubG9hZEJ1dHRvbjogZmFsc2UsXG4gIHNob3dCb29rbWFya0J1dHRvbjogZmFsc2UsXG4gIHNob3dTZWNvbmRhcnlUb29sYmFyQnV0dG9uOiB0cnVlLFxuICBzaG93Um90YXRlQnV0dG9uOiBmYWxzZSxcbiAgc2hvd0hhbmRUb29sQnV0dG9uOiB0cnVlLFxuICBzaG93U2Nyb2xsaW5nQnV0dG9uOiBmYWxzZSxcbiAgc2hvd1NwcmVhZEJ1dHRvbjogZmFsc2UsXG4gIHNob3dQcm9wZXJ0aWVzQnV0dG9uOiBmYWxzZVxufTtcblxuZXhwb3J0IGNsYXNzIEF3U2NoZWRhUGRmRFMgZXh0ZW5kcyBEYXRhU291cmNlIHtcbiAgcHJpdmF0ZSBpdGVtczoge1xuICAgIGxhYmVsOiBzdHJpbmc7XG4gICAgdXJsOiBzdHJpbmc7XG4gICAgc2VsZWN0ZWQ6IGJvb2xlYW47XG4gIH1bXTtcblxuICBwcm90ZWN0ZWQgdHJhbnNmb3JtKGRhdGEpOiBQZGZWaWV3ZXJEYXRhIHtcbiAgICBjb25zdCB7IGl0ZW1zIH0gPSBkYXRhO1xuICAgIGNvbnN0IGxpYk9wdGlvbnMgPSBtZXJnZShcbiAgICAgIERFRkFVTFRfT1BUSU9OUyxcbiAgICAgIHRoaXMub3B0aW9ucy5saWJPcHRpb25zIHx8IHt9XG4gICAgKTtcbiAgICBpZiAoIShBcnJheS5pc0FycmF5KGl0ZW1zKSAmJiBpdGVtcy5sZW5ndGgpKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICB0aGlzLml0ZW1zID0gaXRlbXMubWFwKChpdGVtLCBpbmRleCkgPT4gKHtcbiAgICAgIC4uLml0ZW0sXG4gICAgICBzZWxlY3RlZDogaW5kZXggPT09IDBcbiAgICB9KSk7XG5cbiAgICBjb25zb2xlLmxvZygnbGliT3B0aW9ucy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tPicsIGxpYk9wdGlvbnMpO1xuXG4gICAgLy8gZGVmYXVsdHNcbiAgICByZXR1cm4ge1xuICAgICAgbGliT3B0aW9ucyxcbiAgICAgIGl0ZW1zOiB0aGlzLml0ZW1zLFxuICAgICAgbmV4dDogMSxcbiAgICAgIHByZXY6IG51bGwsXG4gICAgICBjdXJyZW50VXJsOiBpdGVtc1swXS51cmwsXG4gICAgfTtcbiAgfVxuXG4gIG9uQ2hhbmdlKGluZGV4KSB7XG4gICAgdGhpcy5vdXRwdXQubmV4dCA9IGluZGV4IDwgKHRoaXMuaXRlbXMubGVuZ3RoIC0gMSkgPyBpbmRleCArIDEgOiBudWxsO1xuICAgIHRoaXMub3V0cHV0LnByZXYgPSBpbmRleCA+IDAgPyBpbmRleCAtIDEgOiBudWxsO1xuICAgIHRoaXMub3V0cHV0LmN1cnJlbnRVcmwgPSB0aGlzLml0ZW1zW2luZGV4XS51cmw7XG4gICAgdGhpcy5pdGVtcy5mb3JFYWNoKChpdGVtLCBpdGVtSW5kZXgpID0+IHtcbiAgICAgIGl0ZW0uc2VsZWN0ZWQgPSBpdGVtSW5kZXggPT09IGluZGV4O1xuICAgIH0pO1xuICB9XG5cbiAgb25Mb2FkZWQoKSB7XG4gICAgdGhpcy5vdXRwdXQuY2xhc3NlcyA9ICdpcy1sb2FkZWQnO1xuICB9XG59XG4iXX0=